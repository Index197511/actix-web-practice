{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4","program":"/home/index197511/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--edition=2018","--crate-name","trust_dns_proto","/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=21d89a1536797e3d","-C","extra-filename=-21d89a1536797e3d","--out-dir","/home/index197511/actix-web-practice/http_server/target/rls/debug/deps","-L","dependency=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps","--extern","byteorder=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libbyteorder-0e4f7bc7c832062d.rmeta","--extern","enum_as_inner=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libenum_as_inner-9fae942acaa4ca4e.so","--extern","failure=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libfailure-50eb41dbc174f340.rmeta","--extern","futures=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libfutures-f1465c4a52b5615e.rmeta","--extern","idna=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libidna-98f7888dec620f53.rmeta","--extern","lazy_static=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/liblazy_static-a063aab377963054.rmeta","--extern","log=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/liblog-095ec6d69d67e652.rmeta","--extern","rand=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/librand-9f8d5aed8f24a0c9.rmeta","--extern","smallvec=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libsmallvec-f54fb49b9c75dd64.rmeta","--extern","socket2=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libsocket2-8be9cbf60d41708e.rmeta","--extern","tokio_executor=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_executor-67b429679912d148.rmeta","--extern","tokio_io=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_io-9a093e286ebcee18.rmeta","--extern","tokio_reactor=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_reactor-ab33bd2f34f096f3.rmeta","--extern","tokio_tcp=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_tcp-2bf910a86952a78d.rmeta","--extern","tokio_timer=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_timer-425cc18834afc993.rmeta","--extern","tokio_udp=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtokio_udp-a5f3d9b05c673c9b.rmeta","--extern","url=/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/liburl-1ac9613966dff20e.rmeta","--cap-lints","allow","-L","native=/home/index197511/actix-web-practice/http_server/target/rls/debug/build/backtrace-sys-25610e1d19a5527b/out","--error-format=json","--sysroot","/home/index197511/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/index197511/actix-web-practice/http_server/target/rls/debug/deps/libtrust_dns_proto-21d89a1536797e3d.rmeta"},"prelude":{"crate_id":{"name":"trust_dns_proto","disambiguator":[8473558413876564615,10312546916800200079]},"crate_root":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src","external_crates":[{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[10872931579835539693,12789071159449939682]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":16,"id":{"name":"enum_as_inner","disambiguator":[9722485870540162968,8781288594717760066]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":17,"id":{"name":"failure","disambiguator":[4136105454264097499,15683214051151674805]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":18,"id":{"name":"failure_derive","disambiguator":[10294380328603969428,13725261332649903982]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":19,"id":{"name":"backtrace","disambiguator":[391785847469008035,15243876195185329918]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":20,"id":{"name":"rustc_demangle","disambiguator":[10231732863478252398,12190656957785474055]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":21,"id":{"name":"cfg_if","disambiguator":[13583319368851408629,4810563495689936661]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":22,"id":{"name":"backtrace_sys","disambiguator":[4716492943673827670,14894051358055312392]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":23,"id":{"name":"libc","disambiguator":[16951308386329787197,9238021607635720415]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":24,"id":{"name":"futures","disambiguator":[4674354732864274231,486310031280575567]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":25,"id":{"name":"idna","disambiguator":[17695858767172770548,8456747029121385264]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":26,"id":{"name":"matches","disambiguator":[13621438281484879525,13253348379471942369]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":27,"id":{"name":"unicode_bidi","disambiguator":[10015203980160990361,6224384451528593251]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":28,"id":{"name":"unicode_normalization","disambiguator":[2623816970920473657,15689783190208160758]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":29,"id":{"name":"smallvec","disambiguator":[4837111284310157246,13020205197166008934]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":30,"id":{"name":"maybe_uninit","disambiguator":[6944596182463047552,7810656862658772866]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":31,"id":{"name":"lazy_static","disambiguator":[6740770218290746260,4056959873076346318]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":32,"id":{"name":"log","disambiguator":[3292208777694091655,6838420748907569633]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":33,"id":{"name":"rand","disambiguator":[10469804768232524933,9718683164962948172]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":34,"id":{"name":"rand_jitter","disambiguator":[3039775829019773353,13432740874318599482]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":35,"id":{"name":"rand_core","disambiguator":[12976026647228967848,3376161104954716142]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":36,"id":{"name":"rand_os","disambiguator":[6154806385026269696,16027505214252794836]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":37,"id":{"name":"rand_isaac","disambiguator":[17474421099431809469,12490111539732710728]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":38,"id":{"name":"rand_core","disambiguator":[15445939626396927231,16105632996978749532]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":39,"id":{"name":"rand_chacha","disambiguator":[709501613336370756,2115921289705800033]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":40,"id":{"name":"rand_hc","disambiguator":[4639385590061501300,12452759373326152982]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":41,"id":{"name":"rand_pcg","disambiguator":[10130334177229014,8819613049385480538]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":42,"id":{"name":"rand_xorshift","disambiguator":[6978997933165517166,16226752816046616394]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":43,"id":{"name":"socket2","disambiguator":[2359529279823207820,11857644523142074310]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":44,"id":{"name":"tokio_executor","disambiguator":[5602467214414018389,17823447453893622683]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":45,"id":{"name":"crossbeam_utils","disambiguator":[4783005765374139022,7262580745920274374]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":46,"id":{"name":"tokio_io","disambiguator":[8457410867201238171,16825736796274767732]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":47,"id":{"name":"bytes","disambiguator":[7806756736940257899,17359123478827918859]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":48,"id":{"name":"iovec","disambiguator":[10311985176323717883,9739965849064247143]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":49,"id":{"name":"tokio_reactor","disambiguator":[9721460350046444947,2552968996019118265]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":50,"id":{"name":"mio","disambiguator":[11877603198610332156,7768157841774701048]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":51,"id":{"name":"net2","disambiguator":[7648058072537947976,4811609485394654031]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":52,"id":{"name":"slab","disambiguator":[10638137633684842232,12136029273531708476]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":53,"id":{"name":"num_cpus","disambiguator":[5920237541360452830,8472699482888981766]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":54,"id":{"name":"parking_lot","disambiguator":[15042598404653163127,12761783715166607095]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":55,"id":{"name":"lock_api","disambiguator":[14151289864963157694,13443619908841207667]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":56,"id":{"name":"scopeguard","disambiguator":[10253496514066519894,14603779108236230003]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":57,"id":{"name":"parking_lot_core","disambiguator":[5766351579817518799,18229513737377877718]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":58,"id":{"name":"tokio_sync","disambiguator":[3866560052614577893,1995011031619807291]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":59,"id":{"name":"fnv","disambiguator":[9529978141576567288,16884345762956252490]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":60,"id":{"name":"tokio_tcp","disambiguator":[14374700108780981442,4918336217538738928]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":61,"id":{"name":"tokio_timer","disambiguator":[15678439475948065393,9621528609992956122]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":62,"id":{"name":"tokio_udp","disambiguator":[8467071674983876101,13253109037715171758]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":63,"id":{"name":"tokio_codec","disambiguator":[15456115243105805229,4264582313676276949]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":64,"id":{"name":"url","disambiguator":[14304236360972668250,5259996766653021793]}},{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","num":65,"id":{"name":"percent_encoding","disambiguator":[7459445058837309975,3678430297228922356]}}],"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":385,"byte_end":1837,"line_start":9,"line_end":71,"column_start":1,"column_end":81}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2290},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15589,"byte_end":15593,"line_start":27,"line_end":27,"column_start":21,"column_end":25},"alias_span":null,"name":"Edns","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2303},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15617,"byte_end":15623,"line_start":28,"line_end":28,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2383},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15647,"byte_end":15658,"line_start":29,"line_end":29,"column_start":23,"column_end":34},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15684,"byte_end":15691,"line_start":30,"line_end":30,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":280},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15693,"byte_end":15709,"line_start":30,"line_end":30,"column_start":34,"column_end":50},"alias_span":null,"name":"MessageFinalizer","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15711,"byte_end":15731,"line_start":30,"line_end":30,"column_start":52,"column_end":72},"alias_span":null,"name":"NoopMessageFinalizer","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2414},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15757,"byte_end":15763,"line_start":31,"line_end":31,"column_start":24,"column_end":30},"alias_span":null,"name":"OpCode","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2432},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15786,"byte_end":15791,"line_start":32,"line_end":32,"column_start":22,"column_end":27},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2448},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15822,"byte_end":15834,"line_start":33,"line_end":33,"column_start":30,"column_end":42},"alias_span":null,"name":"ResponseCode","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":474},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103199,"byte_end":103208,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"alias_span":null,"name":"IntoLabel","value":"","parent":{"krate":0,"index":401}},{"kind":"Use","ref_id":{"krate":0,"index":2527},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103210,"byte_end":103215,"line_start":15,"line_end":15,"column_start":34,"column_end":39},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":401}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103239,"byte_end":103247,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":401}},{"kind":"Use","ref_id":{"krate":0,"index":2534},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103249,"byte_end":103253,"line_start":16,"line_end":16,"column_start":32,"column_end":36},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":401}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103284,"byte_end":103294,"line_start":17,"line_end":17,"column_start":29,"column_end":39},"alias_span":null,"name":"TryParseIp","value":"","parent":{"krate":0,"index":401}},{"kind":"Use","ref_id":{"krate":0,"index":2794},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197556,"byte_end":197559,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"CAA","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2870},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197579,"byte_end":197581,"line_start":38,"line_end":38,"column_start":19,"column_end":21},"alias_span":null,"name":"MX","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2885},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197604,"byte_end":197609,"line_start":39,"line_end":39,"column_start":22,"column_end":27},"alias_span":null,"name":"NAPTR","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2904},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197631,"byte_end":197635,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"NULL","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2920},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197663,"byte_end":197673,"line_start":41,"line_end":41,"column_start":27,"column_end":37},"alias_span":null,"name":"OPENPGPKEY","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2934},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197694,"byte_end":197697,"line_start":42,"line_end":42,"column_start":20,"column_end":23},"alias_span":null,"name":"OPT","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":3033},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197718,"byte_end":197721,"line_start":43,"line_end":43,"column_start":20,"column_end":23},"alias_span":null,"name":"SOA","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197742,"byte_end":197745,"line_start":44,"line_end":44,"column_start":20,"column_end":23},"alias_span":null,"name":"SRV","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":3070},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197768,"byte_end":197773,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"alias_span":null,"name":"SSHFP","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":3136},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197795,"byte_end":197799,"line_start":46,"line_end":46,"column_start":21,"column_end":25},"alias_span":null,"name":"TLSA","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":3228},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197820,"byte_end":197823,"line_start":47,"line_end":47,"column_start":20,"column_end":23},"alias_span":null,"name":"TXT","value":"","parent":{"krate":0,"index":728}},{"kind":"Use","ref_id":{"krate":0,"index":2500},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97561,"byte_end":97569,"line_start":30,"line_end":30,"column_start":26,"column_end":34},"alias_span":null,"name":"DNSClass","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":663},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97594,"byte_end":97602,"line_start":31,"line_end":31,"column_start":24,"column_end":32},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":2534},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97604,"byte_end":97608,"line_start":31,"line_end":31,"column_start":34,"column_end":38},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":679},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97610,"byte_end":97620,"line_start":31,"line_end":31,"column_start":40,"column_end":50},"alias_span":null,"name":"TryParseIp","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":3242},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97650,"byte_end":97655,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"alias_span":null,"name":"RData","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":3328},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97684,"byte_end":97694,"line_start":33,"line_end":33,"column_start":28,"column_end":38},"alias_span":null,"name":"RecordType","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":3387},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97720,"byte_end":97726,"line_start":34,"line_end":34,"column_start":25,"column_end":31},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":1145},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97771,"byte_end":97784,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"IntoRecordSet","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":3401},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97808,"byte_end":97817,"line_start":37,"line_end":37,"column_start":23,"column_end":32},"alias_span":null,"name":"RecordSet","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":3416},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97841,"byte_end":97853,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"alias_span":null,"name":"RrsetRecords","value":"","parent":{"krate":0,"index":369}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447281,"byte_end":447291,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"alias_span":null,"name":"BinDecoder","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1240},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447316,"byte_end":447326,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"alias_span":null,"name":"BinEncoder","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447351,"byte_end":447361,"line_start":25,"line_end":25,"column_start":24,"column_end":34},"alias_span":null,"name":"EncodeMode","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":3445},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447388,"byte_end":447396,"line_start":26,"line_end":26,"column_start":26,"column_end":34},"alias_span":null,"name":"Restrict","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447398,"byte_end":447412,"line_start":26,"line_end":26,"column_start":36,"column_end":50},"alias_span":null,"name":"RestrictedMath","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1334},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447414,"byte_end":447422,"line_start":26,"line_end":26,"column_start":52,"column_end":60},"alias_span":null,"name":"Verified","value":"","parent":{"krate":0,"index":1172}},{"kind":"Use","ref_id":{"krate":0,"index":1473},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/mod.rs","byte_start":485829,"byte_end":485845,"line_start":22,"line_end":22,"column_start":35,"column_end":51},"alias_span":null,"name":"TcpClientConnect","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/mod.rs","byte_start":485847,"byte_end":485862,"line_start":22,"line_end":22,"column_start":53,"column_end":68},"alias_span":null,"name":"TcpClientStream","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/mod.rs","byte_start":485891,"byte_end":485900,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1428}},{"kind":"Use","ref_id":{"krate":0,"index":1631},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","byte_start":515331,"byte_end":515347,"line_start":22,"line_end":22,"column_start":35,"column_end":51},"alias_span":null,"name":"UdpClientConnect","value":"","parent":{"krate":0,"index":1559}},{"kind":"Use","ref_id":{"krate":0,"index":1590},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","byte_start":515349,"byte_end":515364,"line_start":22,"line_end":22,"column_start":53,"column_end":68},"alias_span":null,"name":"UdpClientStream","value":"","parent":{"krate":0,"index":1559}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","byte_start":515366,"byte_end":515377,"line_start":22,"line_end":22,"column_start":70,"column_end":81},"alias_span":null,"name":"UdpResponse","value":"","parent":{"krate":0,"index":1559}},{"kind":"Use","ref_id":{"krate":0,"index":1699},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","byte_start":515406,"byte_end":515415,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"UdpStream","value":"","parent":{"krate":0,"index":1559}},{"kind":"Use","ref_id":{"krate":0,"index":1759},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546309,"byte_end":546320,"line_start":26,"line_end":26,"column_start":30,"column_end":41},"alias_span":null,"name":"DnsExchange","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1778},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546322,"byte_end":546340,"line_start":26,"line_end":26,"column_start":43,"column_end":61},"alias_span":null,"name":"DnsExchangeConnect","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3454},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546370,"byte_end":546384,"line_start":27,"line_end":27,"column_start":28,"column_end":42},"alias_span":null,"name":"BasicDnsHandle","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1849},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546386,"byte_end":546395,"line_start":27,"line_end":27,"column_start":44,"column_end":53},"alias_span":null,"name":"DnsHandle","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1837},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546397,"byte_end":546412,"line_start":27,"line_end":27,"column_start":55,"column_end":70},"alias_span":null,"name":"DnsStreamHandle","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546414,"byte_end":546426,"line_start":27,"line_end":27,"column_start":72,"column_end":84},"alias_span":null,"name":"StreamHandle","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546466,"byte_end":546480,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"alias_span":null,"name":"DnsMultiplexer","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546482,"byte_end":546503,"line_start":29,"line_end":29,"column_start":21,"column_end":42},"alias_span":null,"name":"DnsMultiplexerConnect","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":1966},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546505,"byte_end":546533,"line_start":29,"line_end":29,"column_start":44,"column_end":72},"alias_span":null,"name":"DnsMultiplexerSerialResponse","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3465},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546566,"byte_end":546576,"line_start":31,"line_end":31,"column_start":29,"column_end":39},"alias_span":null,"name":"DnsRequest","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3459},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546578,"byte_end":546595,"line_start":31,"line_end":31,"column_start":41,"column_end":58},"alias_span":null,"name":"DnsRequestOptions","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3470},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546626,"byte_end":546637,"line_start":32,"line_end":32,"column_start":29,"column_end":40},"alias_span":null,"name":"DnsResponse","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3478},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546671,"byte_end":546685,"line_start":33,"line_end":33,"column_start":33,"column_end":47},"alias_span":null,"name":"RetryDnsHandle","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":2063},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546794,"byte_end":546807,"line_start":36,"line_end":36,"column_start":31,"column_end":44},"alias_span":null,"name":"SerialMessage","value":"","parent":{"krate":0,"index":1726}},{"kind":"Use","ref_id":{"krate":0,"index":3454},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1445,"byte_end":1459,"line_start":62,"line_end":62,"column_start":35,"column_end":49},"alias_span":null,"name":"BasicDnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1849},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1461,"byte_end":1470,"line_start":62,"line_end":62,"column_start":51,"column_end":60},"alias_span":null,"name":"DnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1837},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1472,"byte_end":1487,"line_start":62,"line_end":62,"column_start":62,"column_end":77},"alias_span":null,"name":"DnsStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1833},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1489,"byte_end":1501,"line_start":62,"line_end":62,"column_start":79,"column_end":91},"alias_span":null,"name":"StreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1557,"byte_end":1571,"line_start":64,"line_end":64,"column_start":39,"column_end":53},"alias_span":null,"name":"DnsMultiplexer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3478},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1627,"byte_end":1641,"line_start":66,"line_end":66,"column_start":40,"column_end":54},"alias_span":null,"name":"RetryDnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2099},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1779,"byte_end":1797,"line_start":71,"line_end":71,"column_start":23,"column_end":41},"alias_span":null,"name":"BufDnsStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3485},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1799,"byte_end":1814,"line_start":71,"line_end":71,"column_start":43,"column_end":58},"alias_span":null,"name":"BufStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2098},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1816,"byte_end":1835,"line_start":71,"line_end":71,"column_start":60,"column_end":79},"alias_span":null,"name":"MessageStreamHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":385,"byte_end":1837,"line_start":9,"line_end":71,"column_start":1,"column_end":81},"name":"","qualname":"::","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":105},{"krate":0,"index":369},{"krate":0,"index":1171},{"krate":0,"index":1428},{"krate":0,"index":1559},{"krate":0,"index":1726},{"krate":0,"index":2169},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176}],"decl_id":null,"docs":" Trust-DNS Protocol library\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":385,"byte_end":407,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":408,"byte_end":436,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":2180},{"krate":0,"index":2276},{"krate":0,"index":2273},{"krate":0,"index":2271},{"krate":0,"index":2263},{"krate":0,"index":2268},{"krate":0,"index":2278},{"krate":0,"index":2280},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" Error types for the crate\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":2225,"byte_end":2247,"line_start":10,"line_end":10,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":2761,"byte_end":2772,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ProtoResult","qualname":"::error::ProtoResult","value":"::std::result::Result<T, ProtoError>","parent":null,"children":[],"decl_id":null,"docs":" An alias for results returned by functions of this crate\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2181},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3046,"byte_end":3054,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Canceled","qualname":"::error::ProtoErrorKind::Canceled","value":"ProtoErrorKind::Canceled(::futures::sync::oneshot::Canceled)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An error caused by a canceled future\n","sig":null,"attributes":[{"value":"fail(display = \"future was canceled: {:?}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":2991,"byte_end":3041,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":2184},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3211,"byte_end":3231,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"CharacterDataTooLong","qualname":"::error::ProtoErrorKind::CharacterDataTooLong","value":"ProtoErrorKind::CharacterDataTooLong { max, len }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Character data length exceeded the limit\n","sig":null,"attributes":[{"value":"fail(display = \"char data length exceeds {}: {}\", _0, _1)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3146,"byte_end":3206,"line_start":40,"line_end":40,"column_start":5,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":2187},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3438,"byte_end":3460,"line_start":50,"line_end":50,"column_start":5,"column_end":27},"name":"LabelOverlapsWithOther","qualname":"::error::ProtoErrorKind::LabelOverlapsWithOther","value":"ProtoErrorKind::LabelOverlapsWithOther { label, other }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Overlapping labels\n","sig":null,"attributes":[{"value":"fail(display = \"overlapping labels name {} other {}\", _0, _1)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3369,"byte_end":3433,"line_start":49,"line_end":49,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3735,"byte_end":3753,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"DnsKeyProtocolNot3","qualname":"::error::ProtoErrorKind::DnsKeyProtocolNot3","value":"ProtoErrorKind::DnsKeyProtocolNot3(u8)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" DNS protocol version doesn't have the expected version 3\n","sig":null,"attributes":[{"value":"fail(display = \"dns key value unknown, must be 3: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3669,"byte_end":3730,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2193},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3859,"byte_end":3876,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"name":"DomainNameTooLong","qualname":"::error::ProtoErrorKind::DomainNameTooLong","value":"ProtoErrorKind::DomainNameTooLong(usize)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" A domain name was too long\n","sig":null,"attributes":[{"value":"fail(display = \"name label data exceed 255: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3799,"byte_end":3854,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4075,"byte_end":4090,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"EdnsNameNotRoot","qualname":"::error::ProtoErrorKind::EdnsNameNotRoot","value":"ProtoErrorKind::EdnsNameNotRoot(crate::rr::Name)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" EDNS resource record label is not the root label, although required\n","sig":null,"attributes":[{"value":"fail(display = \"edns resource record label must be the root label (.): {}\",\n       _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":3966,"byte_end":4070,"line_start":66,"line_end":69,"column_start":5,"column_end":7}}]},{"kind":"StructVariant","id":{"krate":0,"index":2199},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4248,"byte_end":4272,"line_start":74,"line_end":74,"column_start":5,"column_end":29},"name":"IncorrectRDataLengthRead","qualname":"::error::ProtoErrorKind::IncorrectRDataLengthRead","value":"ProtoErrorKind::IncorrectRDataLengthRead { read, len }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" The length of rdata read was not as expected\n","sig":null,"attributes":[{"value":"fail(display = \"incorrect rdata length read: {} expected: {}\", read, len)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4167,"byte_end":4243,"line_start":73,"line_end":73,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4508,"byte_end":4525,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"LabelBytesTooLong","qualname":"::error::ProtoErrorKind::LabelBytesTooLong","value":"ProtoErrorKind::LabelBytesTooLong(usize)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Label bytes exceeded the limit of 63\n","sig":null,"attributes":[{"value":"fail(display = \"label bytes exceed 63: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4453,"byte_end":4503,"line_start":82,"line_end":82,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":2205},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4667,"byte_end":4689,"line_start":87,"line_end":87,"column_start":5,"column_end":27},"name":"PointerNotPriorToLabel","qualname":"::error::ProtoErrorKind::PointerNotPriorToLabel","value":"ProtoErrorKind::PointerNotPriorToLabel { idx, ptr }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Label bytes exceeded the limit of 63\n","sig":null,"attributes":[{"value":"fail(display = \"label points to data not prior to idx: {} ptr: {}\", _0, _1)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4584,"byte_end":4662,"line_start":86,"line_end":86,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4958,"byte_end":4979,"line_start":96,"line_end":96,"column_start":5,"column_end":26},"name":"MaxBufferSizeExceeded","qualname":"::error::ProtoErrorKind::MaxBufferSizeExceeded","value":"ProtoErrorKind::MaxBufferSizeExceeded(usize)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" The maximum buffer size was exceeded\n","sig":null,"attributes":[{"value":"fail(display = \"maximum buffer size exceeded: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":4896,"byte_end":4953,"line_start":95,"line_end":95,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2211},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5096,"byte_end":5103,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Message","qualname":"::error::ProtoErrorKind::Message","value":"ProtoErrorKind::Message(&'static str)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An error with an arbitrary message, referenced as &'static str\n","sig":null,"attributes":[{"value":"fail(display = \"{}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5064,"byte_end":5091,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5217,"byte_end":5220,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"Msg","qualname":"::error::ProtoErrorKind::Msg","value":"ProtoErrorKind::Msg(String)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An error with an arbitrary message, stored as String\n","sig":null,"attributes":[{"value":"fail(display = \"{}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5185,"byte_end":5212,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5310,"byte_end":5317,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"NoError","qualname":"::error::ProtoErrorKind::NoError","value":"ProtoErrorKind::NoError","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" No error was specified\n","sig":null,"attributes":[{"value":"fail(display = \"no error specified\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5266,"byte_end":5305,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":2219},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5448,"byte_end":5468,"line_start":112,"line_end":112,"column_start":5,"column_end":25},"name":"NotAllRecordsWritten","qualname":"::error::ProtoErrorKind::NotAllRecordsWritten","value":"ProtoErrorKind::NotAllRecordsWritten { count }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Not all records were able to be written\n","sig":null,"attributes":[{"value":"fail(display = \"not all records could be written, wrote: {}\", count)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5372,"byte_end":5443,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5722,"byte_end":5738,"line_start":122,"line_end":122,"column_start":5,"column_end":21},"name":"RrsigsNotPresent","qualname":"::error::ProtoErrorKind::RrsigsNotPresent","value":"ProtoErrorKind::RrsigsNotPresent { name, record_type }","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Missing rrsigs\n","sig":null,"attributes":[{"value":"fail(display =\n           \"rrsigs are not present for record set name: {} record_type: {}\",\n       name,\n       record_type)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5593,"byte_end":5717,"line_start":118,"line_end":121,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2224},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5972,"byte_end":5997,"line_start":131,"line_end":131,"column_start":5,"column_end":30},"name":"UnknownAlgorithmTypeValue","qualname":"::error::ProtoErrorKind::UnknownAlgorithmTypeValue","value":"ProtoErrorKind::UnknownAlgorithmTypeValue(u8)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unknown algorithm type was found\n","sig":null,"attributes":[{"value":"fail(display = \"algorithm type value unknown: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":5910,"byte_end":5967,"line_start":130,"line_end":130,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6105,"byte_end":6123,"line_start":135,"line_end":135,"column_start":5,"column_end":23},"name":"UnknownDnsClassStr","qualname":"::error::ProtoErrorKind::UnknownDnsClassStr","value":"ProtoErrorKind::UnknownDnsClassStr(String)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unknown dns class was found\n","sig":null,"attributes":[{"value":"fail(display = \"dns class string unknown: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6047,"byte_end":6100,"line_start":134,"line_end":134,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6240,"byte_end":6260,"line_start":139,"line_end":139,"column_start":5,"column_end":25},"name":"UnknownDnsClassValue","qualname":"::error::ProtoErrorKind::UnknownDnsClassValue","value":"ProtoErrorKind::UnknownDnsClassValue(u16)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unknown dns class value was found\n","sig":null,"attributes":[{"value":"fail(display = \"dns class value unknown: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6183,"byte_end":6235,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6380,"byte_end":6400,"line_start":143,"line_end":143,"column_start":5,"column_end":25},"name":"UnknownRecordTypeStr","qualname":"::error::ProtoErrorKind::UnknownRecordTypeStr","value":"ProtoErrorKind::UnknownRecordTypeStr(String)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unknown record type string was found\n","sig":null,"attributes":[{"value":"fail(display = \"record type string unknown: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6320,"byte_end":6375,"line_start":142,"line_end":142,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6521,"byte_end":6543,"line_start":147,"line_end":147,"column_start":5,"column_end":27},"name":"UnknownRecordTypeValue","qualname":"::error::ProtoErrorKind::UnknownRecordTypeValue","value":"ProtoErrorKind::UnknownRecordTypeValue(u16)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unknown record type value was found\n","sig":null,"attributes":[{"value":"fail(display = \"record type value unknown: {}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6462,"byte_end":6516,"line_start":146,"line_end":146,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6659,"byte_end":6680,"line_start":151,"line_end":151,"column_start":5,"column_end":26},"name":"UnrecognizedLabelCode","qualname":"::error::ProtoErrorKind::UnrecognizedLabelCode","value":"ProtoErrorKind::UnrecognizedLabelCode(u8)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An unrecognized label code was found\n","sig":null,"attributes":[{"value":"fail(display = \"unrecognized label code: {:b}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6600,"byte_end":6654,"line_start":150,"line_end":150,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6803,"byte_end":6825,"line_start":155,"line_end":155,"column_start":5,"column_end":27},"name":"UnrecognizedNsec3Flags","qualname":"::error::ProtoErrorKind::UnrecognizedNsec3Flags","value":"ProtoErrorKind::UnrecognizedNsec3Flags(u8)","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Unrecognized nsec3 flags were found\n","sig":null,"attributes":[{"value":"fail(display = \"nsec3 flags should be 0b0000000*: {:b}\", _0)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6735,"byte_end":6798,"line_start":154,"line_end":154,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6923,"byte_end":6925,"line_start":160,"line_end":160,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ProtoErrorKind::Io","value":"ProtoErrorKind::Io","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An error got returned from IO\n","sig":null,"attributes":[{"value":"fail(display = \"io error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6889,"byte_end":6918,"line_start":159,"line_end":159,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7007,"byte_end":7015,"line_start":164,"line_end":164,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::error::ProtoErrorKind::Poisoned","value":"ProtoErrorKind::Poisoned","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Any sync poised error\n","sig":null,"attributes":[{"value":"fail(display = \"lock poisoned error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":6962,"byte_end":7002,"line_start":163,"line_end":163,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2249},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7079,"byte_end":7083,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ring","qualname":"::error::ProtoErrorKind::Ring","value":"ProtoErrorKind::Ring","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" A ring error\n","sig":null,"attributes":[{"value":"fail(display = \"ring error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7043,"byte_end":7074,"line_start":167,"line_end":167,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2251},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7159,"byte_end":7169,"line_start":172,"line_end":172,"column_start":5,"column_end":15},"name":"SpawnError","qualname":"::error::ProtoErrorKind::SpawnError","value":"ProtoErrorKind::SpawnError","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" Tokio Spawn Error\n","sig":null,"attributes":[{"value":"fail(display = \"tokio spawn error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7116,"byte_end":7154,"line_start":171,"line_end":171,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7232,"byte_end":7235,"line_start":176,"line_end":176,"column_start":5,"column_end":8},"name":"SSL","qualname":"::error::ProtoErrorKind::SSL","value":"ProtoErrorKind::SSL","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An ssl error\n","sig":null,"attributes":[{"value":"fail(display = \"ssl error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7197,"byte_end":7227,"line_start":175,"line_end":175,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2255},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7307,"byte_end":7312,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Timer","qualname":"::error::ProtoErrorKind::Timer","value":"ProtoErrorKind::Timer","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" A tokio timer error\n","sig":null,"attributes":[{"value":"fail(display = \"timer error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7270,"byte_end":7302,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2257},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7390,"byte_end":7397,"line_start":184,"line_end":184,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::error::ProtoErrorKind::Timeout","value":"ProtoErrorKind::Timeout","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" A request timed out\n","sig":null,"attributes":[{"value":"fail(display = \"request timed out\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7347,"byte_end":7385,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7476,"byte_end":7486,"line_start":188,"line_end":188,"column_start":5,"column_end":15},"name":"UrlParsing","qualname":"::error::ProtoErrorKind::UrlParsing","value":"ProtoErrorKind::UrlParsing","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" An url parsing error\n","sig":null,"attributes":[{"value":"fail(display = \"url parsing error\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7433,"byte_end":7471,"line_start":187,"line_end":187,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2261},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7573,"byte_end":7577,"line_start":192,"line_end":192,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::ProtoErrorKind::Utf8","value":"ProtoErrorKind::Utf8","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":" A utf8 parsing error\n","sig":null,"attributes":[{"value":"fail(display = \"error parsing utf8 string\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7522,"byte_end":7568,"line_start":191,"line_end":191,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":2180},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":2925,"byte_end":2939,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ProtoErrorKind","qualname":"::error::ProtoErrorKind","value":"ProtoErrorKind::{Canceled, CharacterDataTooLong, LabelOverlapsWithOther, DnsKeyProtocolNot3, DomainNameTooLong, EdnsNameNotRoot, IncorrectRDataLengthRead, LabelBytesTooLong, PointerNotPriorToLabel, MaxBufferSizeExceeded, Message, Msg, NoError, NotAllRecordsWritten, RrsigsNotPresent, UnknownAlgorithmTypeValue, UnknownDnsClassStr, UnknownDnsClassValue, UnknownRecordTypeStr, UnknownRecordTypeValue, UnrecognizedLabelCode, UnrecognizedNsec3Flags, Io, Poisoned, Ring, SpawnError, SSL, Timer, Timeout, UrlParsing, Utf8}","parent":null,"children":[{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2187},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2253},{"krate":0,"index":2255},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2261}],"decl_id":null,"docs":" The error kind for errors that get returned in the crate\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":2916,"byte_end":7580,"line_start":34,"line_end":193,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":2278},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7671,"byte_end":7681,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"ProtoError","qualname":"::error::ProtoError","value":"ProtoError {  }","parent":null,"children":[{"krate":0,"index":2279}],"decl_id":null,"docs":" The error type for errors that get returned in the crate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7786,"byte_end":7790,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"kind","qualname":"<ProtoError>::kind","value":"fn (&self) -> &ProtoErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of the error\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":83},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10949,"byte_end":10960,"line_start":332,"line_end":332,"column_start":9,"column_end":20},"name":"not_openssl","qualname":"::error::not_openssl","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":85},{"krate":0,"index":87}],"decl_id":null,"docs":" Stubs for running without OpenSSL\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"openssl\"))","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10908,"byte_end":10940,"line_start":331,"line_end":331,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11039,"byte_end":11052,"line_start":337,"line_end":337,"column_start":16,"column_end":29},"name":"SslErrorStack","qualname":"::error::not_openssl::SslErrorStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" SslErrorStac stub\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":89},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11436,"byte_end":11444,"line_start":354,"line_end":354,"column_start":9,"column_end":17},"name":"not_ring","qualname":"::error::not_ring","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" Types used without ring\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"ring\"))","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11398,"byte_end":11427,"line_start":353,"line_end":353,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2286},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11539,"byte_end":11550,"line_start":359,"line_end":359,"column_start":16,"column_end":27},"name":"Unspecified","qualname":"::error::not_ring::Unspecified","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Unspecified error replacement\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":102},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14552,"byte_end":14566,"line_start":439,"line_end":439,"column_start":11,"column_end":25},"name":"FromProtoError","qualname":"::error::FromProtoError","value":"FromProtoError: From<ProtoError> + Fail + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait marking a type which implements From<ProtoError> and\n failure::Fail (which includes all std::error::Error types)\n as well as Clone + Send\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op","qualname":"::op","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":145},{"krate":0,"index":189},{"krate":0,"index":308},{"krate":0,"index":315},{"krate":0,"index":343},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"decl_id":null,"docs":" Operations to send with a `Client` or server, e.g. `Query`, `Message`, or `UpdateMessage` can\n be used to gether to either query or update resource records sets.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2290},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":16896,"byte_end":16900,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Edns","qualname":"::op::edns::Edns","value":"Edns {  }","parent":null,"children":[{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295}],"decl_id":null,"docs":" Edns implements the higher level concepts for working with extended dns as it is used to create or be\n created from OPT record data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17591,"byte_end":17594,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Edns>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new extended DNS object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17722,"byte_end":17732,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"rcode_high","qualname":"<Edns>::rcode_high","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The high order bytes for the response code in the DNS Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17823,"byte_end":17830,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"version","qualname":"<Edns>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17954,"byte_end":17963,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<Edns>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Specifies that DNSSec is supported for this Client or Server\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18072,"byte_end":18083,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Edns>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum supported size of the DNS payload\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18195,"byte_end":18201,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"option","qualname":"<Edns>::option","value":"fn (&self, code: EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Option associated with the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18343,"byte_end":18350,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"options","qualname":"<Edns>::options","value":"fn (&self) -> &OPT","parent":null,"children":[],"decl_id":null,"docs":" Returns the options portion of EDNS\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18461,"byte_end":18475,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_rcode_high","qualname":"<Edns>::set_rcode_high","value":"fn (&mut self, rcode_high: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the high order bits for the result code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18589,"byte_end":18600,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"set_version","qualname":"<Edns>::set_version","value":"fn (&mut self, version: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18719,"byte_end":18732,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"set_dnssec_ok","qualname":"<Edns>::set_dnssec_ok","value":"fn (&mut self, dnssec_ok: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set to true if DNSSec is supported\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":18950,"byte_end":18965,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"set_max_payload","qualname":"<Edns>::set_max_payload","value":"fn (&mut self, max_payload: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum payload which can be supported\n From RFC 6891: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":19102,"byte_end":19112,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"set_option","qualname":"<Edns>::set_option","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the specified EDNS option\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":145},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::op::header","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":2303},{"krate":0,"index":2381},{"krate":0,"index":2379},{"krate":0,"index":2376},{"krate":0,"index":2318},{"krate":0,"index":2383},{"krate":0,"index":2395},{"krate":0,"index":2393},{"krate":0,"index":2391},{"krate":0,"index":2390},{"krate":0,"index":2388},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":184},{"krate":0,"index":186}],"decl_id":null,"docs":" Message metadata\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2303},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25122,"byte_end":25128,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Header","qualname":"::op::header::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317}],"decl_id":null,"docs":" Metadata for the `Message` struct.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25715,"byte_end":25720,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::header::MessageType::Query","value":"MessageType::Query","parent":{"krate":0,"index":2383},"children":[],"decl_id":null,"docs":" Queries are Client requests, these are either Queries or Updates\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2386},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25788,"byte_end":25796,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"name":"Response","qualname":"::op::header::MessageType::Response","value":"MessageType::Response","parent":{"krate":0,"index":2383},"children":[],"decl_id":null,"docs":" Response message from the Server or upstream Resolver\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2383},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25624,"byte_end":25635,"line_start":78,"line_end":78,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::op::header::MessageType","value":"MessageType::{Query, Response}","parent":null,"children":[{"krate":0,"index":2384},{"krate":0,"index":2386}],"decl_id":null,"docs":" Message types are either Query (also Update) or Response\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25615,"byte_end":25799,"line_start":78,"line_end":83,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26516,"byte_end":26519,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" A default Header, not very useful.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26645,"byte_end":26648,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<Header>::len","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Length of the header, always 12 bytes\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26616,"byte_end":26633,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26792,"byte_end":26798,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Header>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the id of the message, for queries this shoudl be random.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26954,"byte_end":26970,"line_start":126,"line_end":126,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Header>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the message type, Queries and Updates both use Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":27144,"byte_end":27155,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Header>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the operation code for the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":27337,"byte_end":27354,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Header>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From the server is specifies that it is an authoritative reqponse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":27607,"byte_end":27620,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Header>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the records were too large for the payload.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":27823,"byte_end":27844,"line_start":152,"line_end":152,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Header>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the resolver should recursiviley request data from upstream DNS nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":28058,"byte_end":28081,"line_start":158,"line_end":158,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Header>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that recursion is available from this or the remote resolver\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":28331,"byte_end":28349,"line_start":164,"line_end":164,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Header>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the data is authnetic, i.e. the resolver believes all data to be valid through DNSSec\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":28591,"byte_end":28612,"line_start":170,"line_end":170,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Header>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Used during recursive resolution to specified if a resolver should or should not validate DNSSec signatures\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":28827,"byte_end":28844,"line_start":176,"line_end":176,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Header>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The low responsed code (original response codes before EDNS extensions)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":29028,"byte_end":29043,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"set_query_count","qualname":"<Header>::set_query_count","value":"fn (&mut self, query_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number or query records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":29207,"byte_end":29223,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"set_answer_count","qualname":"<Header>::set_answer_count","value":"fn (&mut self, answer_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of answer records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":29395,"byte_end":29416,"line_start":194,"line_end":194,"column_start":12,"column_end":33},"name":"set_name_server_count","qualname":"<Header>::set_name_server_count","value":"fn (&mut self, name_server_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of name server records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":29602,"byte_end":29622,"line_start":200,"line_end":200,"column_start":12,"column_end":32},"name":"set_additional_count","qualname":"<Header>::set_additional_count","value":"fn (&mut self, additional_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of additional records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":30083,"byte_end":30085,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"id","qualname":"<Header>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ID              A 16 bit identifier assigned by the program that\n                 generates any kind of query.  This identifier is copied\n                 the corresponding reply and can be used by the requester\n                 to match up replies to outstanding queries.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":30299,"byte_end":30311,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Header>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QR              A one bit field that specifies whether this message is a\n                 query (0), or a response (1).\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":30659,"byte_end":30666,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Header>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" ```text\n OPCODE          A four bit field that specifies kind of query in this\n                 message.  This value is set by the originator of a query\n                 and copied into the response.  The values are: <see super::op_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":31295,"byte_end":31308,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Header>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n AA              Authoritative Answer - this bit is valid in responses,\n                 and specifies that the responding name server is an\n                 authority for the domain name in question section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":31597,"byte_end":31606,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Header>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TC              TrunCation - specifies that this message was truncated\n                 due to length greater than that permitted on the\n                 transmission channel.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":31986,"byte_end":32003,"line_start":261,"line_end":261,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Header>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RD              Recursion Desired - this bit may be set in a query and\n                 is copied into the response.  If RD is set, it directs\n                 the name server to pursue the query recursively.\n                 Recursive query support is optional.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":32310,"byte_end":32329,"line_start":270,"line_end":270,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Header>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RA              Recursion Available - this be is set or cleared in a\n                 response, and denotes whether recursive query support is\n                 available in the name server.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":34064,"byte_end":34078,"line_start":304,"line_end":304,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Header>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4035, DNSSEC Resource Records, March 2005](https://tools.ietf.org/html/rfc4035#section-3.1.6)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":34176,"byte_end":34193,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Header>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `is_authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":34496,"byte_end":34509,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Header>::response_code","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RCODE           Response code - this 4 bit field is set as part of\n                 responses.  The values have the following\n                 interpretation: <see super::response_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":34951,"byte_end":34962,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"query_count","qualname":"<Header>::query_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QDCOUNT         an unsigned 16 bit integer specifying the number of\n                 entries in the question section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":35400,"byte_end":35412,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"answer_count","qualname":"<Header>::answer_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ANCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the answer section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":36048,"byte_end":36065,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"name_server_count","qualname":"<Header>::name_server_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" for queries this is the nameservers which are authorities for the SOA of the Record\n for updates this is the update record count\n ```text\n NSCOUNT         an unsigned 16 bit integer specifying the number of name\n                 server resource records in the authority records\n                 section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":36442,"byte_end":36458,"line_start":372,"line_end":372,"column_start":12,"column_end":28},"name":"additional_count","qualname":"<Header>::additional_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ARCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the additional records section.\n ```","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":189},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::op::message","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":2397},{"krate":0,"index":2412},{"krate":0,"index":2410},{"krate":0,"index":2407},{"krate":0,"index":2405},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":298},{"krate":0,"index":303},{"krate":0,"index":305}],"decl_id":null,"docs":" Basic protocol message for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2397},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":45375,"byte_end":45382,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"Message","qualname":"::op::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404}],"decl_id":null,"docs":" The basic request and response datastructure, used for all DNS protocols.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":211},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":45645,"byte_end":45665,"line_start":86,"line_end":86,"column_start":8,"column_end":28},"name":"update_header_counts","qualname":"::op::message::update_header_counts","value":"fn (current_header: &Header, is_truncated: bool, counts: HeaderCounts) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Header with accurate counts for each Message section\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46486,"byte_end":46498,"line_start":109,"line_end":109,"column_start":12,"column_end":24},"name":"HeaderCounts","qualname":"::op::message::HeaderCounts","value":"HeaderCounts { query_count, answer_count, nameserver_count, additional_count }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" Tracks the counts of the records in the Message.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":213},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46554,"byte_end":46565,"line_start":111,"line_end":111,"column_start":9,"column_end":20},"name":"query_count","qualname":"::op::message::HeaderCounts::query_count","value":"usize","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" The number of queries in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":214},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46627,"byte_end":46639,"line_start":113,"line_end":113,"column_start":9,"column_end":21},"name":"answer_count","qualname":"::op::message::HeaderCounts::answer_count","value":"usize","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" The number of answers in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":215},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46720,"byte_end":46736,"line_start":115,"line_end":115,"column_start":9,"column_end":25},"name":"nameserver_count","qualname":"::op::message::HeaderCounts::nameserver_count","value":"usize","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" The number of nameservers or authorities in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":216},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46809,"byte_end":46825,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"name":"additional_count","qualname":"::op::message::HeaderCounts::additional_count","value":"usize","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":" The number of additional records in the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46901,"byte_end":46904,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<Message>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new \"empty\" Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":47479,"byte_end":47488,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"error_msg","qualname":"<Message>::error_msg","value":"fn (id: u16, op_code: OpCode, response_code: ResponseCode) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Returns a Message constructed with error details to return to a client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":47915,"byte_end":47923,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Message>::truncate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Truncates a Message, this blindly removes all response fields and sets trucation to `true`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":48698,"byte_end":48704,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Message>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_id`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":48842,"byte_end":48858,"line_start":177,"line_end":177,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Message>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_message_type`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49029,"byte_end":49040,"line_start":183,"line_end":183,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Message>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_op_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49197,"byte_end":49214,"line_start":189,"line_end":189,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Message>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authoritative`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49383,"byte_end":49396,"line_start":195,"line_end":195,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Message>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_truncated`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49561,"byte_end":49582,"line_start":201,"line_end":201,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Message>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_desired`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49773,"byte_end":49796,"line_start":207,"line_end":207,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Message>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_available`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":49988,"byte_end":50006,"line_start":213,"line_end":213,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Message>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authentic_data`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":50186,"byte_end":50207,"line_start":219,"line_end":219,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Message>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_checking_disabled`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":50392,"byte_end":50409,"line_start":225,"line_end":225,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Message>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_response_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":50651,"byte_end":50660,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"add_query","qualname":"<Message>::add_query","value":"fn (&mut self, query: Query) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a query to the Message, either the query response from the server, or the request Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":50840,"byte_end":50851,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"add_queries","qualname":"<Message>::add_queries","value":"fn <Q, I> (&mut self, queries: Q) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an iterator over a set of Queries to be added to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":51143,"byte_end":51153,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"add_answer","qualname":"<Message>::add_answer","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an answer to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":51346,"byte_end":51357,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"add_answers","qualname":"<Message>::add_answers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records from the iterator to the answers section of the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":51784,"byte_end":51798,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"insert_answers","qualname":"<Message>::insert_answers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the answers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":51974,"byte_end":51989,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"add_name_server","qualname":"<Message>::add_name_server","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a name server record to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":52189,"byte_end":52205,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"add_name_servers","qualname":"<Message>::add_name_servers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records in the Iterator to the name server section of the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":52648,"byte_end":52667,"line_start":302,"line_end":302,"column_start":12,"column_end":31},"name":"insert_name_servers","qualname":"<Message>::insert_name_servers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the name_servers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":52850,"byte_end":52864,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"add_additional","qualname":"<Message>::add_additional","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" A an addtional Record to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":53151,"byte_end":53169,"line_start":318,"line_end":318,"column_start":12,"column_end":30},"name":"insert_additionals","qualname":"<Message>::insert_additionals","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the additional to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":53350,"byte_end":53358,"line_start":324,"line_end":324,"column_start":12,"column_end":20},"name":"set_edns","qualname":"<Message>::set_edns","value":"fn (&mut self, edns: Edns) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add the EDNS section the the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":53933,"byte_end":53939,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"header","qualname":"<Message>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Gets the header of the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54026,"byte_end":54028,"line_start":345,"line_end":345,"column_start":12,"column_end":14},"name":"id","qualname":"<Message>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" see `Header::id()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54125,"byte_end":54137,"line_start":350,"line_end":350,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Message>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" see `Header::message_type()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54247,"byte_end":54254,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Message>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" see `Header::op_code()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54360,"byte_end":54373,"line_start":360,"line_end":360,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Message>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authoritative()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54479,"byte_end":54488,"line_start":365,"line_end":365,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Message>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::truncated()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54598,"byte_end":54615,"line_start":370,"line_end":370,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Message>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_desired()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54735,"byte_end":54754,"line_start":375,"line_end":375,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Message>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_available()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":54871,"byte_end":54885,"line_start":380,"line_end":380,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Message>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":55000,"byte_end":55017,"line_start":385,"line_end":385,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Message>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::checking_disabled()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":55274,"byte_end":55287,"line_start":393,"line_end":393,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Message>::response_code","value":"fn (&self) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":55573,"byte_end":55580,"line_start":403,"line_end":403,"column_start":12,"column_end":19},"name":"queries","qualname":"<Message>::queries","value":"fn (&self) -> &[Query]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Question        Carries the query name and other query parameters.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":55739,"byte_end":55746,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"answers","qualname":"<Message>::answers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Answer          Carries RRs which directly answer the query.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":55858,"byte_end":55870,"line_start":415,"line_end":415,"column_start":12,"column_end":24},"name":"take_answers","qualname":"<Message>::take_answers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Removes all the answers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":56203,"byte_end":56215,"line_start":424,"line_end":424,"column_start":12,"column_end":24},"name":"name_servers","qualname":"<Message>::name_servers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Authority       Carries RRs which describe other authoritative servers.\n                 May optionally carry the SOA RR for the authoritative\n                 data in the answer section.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":56332,"byte_end":56349,"line_start":429,"line_end":429,"column_start":12,"column_end":29},"name":"take_name_servers","qualname":"<Message>::take_name_servers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the name servers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":56598,"byte_end":56609,"line_start":437,"line_end":437,"column_start":12,"column_end":23},"name":"additionals","qualname":"<Message>::additionals","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Additional      Carries RRs which may be helpful in using the RRs in the\n                 other sections.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":56731,"byte_end":56747,"line_start":442,"line_end":442,"column_start":12,"column_end":28},"name":"take_additionals","qualname":"<Message>::take_additionals","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the additional Records from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":58239,"byte_end":58243,"line_start":475,"line_end":475,"column_start":12,"column_end":16},"name":"edns","qualname":"<Message>::edns","value":"fn (&self) -> Option<&Edns>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 6891, EDNS(0) Extensions, April 2013](https://tools.ietf.org/html/rfc6891#section-6.1.1)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":58377,"byte_end":58385,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"edns_mut","qualname":"<Message>::edns_mut","value":"fn (&mut self) -> &mut Edns","parent":null,"children":[],"decl_id":null,"docs":" If edns is_none, this will create a new default Edns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":58651,"byte_end":58662,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Message>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":58944,"byte_end":58951,"line_start":503,"line_end":503,"column_start":12,"column_end":19},"name":"version","qualname":"<Message>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":59752,"byte_end":59756,"line_start":521,"line_end":521,"column_start":12,"column_end":16},"name":"sig0","qualname":"<Message>::sig0","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" [RFC 2535, Domain Name System Security Extensions, March 1999](https://tools.ietf.org/html/rfc2535#section-4)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":60546,"byte_end":60558,"line_start":544,"line_end":544,"column_start":12,"column_end":24},"name":"read_queries","qualname":"<Message>::read_queries","value":"fn (decoder: &mut BinDecoder, count: usize) -> ProtoResult<Vec<Query>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of `Query`s\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":61103,"byte_end":61115,"line_start":558,"line_end":558,"column_start":12,"column_end":24},"name":"read_records","qualname":"<Message>::read_records","value":"fn (decoder: &mut BinDecoder, count: usize, is_additional: bool) -> ProtoResult<(Vec<Record>, Option<Edns>, Vec<Record>)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of records","sig":null,"attributes":[{"value":"allow(unused_mut)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":61072,"byte_end":61089,"line_start":557,"line_end":557,"column_start":41,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":62982,"byte_end":62990,"line_start":607,"line_end":607,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Message>::from_vec","value":"fn (buffer: &[u8]) -> ProtoResult<Message>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message from the buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":63179,"byte_end":63185,"line_start":613,"line_end":613,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Message>::to_vec","value":"fn (&self) -> Result<Vec<u8>, ProtoError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the Message into a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":63836,"byte_end":63844,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Message>::finalize","value":"fn <MF> (&mut self, finalizer: &MF, inception_time: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Finalize the message prior to sending.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":64875,"byte_end":64891,"line_start":662,"line_end":662,"column_start":11,"column_end":27},"name":"MessageFinalizer","qualname":"::op::message::MessageFinalizer","value":"MessageFinalizer: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":281}],"decl_id":null,"docs":" A trait for performing final ammendments to a Message before it is sent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65467,"byte_end":65483,"line_start":674,"line_end":674,"column_start":8,"column_end":24},"name":"finalize_message","qualname":"::op::message::MessageFinalizer::finalize_message","value":"fn (&self, message: &Message, current_time: u32) -> ProtoResult<Vec<Record>>","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" The message taken in should be processed and then return [`Record`]s which should be\n  appended to the additional section of the message.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65727,"byte_end":65747,"line_start":680,"line_end":680,"column_start":12,"column_end":32},"name":"NoopMessageFinalizer","qualname":"::op::message::NoopMessageFinalizer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A MessageFinalizer which does nothing","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65817,"byte_end":65820,"line_start":684,"line_end":684,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopMessageFinalizer>::new","value":"fn () -> Option<Arc<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Always returns None\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":288},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66155,"byte_end":66174,"line_start":696,"line_end":696,"column_start":8,"column_end":27},"name":"count_was_truncated","qualname":"::op::message::count_was_truncated","value":"fn (result: ProtoResult<usize>) -> ProtoResult<(usize, bool)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the count written and a boolean if it was truncated\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":291},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66546,"byte_end":66558,"line_start":707,"line_end":707,"column_start":11,"column_end":23},"name":"EmitAndCount","qualname":"::op::message::EmitAndCount","value":"EmitAndCount","parent":null,"children":[{"krate":0,"index":292}],"decl_id":null,"docs":" A trait that defines types which can be emitted as a set, with the associated count returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66631,"byte_end":66635,"line_start":709,"line_end":709,"column_start":8,"column_end":12},"name":"emit","qualname":"::op::message::EmitAndCount::emit","value":"fn (&mut self, encoder: &mut BinEncoder) -> ProtoResult<usize>","parent":{"krate":0,"index":291},"children":[],"decl_id":null,"docs":" Emit self to the encoder and return the count of items\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":298},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66990,"byte_end":67008,"line_start":720,"line_end":720,"column_start":8,"column_end":26},"name":"emit_message_parts","qualname":"::op::message::emit_message_parts","value":"fn <Q, A, N, D> (header: &Header, queries: &mut Q, answers: &mut A, name_servers: &mut N, additionals: &mut D, edns: Option<&Edns>, sig0: &[Record], encoder: &mut BinEncoder) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits the different sections of a message properly\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66946,"byte_end":66982,"line_start":719,"line_end":719,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op_code","qualname":"::op::op_code","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":2414},{"krate":0,"index":2430},{"krate":0,"index":2428},{"krate":0,"index":2426},{"krate":0,"index":2425},{"krate":0,"index":2423},{"krate":0,"index":311},{"krate":0,"index":313}],"decl_id":null,"docs":" Operation code for queries, updates, and responses\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2415},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75391,"byte_end":75396,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::op_code::OpCode::Query","value":"OpCode::Query","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Query request [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2417},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75474,"byte_end":75480,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Status","qualname":"::op::op_code::OpCode::Status","value":"OpCode::Status","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Status message [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2419},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75560,"byte_end":75566,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Notify","qualname":"::op::op_code::OpCode::Notify","value":"OpCode::Notify","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Notify of change [RFC 1996](https://tools.ietf.org/html/rfc1996)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2421},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75644,"byte_end":75650,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Update","qualname":"::op::op_code::OpCode::Update","value":"OpCode::Update","parent":{"krate":0,"index":2414},"children":[],"decl_id":null,"docs":" Update message [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2414},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75308,"byte_end":75314,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::op::op_code::OpCode","value":"OpCode::{Query, Status, Notify, Update}","parent":null,"children":[{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2421}],"decl_id":null,"docs":" Operation code for queries, updates, and responses","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75279,"byte_end":75298,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":75299,"byte_end":75653,"line_start":42,"line_end":54,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":76556,"byte_end":76563,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<OpCode>::from_u8","value":"fn (value: u8) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the binary value of the OpCode\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":315},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::op::query","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":2432},{"krate":0,"index":2446},{"krate":0,"index":2444},{"krate":0,"index":2442},{"krate":0,"index":2439},{"krate":0,"index":2436},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":341}],"decl_id":null,"docs":" Query struct for looking up resource records\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":78929,"byte_end":78934,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Query","qualname":"::op::query::Query","value":"Query {  }","parent":null,"children":[{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"decl_id":null,"docs":" Query struct for looking up resource records, basically a resource record without RDATA.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":78918,"byte_end":79009,"line_start":53,"line_end":57,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79421,"byte_end":79424,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Query>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a default query with an empty name and A, IN for the query_type and query_class\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79550,"byte_end":79555,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"query","qualname":"<Query>::query","value":"fn (name: Name, query_type: RecordType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new query from name and type, class defaults to IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79767,"byte_end":79775,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Query>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" replaces name with the new name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79916,"byte_end":79930,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_query_type","qualname":"<Query>::set_query_type","value":"fn (&mut self, query_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the RecordType being queried\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":80113,"byte_end":80128,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"set_query_class","qualname":"<Query>::set_query_class","value":"fn (&mut self, query_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify÷ the DNS class of the Query, almost always IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":80712,"byte_end":80716,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"name","qualname":"<Query>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QNAME           a domain name represented as a sequence of labels, where\n                 each label consists of a length octet followed by that\n                 number of octets.  The domain name terminates with the\n                 zero length octet for the null label of the root.  Note\n                 that this field may be an odd number of octets; no\n                 padding is used.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81100,"byte_end":81110,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"query_type","qualname":"<Query>::query_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QTYPE           a two octet code which specifies the type of the query.\n                 The values for this field include all codes valid for a\n                 TYPE field, together with some more general codes which\n                 can match more than one type of RR.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81362,"byte_end":81373,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"query_class","qualname":"<Query>::query_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QCLASS          a two octet code that specifies the class of the query.\n                 For example, the QCLASS field is IN for the Internet.\n ```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response_code","qualname":"::op::response_code","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":2448},{"krate":0,"index":2498},{"krate":0,"index":2496},{"krate":0,"index":2494},{"krate":0,"index":2492},{"krate":0,"index":2491},{"krate":0,"index":2489},{"krate":0,"index":348},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357}],"decl_id":null,"docs":" All defined response codes in DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2449},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85673,"byte_end":85680,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"NoError","qualname":"::op::response_code::ResponseCode::NoError","value":"ResponseCode::NoError","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" No Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2451},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85756,"byte_end":85763,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"FormErr","qualname":"::op::response_code::ResponseCode::FormErr","value":"ResponseCode::FormErr","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Format Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2453},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85841,"byte_end":85849,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"ServFail","qualname":"::op::response_code::ResponseCode::ServFail","value":"ResponseCode::ServFail","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Server Failure [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2455},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85932,"byte_end":85940,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"NXDomain","qualname":"::op::response_code::ResponseCode::NXDomain","value":"ResponseCode::NXDomain","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Non-Esistent Domain [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2457},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86019,"byte_end":86025,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"NotImp","qualname":"::op::response_code::ResponseCode::NotImp","value":"ResponseCode::NotImp","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Not Implemented [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2459},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86102,"byte_end":86109,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"Refused","qualname":"::op::response_code::ResponseCode::Refused","value":"ResponseCode::Refused","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Query Refused [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2461},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86203,"byte_end":86211,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"name":"YXDomain","qualname":"::op::response_code::ResponseCode::YXDomain","value":"ResponseCode::YXDomain","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Name Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86307,"byte_end":86314,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"YXRRSet","qualname":"::op::response_code::ResponseCode::YXRRSet","value":"ResponseCode::YXRRSet","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" RR Set Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86411,"byte_end":86418,"line_start":90,"line_end":90,"column_start":5,"column_end":12},"name":"NXRRSet","qualname":"::op::response_code::ResponseCode::NXRRSet","value":"ResponseCode::NXRRSet","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" RR Set that should exist does not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2467},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86589,"byte_end":86596,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"NotAuth","qualname":"::op::response_code::ResponseCode::NotAuth","value":"ResponseCode::NotAuth","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Server Not Authoritative for zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n or Not Authorized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2469},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86686,"byte_end":86693,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"NotZone","qualname":"::op::response_code::ResponseCode::NotZone","value":"ResponseCode::NotZone","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Name not contained in zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2471},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86782,"byte_end":86789,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"BADVERS","qualname":"::op::response_code::ResponseCode::BADVERS","value":"ResponseCode::BADVERS","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Bad OPT Version [RFC 6891](https://tools.ietf.org/html/rfc6891#section-9)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2473},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86875,"byte_end":86881,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"BADSIG","qualname":"::op::response_code::ResponseCode::BADSIG","value":"ResponseCode::BADSIG","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" TSIG Signature Failure [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2475},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":86963,"byte_end":86969,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"BADKEY","qualname":"::op::response_code::ResponseCode::BADKEY","value":"ResponseCode::BADKEY","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Key not recognized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2477},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87061,"byte_end":87068,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"BADTIME","qualname":"::op::response_code::ResponseCode::BADTIME","value":"ResponseCode::BADTIME","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Signature out of time window [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2479},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87157,"byte_end":87164,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"BADMODE","qualname":"::op::response_code::ResponseCode::BADMODE","value":"ResponseCode::BADMODE","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Bad TKEY Mode [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2481},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87258,"byte_end":87265,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"BADNAME","qualname":"::op::response_code::ResponseCode::BADNAME","value":"ResponseCode::BADNAME","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Duplicate key name [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2483},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87364,"byte_end":87370,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"BADALG","qualname":"::op::response_code::ResponseCode::BADALG","value":"ResponseCode::BADALG","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Algorithm not supported [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2485},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87458,"byte_end":87466,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"BADTRUNC","qualname":"::op::response_code::ResponseCode::BADTRUNC","value":"ResponseCode::BADTRUNC","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Bad Truncation [RFC 4635](https://tools.ietf.org/html/rfc4635#section-4)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2487},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87591,"byte_end":87600,"line_start":124,"line_end":124,"column_start":5,"column_end":14},"name":"BADCOOKIE","qualname":"::op::response_code::ResponseCode::BADCOOKIE","value":"ResponseCode::BADCOOKIE","parent":{"krate":0,"index":2448},"children":[],"decl_id":null,"docs":" Bad/missing server cookie [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-10)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2448},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85589,"byte_end":85601,"line_start":64,"line_end":64,"column_start":10,"column_end":22},"name":"ResponseCode","qualname":"::op::response_code::ResponseCode","value":"ResponseCode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, BADVERS, BADSIG, BADKEY, BADTIME, BADMODE, BADNAME, BADALG, BADTRUNC, BADCOOKIE}","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2469},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2475},{"krate":0,"index":2477},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2483},{"krate":0,"index":2485},{"krate":0,"index":2487}],"decl_id":null,"docs":" The status code of the response to a query.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85560,"byte_end":85579,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85580,"byte_end":87821,"line_start":64,"line_end":129,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":85580,"byte_end":87821,"line_start":64,"line_end":129,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87954,"byte_end":87957,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"low","qualname":"<ResponseCode>::low","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" returns the lower 4 bits of the response code (for the original header portion of the code)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":88106,"byte_end":88110,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"high","qualname":"<ResponseCode>::high","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" returns the high 12 bits for the edns portion of the response code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":88276,"byte_end":88280,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"from","qualname":"<ResponseCode>::from","value":"fn (high: u8, low: u8) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" Combines the EDNS high and low from the Header to produce the Extended ResponseCode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":88466,"byte_end":88472,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"to_str","qualname":"<ResponseCode>::to_str","value":"fn (self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transforms the response code into the human message\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rr","qualname":"::rr","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":401},{"krate":0,"index":728},{"krate":0,"index":982},{"krate":0,"index":1027},{"krate":0,"index":1062},{"krate":0,"index":1107},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170}],"decl_id":null,"docs":" Resource record related components, e.g. `Name` aka label, `Record`, `RData`, ...\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":370},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_class","qualname":"::rr::dns_class","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":2500},{"krate":0,"index":2525},{"krate":0,"index":2522},{"krate":0,"index":2520},{"krate":0,"index":2517},{"krate":0,"index":2516},{"krate":0,"index":2514},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":399}],"decl_id":null,"docs":" class of DNS operations, in general always IN for internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2501},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98589,"byte_end":98591,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"IN","qualname":"::rr::dns_class::DNSClass::IN","value":"DNSClass::IN","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" Internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2503},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98611,"byte_end":98613,"line_start":26,"line_end":26,"column_start":5,"column_end":7},"name":"CH","qualname":"::rr::dns_class::DNSClass::CH","value":"DNSClass::CH","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" Chaos\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2505},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98634,"byte_end":98636,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"HS","qualname":"::rr::dns_class::DNSClass::HS","value":"DNSClass::HS","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" Hesiod\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2507},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98662,"byte_end":98666,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"NONE","qualname":"::rr::dns_class::DNSClass::NONE","value":"DNSClass::NONE","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" QCLASS NONE\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2509},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98695,"byte_end":98698,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::dns_class::DNSClass::ANY","value":"DNSClass::ANY","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" QCLASS * (ANY)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2511},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98859,"byte_end":98862,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::dns_class::DNSClass::OPT","value":"DNSClass::OPT(u16)","parent":{"krate":0,"index":2500},"children":[],"decl_id":null,"docs":" Special class for OPT Version, it was overloaded for EDNS - RFC 6891\n From the RFC: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2500},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98557,"byte_end":98565,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"DNSClass","qualname":"::rr::dns_class::DNSClass","value":"DNSClass::{IN, CH, HS, NONE, ANY, OPT}","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2505},{"krate":0,"index":2507},{"krate":0,"index":2509},{"krate":0,"index":2511}],"decl_id":null,"docs":" The DNS Record class\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98528,"byte_end":98547,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98548,"byte_end":98870,"line_start":22,"line_end":36,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98548,"byte_end":98870,"line_start":22,"line_end":36,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":99817,"byte_end":99825,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<DNSClass>::from_u16","value":"fn (value: u16) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert from u16 to DNSClass","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":100209,"byte_end":100216,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"for_opt","qualname":"<DNSClass>::for_opt","value":"fn (value: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the OPT version from value\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":401},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"domain","qualname":"::rr::domain","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":491},{"krate":0,"index":673},{"krate":0,"index":689},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727}],"decl_id":null,"docs":" Domain name associated types, suchas Name and Label.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2527},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":104329,"byte_end":104334,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Label","qualname":"::rr::domain::label::Label","value":"","parent":null,"children":[],"decl_id":null,"docs":" Labels are always stored as ASCII, unicode characters must be encoded with punycode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":104622,"byte_end":104636,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"from_raw_bytes","qualname":"<Label>::from_raw_bytes","value":"fn (bytes: &[u8]) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" These must only be ASCII, with unicode encoded to PunyCode, or other such transformation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":104947,"byte_end":104956,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Label>::from_utf8","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Translates this string into IDNA safe name, encoding to punycode as necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":105740,"byte_end":105750,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Label>::from_ascii","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Takes the ascii string and returns a new label.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":106287,"byte_end":106295,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"wildcard","qualname":"<Label>::wildcard","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Label of the Wildcard, i.e. \"*\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":106410,"byte_end":106422,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Label>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to lowercase\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":106972,"byte_end":106983,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Label>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this label is the wildcard, '*', label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":107105,"byte_end":107108,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"len","qualname":"<Label>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the lenght in bytes of this label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":107215,"byte_end":107223,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Label>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the label contains no characters\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":107455,"byte_end":107463,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Label>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of the label, this is good for writing to the wire.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":107577,"byte_end":107597,"line_start":133,"line_end":133,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Label>::eq_ignore_ascii_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivelence operation disregarding case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":107746,"byte_end":107756,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"cmp_with_f","qualname":"<Label>::cmp_with_f","value":"fn <F> (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" compares with the other label, ignoring case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":108201,"byte_end":108208,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Label>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Performs the conversion to utf8 from IDNA as necessary, see `fmt` for more details\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":108452,"byte_end":108460,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Label>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to safe ascii, escaping characters as necessary","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":108758,"byte_end":108769,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"write_ascii","qualname":"<Label>::write_ascii","value":"fn <W> (&self, f: &mut W) -> Result<(), fmt::Error>","parent":null,"children":[],"decl_id":null,"docs":" Writes this label to safe ascii, escaping characters as necessary\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":464},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112499,"byte_end":112507,"line_start":297,"line_end":297,"column_start":11,"column_end":19},"name":"LabelCmp","qualname":"::rr::domain::label::LabelCmp","value":"LabelCmp","parent":null,"children":[{"krate":0,"index":465}],"decl_id":null,"docs":" Label comparison trait for case sensitive or insensitive comparisons\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112578,"byte_end":112584,"line_start":299,"line_end":299,"column_start":8,"column_end":14},"name":"cmp_u8","qualname":"::rr::domain::label::LabelCmp::cmp_u8","value":"fn (l: u8, r: u8) -> Ordering","parent":{"krate":0,"index":464},"children":[],"decl_id":null,"docs":" this should mimic the cmp method from [`PartialOrd`]\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":474},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113045,"byte_end":113054,"line_start":321,"line_end":321,"column_start":11,"column_end":20},"name":"IntoLabel","qualname":"::rr::domain::label::IntoLabel","value":"IntoLabel: Sized","parent":null,"children":[{"krate":0,"index":475}],"decl_id":null,"docs":" Conversion into a Label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113103,"byte_end":113113,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"into_label","qualname":"::rr::domain::label::IntoLabel::into_label","value":"fn (self: Self) -> ProtoResult<Label>","parent":{"krate":0,"index":474},"children":[],"decl_id":null,"docs":" Convert this into Label\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2534},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":119467,"byte_end":119471,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Name","qualname":"::rr::domain::name::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":2535},{"krate":0,"index":2536}],"decl_id":null,"docs":" Them should be through references. As a workaround the Strings are all Rc as well as the array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":119589,"byte_end":119592,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Name>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new domain::Name, i.e. label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":119743,"byte_end":119747,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"root","qualname":"<Name>::root","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the root label, i.e. no labels, can probably make this better in the future.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":120163,"byte_end":120170,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Name>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no labels, i.e. it's empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":120997,"byte_end":121004,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"is_fqdn","qualname":"<Name>::is_fqdn","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the name is a fully qualified domain name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":121205,"byte_end":121213,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"set_fqdn","qualname":"<Name>::set_fqdn","value":"fn (&mut self, val: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies this name is a fully qualified domain name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":121327,"byte_end":121331,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"iter","qualname":"<Name>::iter","value":"fn (&self) -> LabelIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":121791,"byte_end":121803,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"append_label","qualname":"<Name>::append_label","value":"fn <L> (mut self, label: L) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Appends the label to the end of this name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":122982,"byte_end":122993,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"from_labels","qualname":"<Name>::from_labels","value":"fn <I, L> (labels: I) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name from the specified labels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":124642,"byte_end":124653,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"append_name","qualname":"<Name>::append_name","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends `other` to `self`, returning a new `Name`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":125524,"byte_end":125537,"line_start":221,"line_end":221,"column_start":12,"column_end":25},"name":"append_domain","qualname":"<Name>::append_domain","value":"fn (self, domain: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the `domain` to `self`, making the new Name an FQDN","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":126187,"byte_end":126199,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Name>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name with all labels lowercased","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":127023,"byte_end":127032,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"base_name","qualname":"<Name>::base_name","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims off the first part of the name, to help with searching for the domain piece","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":127773,"byte_end":127780,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"trim_to","qualname":"<Name>::trim_to","value":"fn (&self, num_labels: usize) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims to the number of labels specified","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":128168,"byte_end":128180,"line_start":301,"line_end":301,"column_start":12,"column_end":24},"name":"zone_of_case","qualname":"<Name>::zone_of_case","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" same as zone_of allows for case sensitive call\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":129436,"byte_end":129443,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"zone_of","qualname":"<Name>::zone_of","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns true if the name components of self are all present at the end of name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":130176,"byte_end":130186,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"num_labels","qualname":"<Name>::num_labels","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the name, discounting `*`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":131013,"byte_end":131016,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"len","qualname":"<Name>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" returns the length in bytes of the labels. '.' counts as 1","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":131402,"byte_end":131410,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Name>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the length of the labels, in bytes is 0. In practive, since '.' counts as\n 1, this is never the case so the method returns false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":131880,"byte_end":131885,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"parse","qualname":"<Name>::parse","value":"fn (local: &str, origin: Option<&Self>) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" attempts to parse a name such as `\"example.com.\"` or `\"subdomain.example.com.\"`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":133199,"byte_end":133209,"line_start":453,"line_end":453,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Name>::from_ascii","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Will convert the string to a name only allowing ascii as valid input","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":134238,"byte_end":134247,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Name>::from_utf8","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Will convert the string to a name using IDNA, punycode, to encode the UTF8 as necessary","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":134987,"byte_end":135003,"line_start":499,"line_end":499,"column_start":12,"column_end":28},"name":"from_str_relaxed","qualname":"<Name>::from_str_relaxed","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" First attempts to decode via from_utf8, if that fails IDNA checks, than falls back to\n   ascii decoding.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":138485,"byte_end":138502,"line_start":586,"line_end":586,"column_start":12,"column_end":29},"name":"emit_as_canonical","qualname":"<Name>::emit_as_canonical","value":"fn (&self, encoder: &mut BinEncoder, canonical: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits the canonical version of the name to the encoder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":141579,"byte_end":141598,"line_start":657,"line_end":657,"column_start":12,"column_end":31},"name":"emit_with_lowercase","qualname":"<Name>::emit_with_lowercase","value":"fn (&self, encoder: &mut BinEncoder, lowercase: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the labels, as lower case, to the encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":142720,"byte_end":142728,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"cmp_case","qualname":"<Name>::cmp_case","value":"fn (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Case sensitive comparison\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":142885,"byte_end":142892,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"eq_case","qualname":"<Name>::eq_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares the Names, in a case sensitive manner\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":143257,"byte_end":143265,"line_start":705,"line_end":705,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Name>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this name into an ascii safe string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":143781,"byte_end":143788,"line_start":717,"line_end":717,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Name>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts the Name labels to the utf8 String form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":144851,"byte_end":144863,"line_start":756,"line_end":756,"column_start":12,"column_end":24},"name":"is_localhost","qualname":"<Name>::is_localhost","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Name` is either localhost or in the localhost zone.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":145430,"byte_end":145441,"line_start":777,"line_end":777,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Name>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the first label of this name is the wildcard, i.e. '*'","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146033,"byte_end":146046,"line_start":796,"line_end":796,"column_start":12,"column_end":25},"name":"into_wildcard","qualname":"<Name>::into_wildcard","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a name to a wildcard, by replacing the first label with `*`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146965,"byte_end":146974,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"LabelIter","qualname":"::rr::domain::name::LabelIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over labels in a name\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":663},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159580,"byte_end":159588,"line_start":1187,"line_end":1187,"column_start":11,"column_end":19},"name":"IntoName","qualname":"::rr::domain::name::IntoName","value":"IntoName: Sized","parent":null,"children":[{"krate":0,"index":664}],"decl_id":null,"docs":" Conversion into a Name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159636,"byte_end":159645,"line_start":1189,"line_end":1189,"column_start":8,"column_end":17},"name":"into_name","qualname":"::rr::domain::name::IntoName::into_name","value":"fn (self) -> ProtoResult<Name>","parent":{"krate":0,"index":663},"children":[],"decl_id":null,"docs":" Convert this into Name\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":679},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/try_parse_ip.rs","byte_start":174357,"byte_end":174367,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"TryParseIp","qualname":"::rr::domain::try_parse_ip::TryParseIp","value":"TryParseIp","parent":null,"children":[{"krate":0,"index":680}],"decl_id":null,"docs":" Types of this trait will can be attempted for conversion to an IP address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/try_parse_ip.rs","byte_start":174474,"byte_end":174486,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"try_parse_ip","qualname":"::rr::domain::try_parse_ip::TryParseIp::try_parse_ip","value":"fn (&self) -> Option<RData>","parent":{"krate":0,"index":679},"children":[],"decl_id":null,"docs":" Attempts to parse self into an RData::A or RData::AAAA, None is returned if not possible\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":689},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"usage","qualname":"::rr::domain::usage","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2559},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2586},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2597},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2702},{"krate":0,"index":2701},{"krate":0,"index":2699},{"krate":0,"index":2697},{"krate":0,"index":2704},{"krate":0,"index":2718},{"krate":0,"index":2717},{"krate":0,"index":2715},{"krate":0,"index":2713},{"krate":0,"index":2720},{"krate":0,"index":2734},{"krate":0,"index":2733},{"krate":0,"index":2731},{"krate":0,"index":2729},{"krate":0,"index":2736},{"krate":0,"index":2750},{"krate":0,"index":2749},{"krate":0,"index":2747},{"krate":0,"index":2745},{"krate":0,"index":2752},{"krate":0,"index":2766},{"krate":0,"index":2765},{"krate":0,"index":2763},{"krate":0,"index":2761},{"krate":0,"index":2768},{"krate":0,"index":2780},{"krate":0,"index":2779},{"krate":0,"index":2777},{"krate":0,"index":2775},{"krate":0,"index":2782},{"krate":0,"index":2792},{"krate":0,"index":2791},{"krate":0,"index":2789},{"krate":0,"index":2787},{"krate":0,"index":692},{"krate":0,"index":701},{"krate":0,"index":718}],"decl_id":null,"docs":" Reserved zone names.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2545},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176296,"byte_end":176303,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"name":"DEFAULT","qualname":"::rr::domain::usage::DEFAULT","value":"DEFAULT {  }","parent":null,"children":[{"krate":0,"index":2546}],"decl_id":null,"docs":" Default Name usage, everything is normal...\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2547},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176296,"byte_end":176303,"line_start":19,"line_end":19,"column_start":20,"column_end":27},"name":"DEFAULT","qualname":"::rr::domain::usage::DEFAULT","value":"DEFAULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2567},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176480,"byte_end":176492,"line_start":25,"line_end":25,"column_start":20,"column_end":32},"name":"IN_ADDR_ARPA","qualname":"::rr::domain::usage::IN_ADDR_ARPA","value":"IN_ADDR_ARPA {  }","parent":null,"children":[{"krate":0,"index":2568}],"decl_id":null,"docs":" zone for ipv4 reverse addresses\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2569},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176480,"byte_end":176492,"line_start":25,"line_end":25,"column_start":20,"column_end":32},"name":"IN_ADDR_ARPA","qualname":"::rr::domain::usage::IN_ADDR_ARPA","value":"IN_ADDR_ARPA","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176620,"byte_end":176628,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"name":"IP6_ARPA","qualname":"::rr::domain::usage::IP6_ARPA","value":"IP6_ARPA {  }","parent":null,"children":[{"krate":0,"index":2579}],"decl_id":null,"docs":" zone for ipv6 reverse addresses\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2580},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":176620,"byte_end":176628,"line_start":27,"line_end":27,"column_start":20,"column_end":28},"name":"IP6_ARPA","qualname":"::rr::domain::usage::IP6_ARPA","value":"IP6_ARPA","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2589},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177118,"byte_end":177127,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"name":"LOCALHOST","qualname":"::rr::domain::usage::LOCALHOST","value":"LOCALHOST {  }","parent":null,"children":[{"krate":0,"index":2590}],"decl_id":null,"docs":" localhost.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2591},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177118,"byte_end":177127,"line_start":43,"line_end":43,"column_start":20,"column_end":29},"name":"LOCALHOST","qualname":"::rr::domain::usage::LOCALHOST","value":"LOCALHOST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177288,"byte_end":177304,"line_start":46,"line_end":46,"column_start":20,"column_end":36},"name":"IN_ADDR_ARPA_127","qualname":"::rr::domain::usage::IN_ADDR_ARPA_127","value":"IN_ADDR_ARPA_127 {  }","parent":null,"children":[{"krate":0,"index":2601}],"decl_id":null,"docs":" 127.in-addr.arpa. usage; 127/8 is reserved for loopback\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2602},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177288,"byte_end":177304,"line_start":46,"line_end":46,"column_start":20,"column_end":36},"name":"IN_ADDR_ARPA_127","qualname":"::rr::domain::usage::IN_ADDR_ARPA_127","value":"IN_ADDR_ARPA_127","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2611},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177556,"byte_end":177566,"line_start":49,"line_end":49,"column_start":20,"column_end":30},"name":"IP6_ARPA_1","qualname":"::rr::domain::usage::IP6_ARPA_1","value":"IP6_ARPA_1 {  }","parent":null,"children":[{"krate":0,"index":2612}],"decl_id":null,"docs":" 1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa. usage; 1/128 is the only address in ipv6 loopback\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2613},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":177556,"byte_end":177566,"line_start":49,"line_end":49,"column_start":20,"column_end":30},"name":"IP6_ARPA_1","qualname":"::rr::domain::usage::IP6_ARPA_1","value":"IP6_ARPA_1","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":178441,"byte_end":178446,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"name":"LOCAL","qualname":"::rr::domain::usage::LOCAL","value":"LOCAL {  }","parent":null,"children":[{"krate":0,"index":2623}],"decl_id":null,"docs":" .local.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2624},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":178441,"byte_end":178446,"line_start":68,"line_end":68,"column_start":20,"column_end":25},"name":"LOCAL","qualname":"::rr::domain::usage::LOCAL","value":"LOCAL","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2633},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179426,"byte_end":179446,"line_start":86,"line_end":86,"column_start":20,"column_end":40},"name":"IN_ADDR_ARPA_169_254","qualname":"::rr::domain::usage::IN_ADDR_ARPA_169_254","value":"IN_ADDR_ARPA_169_254 {  }","parent":null,"children":[{"krate":0,"index":2634}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2635},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179426,"byte_end":179446,"line_start":86,"line_end":86,"column_start":20,"column_end":40},"name":"IN_ADDR_ARPA_169_254","qualname":"::rr::domain::usage::IN_ADDR_ARPA_169_254","value":"IN_ADDR_ARPA_169_254","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2644},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179624,"byte_end":179637,"line_start":89,"line_end":89,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_8","qualname":"::rr::domain::usage::IP6_ARPA_FE_8","value":"IP6_ARPA_FE_8 {  }","parent":null,"children":[{"krate":0,"index":2645}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2646},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179624,"byte_end":179637,"line_start":89,"line_end":89,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_8","qualname":"::rr::domain::usage::IP6_ARPA_FE_8","value":"IP6_ARPA_FE_8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179808,"byte_end":179821,"line_start":91,"line_end":91,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_9","qualname":"::rr::domain::usage::IP6_ARPA_FE_9","value":"IP6_ARPA_FE_9 {  }","parent":null,"children":[{"krate":0,"index":2656}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2657},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179808,"byte_end":179821,"line_start":91,"line_end":91,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_9","qualname":"::rr::domain::usage::IP6_ARPA_FE_9","value":"IP6_ARPA_FE_9","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2666},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179992,"byte_end":180005,"line_start":93,"line_end":93,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_B","qualname":"::rr::domain::usage::IP6_ARPA_FE_B","value":"IP6_ARPA_FE_B {  }","parent":null,"children":[{"krate":0,"index":2667}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2668},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":179992,"byte_end":180005,"line_start":93,"line_end":93,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_B","qualname":"::rr::domain::usage::IP6_ARPA_FE_B","value":"IP6_ARPA_FE_B","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2677},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":180706,"byte_end":180713,"line_start":111,"line_end":111,"column_start":20,"column_end":27},"name":"INVALID","qualname":"::rr::domain::usage::INVALID","value":"INVALID {  }","parent":null,"children":[{"krate":0,"index":2678}],"decl_id":null,"docs":" invalid.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866773,"byte_end":11866817,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866818,"byte_end":11866854,"line_start":17,"line_end":18,"column_start":46,"column_end":33}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":11866855,"byte_end":11866880,"line_start":18,"line_end":18,"column_start":34,"column_end":59}}]},{"kind":"Static","id":{"krate":0,"index":2679},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":180706,"byte_end":180713,"line_start":111,"line_end":111,"column_start":20,"column_end":27},"name":"INVALID","qualname":"::rr::domain::usage::INVALID","value":"INVALID","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2689},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":181292,"byte_end":181298,"line_start":128,"line_end":128,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::UserUsage::Normal","value":"UserUsage::Normal","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" Users are free to use these names as they would any other\n reverse-mapping names.  However, since there is no central\n authority responsible for use of private addresses, users SHOULD\n be aware that these names are likely to yield different results\n on different networks.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2691},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":181549,"byte_end":181557,"line_start":134,"line_end":134,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::UserUsage::Loopback","value":"UserUsage::Loopback","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" Users are free to use localhost names as they would any other\n domain names.  Users may assume that IPv4 and IPv6 address\n queries for localhost names will always resolve to the respective\n IP loopback address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2693},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":181600,"byte_end":181609,"line_start":137,"line_end":137,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::UserUsage::LinkLocal","value":"UserUsage::LinkLocal","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" Multi-cast link-local usage\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2695},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":181807,"byte_end":181815,"line_start":142,"line_end":142,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::UserUsage::NxDomain","value":"UserUsage::NxDomain","parent":{"krate":0,"index":2688},"children":[],"decl_id":null,"docs":" Users are free to use \"invalid\" names as they would any other\n domain names.  Users MAY assume that queries for \"invalid\" names\n will always return NXDOMAIN responses.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2688},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":180967,"byte_end":180976,"line_start":122,"line_end":122,"column_start":10,"column_end":19},"name":"UserUsage","qualname":"::rr::domain::usage::UserUsage","value":"UserUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2691},{"krate":0,"index":2693},{"krate":0,"index":2695}],"decl_id":null,"docs":" Users:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":180958,"byte_end":181818,"line_start":122,"line_end":143,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":180958,"byte_end":181818,"line_start":122,"line_end":143,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2705},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182673,"byte_end":182679,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AppUsage::Normal","value":"AppUsage::Normal","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Application software SHOULD NOT recognize these names as special,\n and SHOULD use these names as they would other reverse-mapping\n names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2707},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182852,"byte_end":182860,"line_start":169,"line_end":169,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AppUsage::Loopback","value":"AppUsage::Loopback","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Application software MAY recognize localhost names as special, or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2709},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182906,"byte_end":182915,"line_start":172,"line_end":172,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::AppUsage::LinkLocal","value":"AppUsage::LinkLocal","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Link local, generally for mDNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2711},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":183087,"byte_end":183095,"line_start":177,"line_end":177,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AppUsage::NxDomain","value":"AppUsage::NxDomain","parent":{"krate":0,"index":2704},"children":[],"decl_id":null,"docs":" Application software MAY recognize \"invalid\" names as special or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2704},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182187,"byte_end":182195,"line_start":153,"line_end":153,"column_start":10,"column_end":18},"name":"AppUsage","qualname":"::rr::domain::usage::AppUsage","value":"AppUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2711}],"decl_id":null,"docs":" Application Software:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182178,"byte_end":183098,"line_start":153,"line_end":178,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":182178,"byte_end":183098,"line_start":153,"line_end":178,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2721},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":184156,"byte_end":184162,"line_start":201,"line_end":201,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::ResolverUsage::Normal","value":"ResolverUsage::Normal","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD NOT recognize these\n names as special and SHOULD NOT treat them differently.  Name\n resolution APIs SHOULD send queries for these names to their\n configured caching DNS server(s).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2723},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":184516,"byte_end":184524,"line_start":208,"line_end":208,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::ResolverUsage::Loopback","value":"ResolverUsage::Loopback","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize localhost\n names as special and SHOULD always return the IP loopback address\n for address queries and negative responses for all other query\n types.  Name resolution APIs SHOULD NOT send queries for\n localhost names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2725},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":185378,"byte_end":185387,"line_start":223,"line_end":223,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::ResolverUsage::LinkLocal","value":"ResolverUsage::LinkLocal","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Link local, generally for mDNS\n \n Any DNS query for a name ending with \".local.\" MUST be sent to the\n mDNS IPv4 link-local multicast address 224.0.0.251 (or its IPv6\n equivalent FF02::FB).  The design rationale for using a fixed\n multicast address instead of selecting from a range of multicast\n addresses using a hash function is discussed in Appendix B.\n Implementers MAY choose to look up such names concurrently via other\n mechanisms (e.g., Unicast DNS) and coalesce the results in some\n fashion.  Implementers choosing to do this should be aware of the\n potential for user confusion when a given name can produce different\n results depending on external network conditions (such as, but not\n limited to, which name lookup mechanism responds faster).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2727},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":185669,"byte_end":185677,"line_start":229,"line_end":229,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::ResolverUsage::NxDomain","value":"ResolverUsage::NxDomain","parent":{"krate":0,"index":2720},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize \"invalid\"\n names as special and SHOULD always return immediate negative\n responses.  Name resolution APIs SHOULD NOT send queries for\n \"invalid\" names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2720},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":183365,"byte_end":183378,"line_start":186,"line_end":186,"column_start":10,"column_end":23},"name":"ResolverUsage","qualname":"::rr::domain::usage::ResolverUsage","value":"ResolverUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725},{"krate":0,"index":2727}],"decl_id":null,"docs":" Name Resolution APIs and Libraries:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":183356,"byte_end":185680,"line_start":186,"line_end":230,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":183356,"byte_end":185680,"line_start":186,"line_end":230,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2737},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":186734,"byte_end":186746,"line_start":250,"line_end":250,"column_start":5,"column_end":17},"name":"NonRecursive","qualname":"::rr::domain::usage::CacheUsage::NonRecursive","value":"CacheUsage::NonRecursive","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize these names as special and\n SHOULD NOT, by default, attempt to look up NS records for them,\n or otherwise query authoritative DNS servers in an attempt to\n resolve these names.  Instead, caching DNS servers SHOULD, by\n default, generate immediate (positive or negative) responses for\n all such queries.  This is to avoid unnecessary load on the root\n name servers and other name servers.  Caching DNS servers SHOULD\n offer a configuration option (disabled by default) to enable\n upstream resolution of such names, for use in private networks\n where private-address reverse-mapping names are known to be\n handled by an authoritative DNS server in said private network.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2739},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":187196,"byte_end":187204,"line_start":259,"line_end":259,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::CacheUsage::NxDomain","value":"CacheUsage::NxDomain","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize \"invalid\" names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve \"invalid\" names.  Instead, caching DNS servers SHOULD\n generate immediate NXDOMAIN responses for all such queries.  This\n is to avoid unnecessary load on the root name servers and other\n name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2741},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":187777,"byte_end":187785,"line_start":269,"line_end":269,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::CacheUsage::Loopback","value":"CacheUsage::Loopback","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize localhost names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve localhost names.  Instead, caching DNS servers SHOULD,\n for all such address queries, generate an immediate positive\n response giving the IP loopback address, and for all other query\n types, generate an immediate negative response.  This is to avoid\n unnecessary load on the root name servers and other name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2743},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":187908,"byte_end":187914,"line_start":273,"line_end":273,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::CacheUsage::Normal","value":"CacheUsage::Normal","parent":{"krate":0,"index":2736},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD NOT recognize example names as special\n and SHOULD resolve them normally.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2736},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":185935,"byte_end":185945,"line_start":238,"line_end":238,"column_start":10,"column_end":20},"name":"CacheUsage","qualname":"::rr::domain::usage::CacheUsage","value":"CacheUsage::{NonRecursive, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743}],"decl_id":null,"docs":" Caching DNS Servers:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":185926,"byte_end":187917,"line_start":238,"line_end":274,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":185926,"byte_end":187917,"line_start":238,"line_end":274,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2753},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188507,"byte_end":188512,"line_start":288,"line_end":288,"column_start":5,"column_end":10},"name":"Local","qualname":"::rr::domain::usage::AuthUsage::Local","value":"AuthUsage::Local","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2755},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188827,"byte_end":188835,"line_start":295,"line_end":295,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AuthUsage::NxDomain","value":"AuthUsage::NxDomain","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2757},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188996,"byte_end":189004,"line_start":300,"line_end":300,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AuthUsage::Loopback","value":"AuthUsage::Loopback","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize localhost names as\n special and handle them as described above for caching DNS\n servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2759},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":189100,"byte_end":189106,"line_start":304,"line_end":304,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AuthUsage::Normal","value":"AuthUsage::Normal","parent":{"krate":0,"index":2752},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD NOT recognize example names as\n special.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2752},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188184,"byte_end":188193,"line_start":282,"line_end":282,"column_start":10,"column_end":19},"name":"AuthUsage","qualname":"::rr::domain::usage::AuthUsage","value":"AuthUsage::{Local, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2757},{"krate":0,"index":2759}],"decl_id":null,"docs":" Authoritative DNS Servers:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188175,"byte_end":189109,"line_start":282,"line_end":305,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":188175,"byte_end":189109,"line_start":282,"line_end":305,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2769},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":190104,"byte_end":190110,"line_start":326,"line_end":326,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::OpUsage::Normal","value":"OpUsage::Normal","parent":{"krate":0,"index":2768},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD, if they are using private addresses,\n configure their authoritative DNS servers to act as authoritative\n for these names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2771},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":190307,"byte_end":190315,"line_start":331,"line_end":331,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::OpUsage::Loopback","value":"OpUsage::Loopback","parent":{"krate":0,"index":2768},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n localhost names is defined by protocol specification and cannot\n be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2773},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":190530,"byte_end":190538,"line_start":336,"line_end":336,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::OpUsage::NxDomain","value":"OpUsage::NxDomain","parent":{"krate":0,"index":2768},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n \"invalid\" names is defined by protocol specification to be\n nonexistent and cannot be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2768},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":189744,"byte_end":189751,"line_start":318,"line_end":318,"column_start":10,"column_end":17},"name":"OpUsage","qualname":"::rr::domain::usage::OpUsage","value":"OpUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2773}],"decl_id":null,"docs":" DNS Server Operators:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":189735,"byte_end":190541,"line_start":318,"line_end":337,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":189735,"byte_end":190541,"line_start":318,"line_end":337,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2783},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":191234,"byte_end":191240,"line_start":353,"line_end":353,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::RegistryUsage::Normal","value":"RegistryUsage::Normal","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":" Stanard checks apply\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2785},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":192883,"byte_end":192891,"line_start":382,"line_end":382,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::domain::usage::RegistryUsage::Reserved","value":"RegistryUsage::Reserved","parent":{"krate":0,"index":2782},"children":[],"decl_id":null,"docs":" DNS Registries/Registrars MUST NOT grant requests to register\n test names in the normal way to any person or entity.  Test names\n are reserved for use in private networks and fall outside the set\n of names available for allocation by registries/registrars.\n Attempting to allocate a test name as if it were a normal DNS\n domain name will probably not work as desired, for reasons 4, 5,\n and 6 above.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2782},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":191186,"byte_end":191199,"line_start":351,"line_end":351,"column_start":10,"column_end":23},"name":"RegistryUsage","qualname":"::rr::domain::usage::RegistryUsage","value":"RegistryUsage::{Normal, Reserved}","parent":null,"children":[{"krate":0,"index":2783},{"krate":0,"index":2785}],"decl_id":null,"docs":" DNS Registries/Registrars:","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":191177,"byte_end":192894,"line_start":351,"line_end":383,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":191177,"byte_end":192894,"line_start":351,"line_end":383,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":692},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193003,"byte_end":193012,"line_start":386,"line_end":386,"column_start":12,"column_end":21},"name":"ZoneUsage","qualname":"::rr::domain::usage::ZoneUsage","value":"ZoneUsage {  }","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"decl_id":null,"docs":" ZoneUsage represents information about how a name falling in a given zone should be treated\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193328,"byte_end":193331,"line_start":400,"line_end":400,"column_start":12,"column_end":15},"name":"new","qualname":"<ZoneUsage>::new","value":"fn (name: Name, user: UserUsage, app: AppUsage, resolver: ResolverUsage, cache: CacheUsage, auth: AuthUsage, op: OpUsage, registry: RegistryUsage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ZoneUsage with the associated values\n","sig":null,"attributes":[{"value":"allow(clippy::too_many_arguments)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193276,"byte_end":193312,"line_start":399,"line_end":399,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193635,"byte_end":193642,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"default","qualname":"<ZoneUsage>::default","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Default, with all no restrictions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193883,"byte_end":193890,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"reverse","qualname":"<ZoneUsage>::reverse","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for reverse zones\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":194142,"byte_end":194146,"line_start":415,"line_end":415,"column_start":12,"column_end":16},"name":"test","qualname":"<ZoneUsage>::test","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .test. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":194403,"byte_end":194412,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"localhost","qualname":"<ZoneUsage>::localhost","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .localhost. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":194672,"byte_end":194677,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"local","qualname":"<ZoneUsage>::local","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .local. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":194935,"byte_end":194942,"line_start":430,"line_end":430,"column_start":12,"column_end":19},"name":"invalid","qualname":"<ZoneUsage>::invalid","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .invalid. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195204,"byte_end":195211,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"example","qualname":"<ZoneUsage>::example","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .example. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195455,"byte_end":195459,"line_start":440,"line_end":440,"column_start":12,"column_end":16},"name":"name","qualname":"<ZoneUsage>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" A reference to this zone name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195561,"byte_end":195565,"line_start":445,"line_end":445,"column_start":12,"column_end":16},"name":"user","qualname":"<ZoneUsage>::user","value":"fn (&self) -> UserUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the UserUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195667,"byte_end":195670,"line_start":450,"line_end":450,"column_start":12,"column_end":15},"name":"app","qualname":"<ZoneUsage>::app","value":"fn (&self) -> AppUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the AppUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195775,"byte_end":195783,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"resolver","qualname":"<ZoneUsage>::resolver","value":"fn (&self) -> ResolverUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the ResolverUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":195895,"byte_end":195900,"line_start":460,"line_end":460,"column_start":12,"column_end":17},"name":"cache","qualname":"<ZoneUsage>::cache","value":"fn (&self) -> CacheUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the CacheUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":196005,"byte_end":196009,"line_start":465,"line_end":465,"column_start":12,"column_end":16},"name":"auth","qualname":"<ZoneUsage>::auth","value":"fn (&self) -> AuthUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the AuthUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":196110,"byte_end":196112,"line_start":470,"line_end":470,"column_start":12,"column_end":14},"name":"op","qualname":"<ZoneUsage>::op","value":"fn (&self) -> OpUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the OpUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":196215,"byte_end":196223,"line_start":475,"line_end":475,"column_start":12,"column_end":20},"name":"registry","qualname":"<ZoneUsage>::registry","value":"fn (&self) -> RegistryUsage","parent":null,"children":[],"decl_id":null,"docs":" Returnes the RegistryUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":728},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rdata","qualname":"::rr::rdata","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":735},{"krate":0,"index":741},{"krate":0,"index":800},{"krate":0,"index":810},{"krate":0,"index":816},{"krate":0,"index":835},{"krate":0,"index":845},{"krate":0,"index":853},{"krate":0,"index":886},{"krate":0,"index":902},{"krate":0,"index":914},{"krate":0,"index":934},{"krate":0,"index":959},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":" All record data structures and related serialization methods\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":729},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/a.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"a","qualname":"::rr::rdata::a","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/a.rs","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734}],"decl_id":null,"docs":" IPv4 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":733},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/a.rs","byte_start":199400,"byte_end":199404,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::a::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/a.rs","byte_start":199764,"byte_end":199768,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::a::emit","value":"fn (encoder: &mut BinEncoder, address: Ipv4Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":735},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/aaaa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aaaa","qualname":"::rr::rdata::aaaa","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/aaaa.rs","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740}],"decl_id":null,"docs":" IPv6 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":739},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/aaaa.rs","byte_start":202411,"byte_end":202415,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::aaaa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv6Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[{"value":"allow(clippy::many_single_char_names)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/aaaa.rs","byte_start":202363,"byte_end":202403,"line_start":41,"line_end":41,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":740},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/aaaa.rs","byte_start":203137,"byte_end":203141,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::aaaa::emit","value":"fn (encoder: &mut BinEncoder, address: &Ipv6Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":741},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"caa","qualname":"::rr::rdata::caa","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":2794},{"krate":0,"index":2808},{"krate":0,"index":2805},{"krate":0,"index":2803},{"krate":0,"index":2800},{"krate":0,"index":2798},{"krate":0,"index":747},{"krate":0,"index":2810},{"krate":0,"index":2830},{"krate":0,"index":2827},{"krate":0,"index":2825},{"krate":0,"index":2822},{"krate":0,"index":2820},{"krate":0,"index":755},{"krate":0,"index":761},{"krate":0,"index":2832},{"krate":0,"index":2853},{"krate":0,"index":2850},{"krate":0,"index":2848},{"krate":0,"index":2845},{"krate":0,"index":2843},{"krate":0,"index":763},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":2855},{"krate":0,"index":2868},{"krate":0,"index":2865},{"krate":0,"index":2863},{"krate":0,"index":2860},{"krate":0,"index":2858},{"krate":0,"index":785},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":797},{"krate":0,"index":798}],"decl_id":null,"docs":" allows a DNS domain name holder to specify one or more Certification\n Authorities (CAs) authorized to issue certificates for that domain.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2794},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211712,"byte_end":211715,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"CAA","qualname":"::rr::rdata::caa::CAA","value":"CAA { issuer_critical, tag, value }","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797}],"decl_id":null,"docs":" The CAA RR Type","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211701,"byte_end":211852,"line_start":130,"line_end":137,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2795},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211745,"byte_end":211760,"line_start":132,"line_end":132,"column_start":9,"column_end":24},"name":"issuer_critical","qualname":"::rr::rdata::caa::CAA::issuer_critical","value":"bool","parent":{"krate":0,"index":2794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2796},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211795,"byte_end":211798,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"tag","qualname":"::rr::rdata::caa::CAA::tag","value":"rr::rdata::caa::Property","parent":{"krate":0,"index":2794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2797},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211837,"byte_end":211842,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"value","qualname":"::rr::rdata::caa::CAA::value","value":"rr::rdata::caa::Value","parent":{"krate":0,"index":2794},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":212639,"byte_end":212648,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"new_issue","qualname":"<CAA>::new_issue","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issue`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":213254,"byte_end":213267,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"new_issuewild","qualname":"<CAA>::new_issuewild","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issuewild`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":213878,"byte_end":213887,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"new_iodef","qualname":"<CAA>::new_iodef","value":"fn (issuer_critical: bool, url: Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `iodef`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214225,"byte_end":214240,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"issuer_critical","qualname":"<CAA>::issuer_critical","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the corresponding property tag MUST be understood if the semantics of the CAA record are to be correctly interpreted by an issuer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214356,"byte_end":214359,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"tag","qualname":"<CAA>::tag","value":"fn (&self) -> &Property","parent":null,"children":[],"decl_id":null,"docs":" The property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214505,"byte_end":214510,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"value","qualname":"<CAA>::value","value":"fn (&self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" a potentially associated value with the property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2811},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214984,"byte_end":214989,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Issue","qualname":"::rr::rdata::caa::Property::Issue","value":"Property::Issue","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" The issue property\n    entry authorizes the holder of the domain name <Issuer Domain\n    Name> or a party acting under the explicit authority of the holder\n    of that domain name to issue certificates for the domain in which\n    the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2813},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":215301,"byte_end":215310,"line_start":229,"line_end":229,"column_start":5,"column_end":14},"name":"IssueWild","qualname":"::rr::rdata::caa::Property::IssueWild","value":"Property::IssueWild","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" The issuewild\n    property entry authorizes the holder of the domain name <Issuer\n    Domain Name> or a party acting under the explicit authority of the\n    holder of that domain name to issue wildcard certificates for the\n    domain in which the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2815},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":215715,"byte_end":215720,"line_start":236,"line_end":236,"column_start":5,"column_end":10},"name":"Iodef","qualname":"::rr::rdata::caa::Property::Iodef","value":"Property::Iodef","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Specifies a URL to which an issuer MAY report\n    certificate issue requests that are inconsistent with the issuer's\n    Certification Practices or Certificate Policy, or that a\n    Certificate Evaluator may use to report observation of a possible\n    policy violation. The Incident Object Description Exchange Format\n    (IODEF) format is used [RFC5070].\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2817},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":215762,"byte_end":215769,"line_start":238,"line_end":238,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Property::Unknown","value":"Property::Unknown(String)","parent":{"krate":0,"index":2810},"children":[],"decl_id":null,"docs":" Unknown format to Trust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2810},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214676,"byte_end":214684,"line_start":217,"line_end":217,"column_start":10,"column_end":18},"name":"Property","qualname":"::rr::rdata::caa::Property","value":"Property::{Issue, IssueWild, Iodef, Unknown}","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2817}],"decl_id":null,"docs":" Specifies in what contexts this key may be trusted for use\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":214667,"byte_end":215780,"line_start":217,"line_end":239,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216104,"byte_end":216112,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"is_issue","qualname":"<Property>::is_issue","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issue`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216296,"byte_end":216308,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"is_issuewild","qualname":"<Property>::is_issuewild","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issueworld`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216491,"byte_end":216499,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"is_iodef","qualname":"<Property>::is_iodef","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `iodef`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216693,"byte_end":216703,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Property>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is not known to Trust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217621,"byte_end":217627,"line_start":314,"line_end":314,"column_start":5,"column_end":11},"name":"Issuer","qualname":"::rr::rdata::caa::Value::Issuer","value":"Value::Issuer(Option<Name>, Vec<KeyValue>)","parent":{"krate":0,"index":2832},"children":[],"decl_id":null,"docs":" Issuer authorized to issue certs for this zone, and any associated parameters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2837},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217701,"byte_end":217704,"line_start":316,"line_end":316,"column_start":5,"column_end":8},"name":"Url","qualname":"::rr::rdata::caa::Value::Url","value":"Value::Url(Url)","parent":{"krate":0,"index":2832},"children":[],"decl_id":null,"docs":" Url to which to send CA errors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2840},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217763,"byte_end":217770,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Value::Unknown","value":"Value::Unknown(Vec<u8>)","parent":{"krate":0,"index":2832},"children":[],"decl_id":null,"docs":" Unrecognized tag and value by Trust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2832},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217523,"byte_end":217528,"line_start":312,"line_end":312,"column_start":10,"column_end":15},"name":"Value","qualname":"::rr::rdata::caa::Value","value":"Value::{Issuer, Url, Unknown}","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2837},{"krate":0,"index":2840}],"decl_id":null,"docs":" Potential values.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217514,"byte_end":217782,"line_start":312,"line_end":319,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217844,"byte_end":217853,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_issuer","qualname":"<Value>::is_issuer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Issuer`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":218026,"byte_end":218032,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"is_url","qualname":"<Value>::is_url","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is a `Url`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":218207,"byte_end":218217,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Value>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Unknown`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":223891,"byte_end":223902,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"read_issuer","qualname":"::rr::rdata::caa::read_issuer","value":"fn (bytes: &[u8]) -> ProtoResult<(Option<Name>, Vec<KeyValue>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the issuer field according to the spec","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":229605,"byte_end":229615,"line_start":642,"line_end":642,"column_start":8,"column_end":18},"name":"read_iodef","qualname":"::rr::rdata::caa::read_iodef","value":"fn (url: &[u8]) -> ProtoResult<Url>","parent":null,"children":[],"decl_id":null,"docs":" Incident Object Description Exchange Format","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2855},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":229976,"byte_end":229984,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"name":"KeyValue","qualname":"::rr::rdata::caa::KeyValue","value":"KeyValue {  }","parent":null,"children":[{"krate":0,"index":2856},{"krate":0,"index":2857}],"decl_id":null,"docs":" Issuer key and value pairs.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":229965,"byte_end":230024,"line_start":653,"line_end":656,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":230092,"byte_end":230095,"line_start":660,"line_end":660,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyValue>::new","value":"fn <K, V> (key: K, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Contstruct a new KeyValue pair\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":233885,"byte_end":233889,"line_start":746,"line_end":746,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::caa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<CAA>","parent":null,"children":[],"decl_id":null,"docs":" Read the binary CAA format","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":798},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":236095,"byte_end":236099,"line_start":818,"line_end":818,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::caa::emit","value":"fn (encoder: &mut BinEncoder, caa: &CAA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":800},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mx","qualname":"::rr::rdata::mx","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":2870},{"krate":0,"index":2883},{"krate":0,"index":2880},{"krate":0,"index":2878},{"krate":0,"index":2875},{"krate":0,"index":2873},{"krate":0,"index":804},{"krate":0,"index":808},{"krate":0,"index":809}],"decl_id":null,"docs":" mail exchange, email, record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2870},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":245337,"byte_end":245339,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"MX","qualname":"::rr::rdata::mx::MX","value":"MX {  }","parent":null,"children":[{"krate":0,"index":2871},{"krate":0,"index":2872}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":245326,"byte_end":245384,"line_start":41,"line_end":44,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":245730,"byte_end":245733,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<MX>::new","value":"fn (preference: u16, exchange: Name) -> MX","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new MX RData","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":246216,"byte_end":246226,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"preference","qualname":"<MX>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":246582,"byte_end":246590,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"exchange","qualname":"<MX>::exchange","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":246690,"byte_end":246694,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::mx::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<MX>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":809},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":247531,"byte_end":247535,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::mx::emit","value":"fn (encoder: &mut BinEncoder, mx: &MX) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":810},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::rr::rdata::name","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/name.rs","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"decl_id":null,"docs":" Record type for all cname like records.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/name.rs","byte_start":250174,"byte_end":250178,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::name::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Name>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":815},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/name.rs","byte_start":250984,"byte_end":250988,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::name::emit","value":"fn (encoder: &mut BinEncoder, name_data: &Name) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":816},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naptr","qualname":"::rr::rdata::naptr","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":2885},{"krate":0,"index":2902},{"krate":0,"index":2899},{"krate":0,"index":2897},{"krate":0,"index":2894},{"krate":0,"index":2892},{"krate":0,"index":820},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":833}],"decl_id":null,"docs":" Dynamic Delegation Discovery System\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2885},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":253656,"byte_end":253661,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"NAPTR","qualname":"::rr::rdata::naptr::NAPTR","value":"NAPTR {  }","parent":null,"children":[{"krate":0,"index":2886},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891}],"decl_id":null,"docs":" [RFC 3403 DDDS DNS Database, October 2002](https://tools.ietf.org/html/rfc3403#section-4)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":253645,"byte_end":253795,"line_start":44,"line_end":51,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":254654,"byte_end":254657,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<NAPTR>::new","value":"fn (order: u16, preference: u16, flags: Box<[u8]>, services: Box<[u8]>, regexp: Box<[u8]>, replacement: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new NAPTR record","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":255497,"byte_end":255502,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"order","qualname":"<NAPTR>::order","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   ORDER\n      A 16-bit unsigned integer specifying the order in which the NAPTR\n      records MUST be processed in order to accurately represent the\n      ordered list of Rules.  The ordering is from lowest to highest.\n      If two records have the same order value then they are considered\n      to be the same rule and should be selected based on the\n      combination of the Preference values and Services offered.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":257434,"byte_end":257444,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"preference","qualname":"<NAPTR>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   PREFERENCE\n      Although it is called \"preference\" in deference to DNS\n      terminology, this field is equivalent to the Priority value in the\n      DDDS Algorithm.  It is a 16-bit unsigned integer that specifies\n      the order in which NAPTR records with equal Order values SHOULD be\n      processed, low numbers being processed before high numbers.  This\n      is similar to the preference field in an MX record, and is used so\n      domain administrators can direct clients towards more capable\n      hosts or lighter weight protocols.  A client MAY look at records\n      with higher preference values if it has a good reason to do so\n      such as not supporting some protocol or service very well.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":258075,"byte_end":258080,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flags","qualname":"<NAPTR>::flags","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   FLAGS\n      A <character-string> containing flags to control aspects of the\n      rewriting and interpretation of the fields in the record.  Flags\n      are single characters from the set A-Z and 0-9.  The case of the\n      alphabetic characters is not significant.  The field can be empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":258422,"byte_end":258430,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"services","qualname":"<NAPTR>::services","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   SERVICES\n      A <character-string> that specifies the Service Parameters\n      applicable to this this delegation path.  It is up to the\n      Application Specification to specify the values found in this\n      field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":259332,"byte_end":259338,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"regexp","qualname":"<NAPTR>::regexp","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   REGEXP\n      A <character-string> containing a substitution expression that is\n      applied to the original string held by the client in order to\n      construct the next domain name to lookup.  See the DDDS Algorithm\n      specification for the syntax of this field.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":260298,"byte_end":260309,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"replacement","qualname":"<NAPTR>::replacement","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   REPLACEMENT\n      A <domain-name> which is the next domain-name to query for\n      depending on the potential values found in the flags field.  This\n      field is used when the regular expression is a simple replacement\n      operation.  Any value in this field MUST be a fully qualified\n      domain-name.  Name compression is not to be used for this field.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":828},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":260408,"byte_end":260420,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"verify_flags","qualname":"::rr::rdata::naptr::verify_flags","value":"fn (flags: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" verifies that the flags are valid\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":260646,"byte_end":260650,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::naptr::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<NAPTR>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":833},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":261399,"byte_end":261403,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::naptr::emit","value":"fn (encoder: &mut BinEncoder, naptr: &NAPTR) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Declares the method for emiting this type\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":835},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"null","qualname":"::rr::rdata::null","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","parent":null,"children":[{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":2904},{"krate":0,"index":2918},{"krate":0,"index":2916},{"krate":0,"index":2913},{"krate":0,"index":2911},{"krate":0,"index":2908},{"krate":0,"index":2906},{"krate":0,"index":838},{"krate":0,"index":842},{"krate":0,"index":844}],"decl_id":null,"docs":" null record type, generally not used except as an internal tool for representing null data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2904},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":264851,"byte_end":264855,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"NULL","qualname":"::rr::rdata::null::NULL","value":"NULL {  }","parent":null,"children":[{"krate":0,"index":2905}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":264840,"byte_end":264890,"line_start":40,"line_end":42,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":264950,"byte_end":264953,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<NULL>::new","value":"fn () -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Construct a new NULL RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":265072,"byte_end":265076,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"with","qualname":"<NULL>::with","value":"fn (anything: Vec<u8>) -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new NULL RData with the associated data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":265233,"byte_end":265241,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"anything","qualname":"<NULL>::anything","value":"fn (&self) -> Option<&Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the buffer stored in the NULL\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":265360,"byte_end":265364,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::null::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<NULL>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":844},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":265783,"byte_end":265787,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::null::emit","value":"fn (encoder: &mut BinEncoder, nil: &NULL) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":845},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"openpgpkey","qualname":"::rr::rdata::openpgpkey","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":2920},{"krate":0,"index":2932},{"krate":0,"index":2929},{"krate":0,"index":2927},{"krate":0,"index":2924},{"krate":0,"index":2922},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":" OPENPGPKEY records for OpenPGP public keys\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2920},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267347,"byte_end":267357,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"OPENPGPKEY","qualname":"::rr::rdata::openpgpkey::OPENPGPKEY","value":"OPENPGPKEY {  }","parent":null,"children":[{"krate":0,"index":2921}],"decl_id":null,"docs":" [RFC 7929](https://tools.ietf.org/html/rfc7929#section-2.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267336,"byte_end":267386,"line_start":21,"line_end":23,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267597,"byte_end":267600,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<OPENPGPKEY>::new","value":"fn (public_key: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OPENPGPKEY record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267795,"byte_end":267805,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"public_key","qualname":"<OPENPGPKEY>::public_key","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" The public key. This should be an OpenPGP Transferable Public Key,\n but this is not guaranteed.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":851},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267908,"byte_end":267912,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::openpgpkey::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<OPENPGPKEY>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given decoder.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":268268,"byte_end":268272,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::openpgpkey::emit","value":"fn (encoder: &mut BinEncoder, openpgpkey: &OPENPGPKEY) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData using the given encoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":853},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opt","qualname":"::rr::rdata::opt","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":2934},{"krate":0,"index":2945},{"krate":0,"index":2943},{"krate":0,"index":2940},{"krate":0,"index":2938},{"krate":0,"index":2936},{"krate":0,"index":857},{"krate":0,"index":862},{"krate":0,"index":867},{"krate":0,"index":2947},{"krate":0,"index":2961},{"krate":0,"index":2958},{"krate":0,"index":2956},{"krate":0,"index":2963},{"krate":0,"index":3003},{"krate":0,"index":3001},{"krate":0,"index":3000},{"krate":0,"index":2998},{"krate":0,"index":2995},{"krate":0,"index":2993},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":3006},{"krate":0,"index":3031},{"krate":0,"index":3021},{"krate":0,"index":3018},{"krate":0,"index":3016},{"krate":0,"index":3014},{"krate":0,"index":3011},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883}],"decl_id":null,"docs":" option record for passing protocol options between the client and server\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2934},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276033,"byte_end":276036,"line_start":164,"line_end":164,"column_start":12,"column_end":15},"name":"OPT","qualname":"::rr::rdata::opt::OPT","value":"OPT {  }","parent":null,"children":[{"krate":0,"index":2935}],"decl_id":null,"docs":" The OPT record type is used for ExtendedDNS records.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276022,"byte_end":276084,"line_start":164,"line_end":166,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276315,"byte_end":276318,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<OPT>::new","value":"fn (options: HashMap<EdnsCode, EdnsOption>) -> OPT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OPT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276444,"byte_end":276451,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"options","qualname":"<OPT>::options","value":"fn (&self) -> &HashMap<EdnsCode, EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" The entire map of options\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276581,"byte_end":276584,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"get","qualname":"<OPT>::get","value":"fn (&self, code: EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Get a single option based on the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276753,"byte_end":276759,"line_start":193,"line_end":193,"column_start":12,"column_end":18},"name":"insert","qualname":"<OPT>::insert","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert a new option, the key is derived from the `EdnsOption`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276906,"byte_end":276910,"line_start":199,"line_end":199,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::opt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<OPT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":867},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":279561,"byte_end":279565,"line_start":263,"line_end":263,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::opt::emit","value":"fn (encoder: &mut BinEncoder, opt: &OPT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2964},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280302,"byte_end":280306,"line_start":289,"line_end":289,"column_start":5,"column_end":9},"name":"Zero","qualname":"::rr::rdata::opt::EdnsCode::Zero","value":"EdnsCode::Zero","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 6891, Reserved](https://tools.ietf.org/html/rfc6891)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2966},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280384,"byte_end":280387,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"LLQ","qualname":"::rr::rdata::opt::EdnsCode::LLQ","value":"EdnsCode::LLQ","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [LLQ On-hold](http://files.dns-sd.org/draft-sekar-dns-llq.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2968},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280463,"byte_end":280465,"line_start":295,"line_end":295,"column_start":5,"column_end":7},"name":"UL","qualname":"::rr::rdata::opt::EdnsCode::UL","value":"EdnsCode::UL","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [UL On-hold](http://files.dns-sd.org/draft-sekar-dns-ul.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2970},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280534,"byte_end":280538,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"NSID","qualname":"::rr::rdata::opt::EdnsCode::NSID","value":"EdnsCode::NSID","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 5001, NSID](https://tools.ietf.org/html/rfc5001)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2972},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280693,"byte_end":280696,"line_start":301,"line_end":301,"column_start":5,"column_end":8},"name":"DAU","qualname":"::rr::rdata::opt::EdnsCode::DAU","value":"EdnsCode::DAU","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 6975, DNSSEC Algorithm Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2974},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280779,"byte_end":280782,"line_start":304,"line_end":304,"column_start":5,"column_end":8},"name":"DHU","qualname":"::rr::rdata::opt::EdnsCode::DHU","value":"EdnsCode::DHU","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 6975, DS Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280868,"byte_end":280871,"line_start":307,"line_end":307,"column_start":5,"column_end":8},"name":"N3U","qualname":"::rr::rdata::opt::EdnsCode::N3U","value":"EdnsCode::N3U","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 6975, NSEC3 Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2978},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280986,"byte_end":280992,"line_start":310,"line_end":310,"column_start":5,"column_end":11},"name":"Subnet","qualname":"::rr::rdata::opt::EdnsCode::Subnet","value":"EdnsCode::Subnet","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [edns-client-subnet, Optional](https://tools.ietf.org/html/draft-vandergaast-edns-client-subnet-02)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2980},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281078,"byte_end":281084,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Expire","qualname":"::rr::rdata::opt::EdnsCode::Expire","value":"EdnsCode::Expire","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [RFC 7314, EDNS EXPIRE, Optional](https://tools.ietf.org/html/rfc7314)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2982},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281183,"byte_end":281189,"line_start":316,"line_end":316,"column_start":5,"column_end":11},"name":"Cookie","qualname":"::rr::rdata::opt::EdnsCode::Cookie","value":"EdnsCode::Cookie","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281320,"byte_end":281329,"line_start":319,"line_end":319,"column_start":5,"column_end":14},"name":"Keepalive","qualname":"::rr::rdata::opt::EdnsCode::Keepalive","value":"EdnsCode::Keepalive","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-tcp-keepalive, Optional](https://tools.ietf.org/html/draft-ietf-dnsop-edns-tcp-keepalive-04)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2986},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281448,"byte_end":281455,"line_start":322,"line_end":322,"column_start":5,"column_end":12},"name":"Padding","qualname":"::rr::rdata::opt::EdnsCode::Padding","value":"EdnsCode::Padding","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [draft-mayrhofer-edns0-padding, Optional](https://tools.ietf.org/html/draft-mayrhofer-edns0-padding-01)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2988},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281572,"byte_end":281577,"line_start":325,"line_end":325,"column_start":5,"column_end":10},"name":"Chain","qualname":"::rr::rdata::opt::EdnsCode::Chain","value":"EdnsCode::Chain","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-chain-query](https://tools.ietf.org/html/draft-ietf-dnsop-edns-chain-query-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281648,"byte_end":281655,"line_start":328,"line_end":328,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsCode::Unknown","value":"EdnsCode::Unknown(u16)","parent":{"krate":0,"index":2963},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2963},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280221,"byte_end":280229,"line_start":287,"line_end":287,"column_start":10,"column_end":18},"name":"EdnsCode","qualname":"::rr::rdata::opt::EdnsCode","value":"EdnsCode::{Zero, LLQ, UL, NSID, DAU, DHU, N3U, Subnet, Expire, Cookie, Keepalive, Padding, Chain, Unknown}","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":2966},{"krate":0,"index":2968},{"krate":0,"index":2970},{"krate":0,"index":2972},{"krate":0,"index":2974},{"krate":0,"index":2976},{"krate":0,"index":2978},{"krate":0,"index":2980},{"krate":0,"index":2982},{"krate":0,"index":2984},{"krate":0,"index":2986},{"krate":0,"index":2988},{"krate":0,"index":2990}],"decl_id":null,"docs":" The code of the EDNS data option\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280212,"byte_end":281663,"line_start":287,"line_end":329,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":280212,"byte_end":281663,"line_start":287,"line_end":329,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283869,"byte_end":283876,"line_start":396,"line_end":396,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsOption::Unknown","value":"EdnsOption::Unknown(u16, Vec<u8>)","parent":{"krate":0,"index":3006},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3006},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283362,"byte_end":283372,"line_start":382,"line_end":382,"column_start":10,"column_end":20},"name":"EdnsOption","qualname":"::rr::rdata::opt::EdnsOption","value":"EdnsOption::{Unknown}","parent":null,"children":[{"krate":0,"index":3007}],"decl_id":null,"docs":" options used to pass information about capabilities between client and server","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283353,"byte_end":283893,"line_start":382,"line_end":397,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283978,"byte_end":283981,"line_start":401,"line_end":401,"column_start":12,"column_end":15},"name":"len","qualname":"<EdnsOption>::len","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the length in bytes of the EdnsOption\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":284407,"byte_end":284415,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EdnsOption>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the length in bytes of the EdnsOption is 0\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":886},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"soa","qualname":"::rr::rdata::soa","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":3033},{"krate":0,"index":3051},{"krate":0,"index":3048},{"krate":0,"index":3046},{"krate":0,"index":3043},{"krate":0,"index":3041},{"krate":0,"index":890},{"krate":0,"index":900},{"krate":0,"index":901}],"decl_id":null,"docs":" start of authority record defining ownership and defaults for the zone\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3033},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":290406,"byte_end":290409,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"SOA","qualname":"::rr::rdata::soa::SOA","value":"SOA {  }","parent":null,"children":[{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":290395,"byte_end":290533,"line_start":68,"line_end":76,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":291308,"byte_end":291311,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<SOA>::new","value":"fn (mname: Name, rname: Name, serial: u32, refresh: i32, retry: i32, expire: i32, minimum: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SOA record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":291702,"byte_end":291718,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"increment_serial","qualname":"<SOA>::increment_serial","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the serial number by one\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":292169,"byte_end":292174,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"mname","qualname":"<SOA>::mname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MNAME           The <domain-name> of the name server that was the\n                 original or primary source of data for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":292559,"byte_end":292564,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"rname","qualname":"<SOA>::rname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RNAME           A <domain-name> which specifies the mailbox of the\n                 person responsible for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":293158,"byte_end":293164,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"serial","qualname":"<SOA>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n SERIAL          The unsigned 32 bit version number of the original copy\n                 of the zone.  Zone transfers preserve this value.  This\n                 value wraps and should be compared using sequence space\n                 arithmetic.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":293474,"byte_end":293481,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"refresh","qualname":"<SOA>::refresh","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n REFRESH         A 32 bit time interval before the zone should be\n                 refreshed.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":293850,"byte_end":293855,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"retry","qualname":"<SOA>::retry","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RETRY           A 32 bit time interval that should elapse before a\n                 failed refresh should be retried.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":294339,"byte_end":294345,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"expire","qualname":"<SOA>::expire","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n EXPIRE          A 32 bit time value that specifies the upper limit on\n                 the time interval that can elapse before the zone is no\n                 longer authoritative.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":294703,"byte_end":294710,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"minimum","qualname":"<SOA>::minimum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MINIMUM         The unsigned 32 bit minimum TTL field that should be\n                 exported with any RR from this zone.\n ```","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":294806,"byte_end":294810,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::soa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SOA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":901},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":296036,"byte_end":296040,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::soa::emit","value":"fn (encoder: &mut BinEncoder, soa: &SOA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":902},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"srv","qualname":"::rr::rdata::srv","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":3053},{"krate":0,"index":3068},{"krate":0,"index":3065},{"krate":0,"index":3063},{"krate":0,"index":3060},{"krate":0,"index":3058},{"krate":0,"index":906},{"krate":0,"index":912},{"krate":0,"index":913}],"decl_id":null,"docs":" service records for identify port mapping for specific services on a host\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3053},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":300267,"byte_end":300270,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"SRV","qualname":"::rr::rdata::srv::SRV","value":"SRV {  }","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057}],"decl_id":null,"docs":" [RFC 2782, DNS SRV RR, February 2000](https://tools.ietf.org/html/rfc2782)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":300256,"byte_end":300343,"line_start":84,"line_end":89,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":300931,"byte_end":300934,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<SRV>::new","value":"fn (priority: u16, weight: u16, port: u16, target: Name) -> SRV","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SRV record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":301511,"byte_end":301519,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"priority","qualname":"<SRV>::priority","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Priority\n The priority of this target host.  A client MUST attempt to\n contact the target host with the lowest-numbered priority it can\n reach; target hosts with the same priority SHOULD be tried in an\n order defined by the weight field.  The range is 0-65535.  This\n is a 16 bit unsigned integer in network byte order.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":303651,"byte_end":303657,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"weight","qualname":"<SRV>::weight","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Weight\n A server selection mechanism.  The weight field specifies a\n relative weight for entries with the same priority. Larger\n weights SHOULD be given a proportionately higher probability of\n being selected. The range of this number is 0-65535.  This is a\n 16 bit unsigned integer in network byte order.  Domain\n administrators SHOULD use Weight 0 when there isn't any server\n selection to do, to make the RR easier to read for humans (less\n noisy).  In the presence of records containing weights greater\n than 0, records with weight 0 should have a very small chance of\n being selected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":303978,"byte_end":303982,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"port","qualname":"<SRV>::port","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Port\n The port on this target host of this service.  The range is 0-\n 65535.  This is a 16 bit unsigned integer in network byte order.\n This is often as specified in Assigned Numbers but need not be.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":304611,"byte_end":304617,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"target","qualname":"<SRV>::target","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Target\n The domain name of the target host.  There MUST be one or more\n address records for this name, the name MUST NOT be an alias (in\n the sense of RFC 1034 or RFC 2181).  Implementors are urged, but\n not required, to return the address record(s) in the Additional\n Data section.  Unless and until permitted by future standards\n action, name compression is not to be used for this field.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":912},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":304715,"byte_end":304719,"line_start":196,"line_end":196,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::srv::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SRV>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":305809,"byte_end":305813,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::srv::emit","value":"fn (encoder: &mut BinEncoder, srv: &SRV) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sshfp","qualname":"::rr::rdata::sshfp","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":3070},{"krate":0,"index":3084},{"krate":0,"index":3081},{"krate":0,"index":3079},{"krate":0,"index":3076},{"krate":0,"index":3074},{"krate":0,"index":917},{"krate":0,"index":3086},{"krate":0,"index":3111},{"krate":0,"index":3108},{"krate":0,"index":3106},{"krate":0,"index":3103},{"krate":0,"index":3101},{"krate":0,"index":3100},{"krate":0,"index":922},{"krate":0,"index":924},{"krate":0,"index":3113},{"krate":0,"index":3134},{"krate":0,"index":3131},{"krate":0,"index":3129},{"krate":0,"index":3126},{"krate":0,"index":3124},{"krate":0,"index":3123},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":933}],"decl_id":null,"docs":" SSHFP records for SSH public key fingerprints\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3070},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":308467,"byte_end":308472,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"SSHFP","qualname":"::rr::rdata::sshfp::SSHFP","value":"SSHFP {  }","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073}],"decl_id":null,"docs":" [RFC 4255](https://tools.ietf.org/html/rfc4255#section-3.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":308456,"byte_end":308567,"line_start":40,"line_end":44,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":308845,"byte_end":308848,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<SSHFP>::new","value":"fn (algorithm: Algorithm, fingerprint_type: FingerprintType, fingerprint: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SSHFP record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":309129,"byte_end":309138,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<SSHFP>::algorithm","value":"fn (&self) -> Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The SSH public key algorithm.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":309239,"byte_end":309255,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"fingerprint_type","qualname":"<SSHFP>::fingerprint_type","value":"fn (&self) -> FingerprintType","parent":null,"children":[],"decl_id":null,"docs":" The fingerprint type to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":309375,"byte_end":309386,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"fingerprint","qualname":"<SSHFP>::fingerprint","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" The fingerprint of the public key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310118,"byte_end":310126,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::rdata::sshfp::Algorithm::Reserved","value":"Algorithm::Reserved","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" Reserved value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3089},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310145,"byte_end":310148,"line_start":106,"line_end":106,"column_start":5,"column_end":8},"name":"RSA","qualname":"::rr::rdata::sshfp::Algorithm::RSA","value":"Algorithm::RSA","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" RSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3091},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310171,"byte_end":310174,"line_start":109,"line_end":109,"column_start":5,"column_end":8},"name":"DSA","qualname":"::rr::rdata::sshfp::Algorithm::DSA","value":"Algorithm::DSA","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" DSS/DSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310195,"byte_end":310200,"line_start":112,"line_end":112,"column_start":5,"column_end":10},"name":"ECDSA","qualname":"::rr::rdata::sshfp::Algorithm::ECDSA","value":"Algorithm::ECDSA","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" ECDSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310223,"byte_end":310230,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"Ed25519","qualname":"::rr::rdata::sshfp::Algorithm::Ed25519","value":"Algorithm::Ed25519","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" Ed25519\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3097},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310262,"byte_end":310272,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::sshfp::Algorithm::Unassigned","value":"Algorithm::Unassigned(u8)","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" Unassigned value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3086},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310079,"byte_end":310088,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::rr::rdata::sshfp::Algorithm","value":"Algorithm::{Reserved, RSA, DSA, ECDSA, Ed25519, Unassigned}","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3091},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3097}],"decl_id":null,"docs":" ```text\n 3.1.1.  Algorithm Number Specification","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310070,"byte_end":310279,"line_start":101,"line_end":119,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310070,"byte_end":310279,"line_start":101,"line_end":119,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311788,"byte_end":311796,"line_start":171,"line_end":171,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::rdata::sshfp::FingerprintType::Reserved","value":"FingerprintType::Reserved","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" Reserved value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3116},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311817,"byte_end":311821,"line_start":174,"line_end":174,"column_start":5,"column_end":9},"name":"SHA1","qualname":"::rr::rdata::sshfp::FingerprintType::SHA1","value":"FingerprintType::SHA1","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" SHA-1\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3118},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311844,"byte_end":311850,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"SHA256","qualname":"::rr::rdata::sshfp::FingerprintType::SHA256","value":"FingerprintType::SHA256","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" SHA-256\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3120},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311882,"byte_end":311892,"line_start":180,"line_end":180,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::sshfp::FingerprintType::Unassigned","value":"FingerprintType::Unassigned(u8)","parent":{"krate":0,"index":3113},"children":[],"decl_id":null,"docs":" Unassigned value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3113},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311743,"byte_end":311758,"line_start":169,"line_end":169,"column_start":10,"column_end":25},"name":"FingerprintType","qualname":"::rr::rdata::sshfp::FingerprintType","value":"FingerprintType::{Reserved, SHA1, SHA256, Unassigned}","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120}],"decl_id":null,"docs":" ```text\n 3.1.2.  Fingerprint Type Specification","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311734,"byte_end":311899,"line_start":169,"line_end":181,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311734,"byte_end":311899,"line_start":169,"line_end":181,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":312510,"byte_end":312514,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::sshfp::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<SSHFP>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given decoder.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":313096,"byte_end":313100,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::sshfp::emit","value":"fn (encoder: &mut BinEncoder, sshfp: &SSHFP) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData using the given encoder.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":934},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tlsa","qualname":"::rr::rdata::tlsa","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":3136},{"krate":0,"index":3151},{"krate":0,"index":3148},{"krate":0,"index":3146},{"krate":0,"index":3143},{"krate":0,"index":3141},{"krate":0,"index":3153},{"krate":0,"index":3178},{"krate":0,"index":3175},{"krate":0,"index":3173},{"krate":0,"index":3170},{"krate":0,"index":3168},{"krate":0,"index":3167},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":3180},{"krate":0,"index":3201},{"krate":0,"index":3198},{"krate":0,"index":3196},{"krate":0,"index":3193},{"krate":0,"index":3191},{"krate":0,"index":3190},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":3203},{"krate":0,"index":3226},{"krate":0,"index":3223},{"krate":0,"index":3221},{"krate":0,"index":3218},{"krate":0,"index":3216},{"krate":0,"index":3215},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":955},{"krate":0,"index":958}],"decl_id":null,"docs":" TLSA records for storing TLS certificate validation information\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3136},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":317928,"byte_end":317932,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"TLSA","qualname":"::rr::rdata::tlsa::TLSA","value":"TLSA {  }","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":317917,"byte_end":318035,"line_start":33,"line_end":38,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":320054,"byte_end":320056,"line_start":82,"line_end":82,"column_start":5,"column_end":7},"name":"CA","qualname":"::rr::rdata::tlsa::CertUsage::CA","value":"CertUsage::CA","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" ```text\n       0 -- Certificate usage 0 is used to specify a CA certificate, or\n       the public key of such a certificate, that MUST be found in any of\n       the PKIX certification paths for the end entity certificate given\n       by the server in TLS.  This certificate usage is sometimes\n       referred to as \"CA constraint\" because it limits which CA can be\n       used to issue certificates for a given service on a host.  The\n       presented certificate MUST pass PKIX certification path\n       validation, and a CA certificate that matches the TLSA record MUST\n       be included as part of a valid certification path.  Because this\n       certificate usage allows both trust anchors and CA certificates,\n       the certificate might or might not have the basicConstraints\n       extension present.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3156},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":320671,"byte_end":320678,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"Service","qualname":"::rr::rdata::tlsa::CertUsage::Service","value":"CertUsage::Service","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" ```text\n       1 -- Certificate usage 1 is used to specify an end entity\n       certificate, or the public key of such a certificate, that MUST be\n       matched with the end entity certificate given by the server in\n       TLS.  This certificate usage is sometimes referred to as \"service\n       certificate constraint\" because it limits which end entity\n       certificate can be used by a given service on a host.  The target\n       certificate MUST pass PKIX certification path validation and MUST\n       match the TLSA record.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":321559,"byte_end":321570,"line_start":109,"line_end":109,"column_start":5,"column_end":16},"name":"TrustAnchor","qualname":"::rr::rdata::tlsa::CertUsage::TrustAnchor","value":"CertUsage::TrustAnchor","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" ```text\n       2 -- Certificate usage 2 is used to specify a certificate, or the\n       public key of such a certificate, that MUST be used as the trust\n       anchor when validating the end entity certificate given by the\n       server in TLS.  This certificate usage is sometimes referred to as\n       \"trust anchor assertion\" and allows a domain name administrator to\n       specify a new trust anchor -- for example, if the domain issues\n       its own certificates under its own CA that is not expected to be\n       in the end users' collection of trust anchors.  The target\n       certificate MUST pass PKIX certification path validation, with any\n       certificate matching the TLSA record considered to be a trust\n       anchor for this certification path validation.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":322376,"byte_end":322388,"line_start":123,"line_end":123,"column_start":5,"column_end":17},"name":"DomainIssued","qualname":"::rr::rdata::tlsa::CertUsage::DomainIssued","value":"CertUsage::DomainIssued","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" ```text\n       3 -- Certificate usage 3 is used to specify a certificate, or the\n       public key of such a certificate, that MUST match the end entity\n       certificate given by the server in TLS.  This certificate usage is\n       sometimes referred to as \"domain-issued certificate\" because it\n       allows for a domain name administrator to issue certificates for a\n       domain without involving a third-party CA.  The target certificate\n       MUST match the TLSA record.  The difference between certificate\n       usage 1 and certificate usage 3 is that certificate usage 1\n       requires that the certificate pass PKIX validation, but PKIX\n       validation is not tested for certificate usage 3.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":322448,"byte_end":322458,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::CertUsage::Unassigned","value":"CertUsage::Unassigned(u8)","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" Unassined at the time of this implementation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3165},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":322491,"byte_end":322498,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::CertUsage::Private","value":"CertUsage::Private","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3153},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":319124,"byte_end":319133,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"CertUsage","qualname":"::rr::rdata::tlsa::CertUsage","value":"CertUsage::{CA, Service, TrustAnchor, DomainIssued, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3165}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":319115,"byte_end":322501,"line_start":67,"line_end":130,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":319115,"byte_end":322501,"line_start":67,"line_end":130,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3181},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324030,"byte_end":324034,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Full","qualname":"::rr::rdata::tlsa::Selector::Full","value":"Selector::Full","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Full certificate: the Certificate binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3183},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324124,"byte_end":324128,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Spki","qualname":"::rr::rdata::tlsa::Selector::Spki","value":"Selector::Spki","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" SubjectPublicKeyInfo: DER-encoded binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3185},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324182,"byte_end":324192,"line_start":185,"line_end":185,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Selector::Unassigned","value":"Selector::Unassigned(u8)","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324225,"byte_end":324232,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Selector::Private","value":"Selector::Private","parent":{"krate":0,"index":3180},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3180},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":323932,"byte_end":323940,"line_start":177,"line_end":177,"column_start":10,"column_end":18},"name":"Selector","qualname":"::rr::rdata::tlsa::Selector","value":"Selector::{Full, Spki, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3188}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":323923,"byte_end":324235,"line_start":177,"line_end":189,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":323923,"byte_end":324235,"line_start":177,"line_end":189,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3204},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325621,"byte_end":325624,"line_start":237,"line_end":237,"column_start":5,"column_end":8},"name":"Raw","qualname":"::rr::rdata::tlsa::Matching::Raw","value":"Matching::Raw","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" Exact match on selected content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3206},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325682,"byte_end":325688,"line_start":240,"line_end":240,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::rr::rdata::tlsa::Matching::Sha256","value":"Matching::Sha256","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" SHA-256 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3208},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325746,"byte_end":325752,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::rr::rdata::tlsa::Matching::Sha512","value":"Matching::Sha512","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" SHA-512 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3210},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325806,"byte_end":325816,"line_start":246,"line_end":246,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Matching::Unassigned","value":"Matching::Unassigned(u8)","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3213},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325849,"byte_end":325856,"line_start":249,"line_end":249,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Matching::Private","value":"Matching::Private","parent":{"krate":0,"index":3203},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3203},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325566,"byte_end":325574,"line_start":235,"line_end":235,"column_start":10,"column_end":18},"name":"Matching","qualname":"::rr::rdata::tlsa::Matching","value":"Matching::{Raw, Sha256, Sha512, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3210},{"krate":0,"index":3213}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.3)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325557,"byte_end":325859,"line_start":235,"line_end":250,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325557,"byte_end":325859,"line_start":235,"line_end":250,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":327246,"byte_end":327249,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"new","qualname":"<TLSA>::new","value":"fn (cert_usage: CertUsage, selector: Selector, matching: Matching, cert_data: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TLSA","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":327633,"byte_end":327643,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"cert_usage","qualname":"<TLSA>::cert_usage","value":"fn (&self) -> &CertUsage","parent":null,"children":[],"decl_id":null,"docs":" Specifies the provided association that will be used to match the certificate presented in the TLS handshake\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":327831,"byte_end":327839,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"selector","qualname":"<TLSA>::selector","value":"fn (&self) -> &Selector","parent":null,"children":[],"decl_id":null,"docs":" Specifies which part of the TLS certificate presented by the server will be matched against the association data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":327966,"byte_end":327974,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"matching","qualname":"<TLSA>::matching","value":"fn (&self) -> &Matching","parent":null,"children":[],"decl_id":null,"docs":" Specifies how the certificate association is presented\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":328122,"byte_end":328131,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"cert_data","qualname":"<TLSA>::cert_data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Binary data for validating the cert, see other members to understand format\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":955},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":328911,"byte_end":328915,"line_start":343,"line_end":343,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::tlsa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<TLSA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":958},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":329746,"byte_end":329750,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::tlsa::emit","value":"fn (encoder: &mut BinEncoder, tlsa: &TLSA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":959},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"txt","qualname":"::rr::rdata::txt","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","parent":null,"children":[{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":3228},{"krate":0,"index":3240},{"krate":0,"index":3237},{"krate":0,"index":3235},{"krate":0,"index":3232},{"krate":0,"index":3230},{"krate":0,"index":963},{"krate":0,"index":968},{"krate":0,"index":970}],"decl_id":null,"docs":" text records for storing arbitrary data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3228},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":334865,"byte_end":334868,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"TXT","qualname":"::rr::rdata::txt::TXT","value":"TXT {  }","parent":null,"children":[{"krate":0,"index":3229}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":334854,"byte_end":334904,"line_start":38,"line_end":40,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":335145,"byte_end":335148,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<TXT>::new","value":"fn (txt_data: Vec<String>) -> TXT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TXT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":335509,"byte_end":335517,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"txt_data","qualname":"<TXT>::txt_data","value":"fn (&self) -> &[Box<[u8]>]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TXT-DATA        One or more <character-string>s.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":335644,"byte_end":335648,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"iter","qualname":"<TXT>::iter","value":"fn (&self) -> Iter<Box<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the arrays in the txt data\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":968},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":335764,"byte_end":335768,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::txt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<TXT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":970},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":336430,"byte_end":336434,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::txt::emit","value":"fn (encoder: &mut BinEncoder, txt: &TXT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_data","qualname":"::rr::record_data","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":3242},{"krate":0,"index":3326},{"krate":0,"index":3306},{"krate":0,"index":3303},{"krate":0,"index":3301},{"krate":0,"index":3299},{"krate":0,"index":1005},{"krate":0,"index":1023},{"krate":0,"index":1025}],"decl_id":null,"docs":" record data enum variants\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3243},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":340044,"byte_end":340045,"line_start":78,"line_end":78,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_data::RData::A","value":"RData::A(Ipv4Addr)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1035 -- Domain Implementation and Specification    November 1987","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":340355,"byte_end":340359,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_data::RData::AAAA","value":"RData::AAAA(Ipv6Addr)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1886 -- IPv6 DNS Extensions              December 1995","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3249},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":340757,"byte_end":340762,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"ANAME","qualname":"::rr::record_data::RData::ANAME","value":"RData::ANAME(Name)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 2.  The ANAME resource record","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3252},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":342099,"byte_end":342102,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_data::RData::CAA","value":"RData::CAA(CAA)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 6844          Certification Authority Authorization     January 2013","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3255},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":343616,"byte_end":343621,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_data::RData::CNAME","value":"RData::CNAME(Name)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n   3.3. Standard RRs","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3258},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":344629,"byte_end":344631,"line_start":191,"line_end":191,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_data::RData::MX","value":"RData::MX(MX)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.9. MX RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":350974,"byte_end":350979,"line_start":302,"line_end":302,"column_start":5,"column_end":10},"name":"NAPTR","qualname":"::rr::record_data::RData::NAPTR","value":"RData::NAPTR(NAPTR)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" [RFC 3403 DDDS DNS Database, October 2002](https://tools.ietf.org/html/rfc3403#section-4)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3264},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":351635,"byte_end":351639,"line_start":319,"line_end":319,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_data::RData::NULL","value":"RData::NULL(NULL)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.10. NULL RDATA format (EXPERIMENTAL)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":352846,"byte_end":352848,"line_start":345,"line_end":345,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_data::RData::NS","value":"RData::NS(Name)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.11. NS RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3270},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":353141,"byte_end":353151,"line_start":354,"line_end":354,"column_start":5,"column_end":15},"name":"OPENPGPKEY","qualname":"::rr::record_data::RData::OPENPGPKEY","value":"RData::OPENPGPKEY(OPENPGPKEY)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" [RFC 7929](https://tools.ietf.org/html/rfc7929#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3273},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":355072,"byte_end":355075,"line_start":386,"line_end":386,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_data::RData::OPT","value":"RData::OPT(OPT)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n RFC 6891                   EDNS(0) Extensions                 April 2013\n 6.1.2.  Wire Format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3276},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":355881,"byte_end":355884,"line_start":406,"line_end":406,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_data::RData::PTR","value":"RData::PTR(Name)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.12. PTR RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3279},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":359365,"byte_end":359368,"line_start":474,"line_end":474,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_data::RData::SOA","value":"RData::SOA(SOA)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.13. SOA RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3282},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":359610,"byte_end":359613,"line_start":483,"line_end":483,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_data::RData::SRV","value":"RData::SRV(SRV)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n RFC 2782                       DNS SRV RR                  February 2000","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3285},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":362269,"byte_end":362274,"line_start":545,"line_end":545,"column_start":5,"column_end":10},"name":"SSHFP","qualname":"::rr::record_data::RData::SSHFP","value":"RData::SSHFP(SSHFP)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" [RFC 4255](https://tools.ietf.org/html/rfc4255#section-3.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3288},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":363117,"byte_end":363121,"line_start":560,"line_end":560,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_data::RData::TLSA","value":"RData::TLSA(TLSA)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3291},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":363612,"byte_end":363615,"line_start":576,"line_end":576,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_data::RData::TXT","value":"RData::TXT(TXT)","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" ```text\n 3.3.14. TXT RDATA format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3294},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":363961,"byte_end":363968,"line_start":586,"line_end":586,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_data::RData::Unknown","value":"RData::Unknown { code, rdata }","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" Unknown RecordData is for record types not supported by Trust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3297},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":364154,"byte_end":364158,"line_start":594,"line_end":594,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_data::RData::ZERO","value":"RData::ZERO","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3242},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":339191,"byte_end":339196,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"RData","qualname":"::rr::record_data::RData","value":"RData::{A, AAAA, ANAME, CAA, CNAME, MX, NAPTR, NULL, NS, OPENPGPKEY, OPT, PTR, SOA, SRV, SSHFP, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3252},{"krate":0,"index":3255},{"krate":0,"index":3258},{"krate":0,"index":3261},{"krate":0,"index":3264},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3294},{"krate":0,"index":3297}],"decl_id":null,"docs":" Record data enum variants","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":339182,"byte_end":364161,"line_start":54,"line_end":595,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":364554,"byte_end":364558,"line_start":610,"line_end":610,"column_start":12,"column_end":16},"name":"read","qualname":"<RData>::read","value":"fn (decoder: &mut BinDecoder, record_type: RecordType, rdata_length: Restrict<u16>) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":372112,"byte_end":372116,"line_start":785,"line_end":785,"column_start":12,"column_end":16},"name":"emit","qualname":"<RData>::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":374371,"byte_end":374385,"line_start":830,"line_end":830,"column_start":12,"column_end":26},"name":"to_record_type","qualname":"<RData>::to_record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Converts this to a Recordtype\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":375613,"byte_end":375623,"line_start":857,"line_end":857,"column_start":12,"column_end":22},"name":"to_ip_addr","qualname":"<RData>::to_ip_addr","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" If this is an A or AAAA record type, then an IpAddr will be returned\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1027},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_type","qualname":"::rr::record_type","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":3328},{"krate":0,"index":3385},{"krate":0,"index":3382},{"krate":0,"index":3380},{"krate":0,"index":3377},{"krate":0,"index":3376},{"krate":0,"index":3374},{"krate":0,"index":1037},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1052},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"decl_id":null,"docs":" record type definitions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3329},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386216,"byte_end":386217,"line_start":42,"line_end":42,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_type::RecordType::A","value":"RecordType::A","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] IPv4 Address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3331},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386263,"byte_end":386267,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_type::RecordType::AAAA","value":"RecordType::AAAA","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 3596[2] IPv6 address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3333},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386310,"byte_end":386315,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"ANAME","qualname":"::rr::record_type::RecordType::ANAME","value":"RecordType::ANAME","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" ANAME draft-ietf-dnsop-aname\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3335},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386424,"byte_end":386427,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::record_type::RecordType::ANY","value":"RecordType::ANY","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] All cached records, aka ANY\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3337},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386536,"byte_end":386540,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"AXFR","qualname":"::rr::record_type::RecordType::AXFR","value":"RecordType::AXFR","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Authoritative Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386601,"byte_end":386604,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_type::RecordType::CAA","value":"RecordType::CAA","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 6844 Certification Authority Authorization\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386706,"byte_end":386711,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_type::RecordType::CNAME","value":"RecordType::CNAME","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Canonical name record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386965,"byte_end":386969,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"IXFR","qualname":"::rr::record_type::RecordType::IXFR","value":"RecordType::IXFR","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1996 Incremental Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3345},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387123,"byte_end":387125,"line_start":67,"line_end":67,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_type::RecordType::MX","value":"RecordType::MX","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Mail exchange record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3347},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387173,"byte_end":387178,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"NAPTR","qualname":"::rr::record_type::RecordType::NAPTR","value":"RecordType::NAPTR","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 3403 Naming Authority Pointer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3349},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387223,"byte_end":387225,"line_start":71,"line_end":71,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_type::RecordType::NS","value":"RecordType::NS","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Name server record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3351},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387283,"byte_end":387287,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_type::RecordType::NULL","value":"RecordType::NULL","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Null server record, for testing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3353},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387329,"byte_end":387339,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"OPENPGPKEY","qualname":"::rr::record_type::RecordType::OPENPGPKEY","value":"RecordType::OPENPGPKEY","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 7929\tOpenPGP public key\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387369,"byte_end":387372,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_type::RecordType::OPT","value":"RecordType::OPT","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 6891\tOption\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3357},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387413,"byte_end":387416,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_type::RecordType::PTR","value":"RecordType::PTR","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Pointer record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387550,"byte_end":387553,"line_start":82,"line_end":82,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_type::RecordType::SOA","value":"RecordType::SOA","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] and RFC 2308[9]\tStart of [a zone of] authority record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387592,"byte_end":387595,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_type::RecordType::SRV","value":"RecordType::SRV","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 2782 Service locator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3363},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387645,"byte_end":387650,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"SSHFP","qualname":"::rr::record_type::RecordType::SSHFP","value":"RecordType::SSHFP","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 4255 SSH Public Key Fingerprint\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3365},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387814,"byte_end":387818,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_type::RecordType::TLSA","value":"RecordType::TLSA","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 6698 TLSA certificate association\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3367},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":387914,"byte_end":387917,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_type::RecordType::TXT","value":"RecordType::TXT","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" RFC 1035[1] Text record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3369},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388212,"byte_end":388219,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_type::RecordType::Unknown","value":"RecordType::Unknown(u16)","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" Unknown Record type, or unsupported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3372},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388291,"byte_end":388295,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_type::RecordType::ZERO","value":"RecordType::ZERO","parent":{"krate":0,"index":3328},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3328},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386159,"byte_end":386169,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"RecordType","qualname":"::rr::record_type::RecordType","value":"RecordType::{A, AAAA, ANAME, ANY, AXFR, CAA, CNAME, IXFR, MX, NAPTR, NS, NULL, OPENPGPKEY, OPT, PTR, SOA, SRV, SSHFP, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3331},{"krate":0,"index":3333},{"krate":0,"index":3335},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3372}],"decl_id":null,"docs":" The type of the resource record.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386130,"byte_end":386149,"line_start":39,"line_end":39,"column_start":1,"column_end":20}},{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386150,"byte_end":388298,"line_start":40,"line_end":107,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":386150,"byte_end":388298,"line_start":40,"line_end":107,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388382,"byte_end":388388,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"is_any","qualname":"<RecordType>::is_any","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an ANY\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388361,"byte_end":388370,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388509,"byte_end":388517,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"is_cname","qualname":"<RecordType>::is_cname","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is a CNAME\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388488,"byte_end":388497,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388639,"byte_end":388645,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"is_srv","qualname":"<RecordType>::is_srv","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an SRV\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388618,"byte_end":388627,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388781,"byte_end":388791,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"is_ip_addr","qualname":"<RecordType>::is_ip_addr","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an A or an AAAA record\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388760,"byte_end":388769,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1062},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::rr::resource","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":3387},{"krate":0,"index":3399},{"krate":0,"index":3397},{"krate":0,"index":3395},{"krate":0,"index":3393},{"krate":0,"index":1073},{"krate":0,"index":1075},{"krate":0,"index":1093},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1105}],"decl_id":null,"docs":" resource record implementation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3387},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399082,"byte_end":399088,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Record","qualname":"::rr::resource::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392}],"decl_id":null,"docs":" Resource records are storage value in DNS, into which all key/value pair data is stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399795,"byte_end":399798,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"fn () -> Record","parent":null,"children":[],"decl_id":null,"docs":" Creates a default record, use the setters to build a more useful object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":400139,"byte_end":400143,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"with","qualname":"<Record>::with","value":"fn (name: Name, rr_type: RecordType, ttl: u32) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":400699,"byte_end":400709,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_rdata","qualname":"<Record>::from_rdata","value":"fn (name: Name, ttl: u32, rdata: RData) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":401058,"byte_end":401066,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Record>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n NAME            a domain name to which this resource record pertains.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":401444,"byte_end":401455,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_rr_type","qualname":"<Record>::set_rr_type","value":"fn (&mut self, rr_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TYPE            two octets containing one of the RR type codes.  This\n                 field specifies the meaning of the data in the RDATA\n                 field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":401780,"byte_end":401795,"line_start":154,"line_end":154,"column_start":12,"column_end":27},"name":"set_record_type","qualname":"<Record>::set_record_type","value":"fn (&mut self, rr_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TYPE            two octets containing one of the RR type codes.  This\n                 field specifies the meaning of the data in the RDATA\n                 field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":402049,"byte_end":402062,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<Record>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n CLASS           two octets which specify the class of the data in the\n                 RDATA field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":402592,"byte_end":402599,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Record>::set_ttl","value":"fn (&mut self, ttl: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TTL             a 32 bit unsigned integer that specifies the time\n                 interval (in seconds) that the resource record may be\n                 cached before it should be discarded.  Zero values are\n                 interpreted to mean that the RR can only be used for the\n                 transaction in progress, and should not be cached.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403105,"byte_end":403114,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"set_rdata","qualname":"<Record>::set_rdata","value":"fn (&mut self, rdata: RData) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RDATA           a variable length string of octets that describes the\n                 resource.  The format of this information varies\n                 according to the TYPE and CLASS of the resource record.\n                 For example, the if the TYPE is A and the CLASS is IN,\n                 the RDATA field is a 4 octet ARPA Internet address.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403253,"byte_end":403257,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"name","qualname":"<Record>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403429,"byte_end":403436,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"rr_type","qualname":"<Record>::rr_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the RData in the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403556,"byte_end":403567,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"record_type","qualname":"<Record>::record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the RecordData in the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403700,"byte_end":403709,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<Record>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the DNSClass of the Record, generally IN fro internet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403841,"byte_end":403844,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Record>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live of the record, for caching purposes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":403957,"byte_end":403962,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"rdata","qualname":"<Record>::rdata","value":"fn (&self) -> &RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the Record Data, i.e. the record information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404075,"byte_end":404084,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"rdata_mut","qualname":"<Record>::rdata_mut","value":"fn (&mut self) -> &mut RData","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the Record Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404201,"byte_end":404213,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"unwrap_rdata","qualname":"<Record>::unwrap_rdata","value":"fn (self) -> RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the RData consuming the Record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3401},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":414578,"byte_end":414587,"line_start":18,"line_end":18,"column_start":12,"column_end":21},"name":"RecordSet","qualname":"::rr::rr_set::RecordSet","value":"RecordSet {  }","parent":null,"children":[{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408}],"decl_id":null,"docs":" Set of resource records associated to a name and type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":415397,"byte_end":415400,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<RecordSet>::new","value":"fn (name: &Name, record_type: RecordType, serial: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":416192,"byte_end":416200,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"with_ttl","qualname":"<RecordSet>::with_ttl","value":"fn (name: Name, record_type: RecordType, ttl: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":416563,"byte_end":416567,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"name","qualname":"<RecordSet>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":416702,"byte_end":416713,"line_start":90,"line_end":90,"column_start":12,"column_end":23},"name":"record_type","qualname":"<RecordSet>::record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":416923,"byte_end":416936,"line_start":97,"line_end":97,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<RecordSet>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNSClass to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":417160,"byte_end":417169,"line_start":105,"line_end":105,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<RecordSet>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DNSClass` of the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":417377,"byte_end":417384,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<RecordSet>::set_ttl","value":"fn (&mut self, ttl: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the TTL, in seconds, to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":417747,"byte_end":417750,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"ttl","qualname":"<RecordSet>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live for the record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":419328,"byte_end":419350,"line_start":169,"line_end":169,"column_start":12,"column_end":34},"name":"records_without_rrsigs","qualname":"<RecordSet>::records_without_rrsigs","value":"fn (&self) -> RrsetRecords","parent":null,"children":[],"decl_id":null,"docs":" Returns a Vec of all records in the set, without any RRSIGs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":419662,"byte_end":419666,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"iter","qualname":"<RecordSet>::iter","value":"fn (&self) -> Iter<Record>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the records in the set\n","sig":null,"attributes":[{"value":"deprecated(note = \"see `records_without_rrsigs`\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":419598,"byte_end":419650,"line_start":178,"line_end":178,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":419795,"byte_end":419803,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RecordSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no records in this set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":419938,"byte_end":419944,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"serial","qualname":"<RecordSet>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number at which the record was updated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":420070,"byte_end":420076,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"rrsigs","qualname":"<RecordSet>::rrsigs","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of all the Records signatures in the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":420388,"byte_end":420400,"line_start":205,"line_end":205,"column_start":12,"column_end":24},"name":"insert_rrsig","qualname":"<RecordSet>::insert_rrsig","value":"fn (&mut self, rrsig: Record) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a Signature for the Record set","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":420574,"byte_end":420586,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"clear_rrsigs","qualname":"<RecordSet>::clear_rrsigs","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Useful for clearing all signatures when the RecordSet is updated, or keys are rotated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":420939,"byte_end":420949,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"new_record","qualname":"<RecordSet>::new_record","value":"fn (&mut self, rdata: &RData) -> &Record","parent":null,"children":[],"decl_id":null,"docs":" creates a new Record as part of this RecordSet, adding the associated RData","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":421251,"byte_end":421260,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"add_rdata","qualname":"<RecordSet>::add_rdata","value":"fn (&mut self, rdata: RData) -> bool","parent":null,"children":[],"decl_id":null,"docs":" creates a new Record as part of this RecordSet, adding the associated RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":422952,"byte_end":422958,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"insert","qualname":"<RecordSet>::insert","value":"fn (&mut self, record: Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new Resource Record into the Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":428223,"byte_end":428229,"line_start":391,"line_end":391,"column_start":12,"column_end":18},"name":"remove","qualname":"<RecordSet>::remove","value":"fn (&mut self, record: &Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes the Resource Record if it exists.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1145},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":429924,"byte_end":429937,"line_start":447,"line_end":447,"column_start":11,"column_end":24},"name":"IntoRecordSet","qualname":"::rr::rr_set::IntoRecordSet","value":"IntoRecordSet: Sized","parent":null,"children":[{"krate":0,"index":1146}],"decl_id":null,"docs":" Types which implement this can be converted into a RecordSet\n","sig":null,"attributes":[{"value":"deprecated(note = \"use From/Into\")","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":429876,"byte_end":429913,"line_start":446,"line_end":446,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":430001,"byte_end":430016,"line_start":449,"line_end":449,"column_start":8,"column_end":23},"name":"into_record_set","qualname":"::rr::rr_set::IntoRecordSet::into_record_set","value":"fn (self) -> RecordSet","parent":{"krate":0,"index":1145},"children":[],"decl_id":null,"docs":" Performs the conversion to a RecordSet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3418},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432259,"byte_end":432264,"line_start":528,"line_end":528,"column_start":5,"column_end":10},"name":"Empty","qualname":"::rr::rr_set::RrsetRecords::Empty","value":"RrsetRecords::Empty","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" There are no records in the record set\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432321,"byte_end":432332,"line_start":530,"line_end":530,"column_start":5,"column_end":16},"name":"RecordsOnly","qualname":"::rr::rr_set::RrsetRecords::RecordsOnly","value":"RrsetRecords::RecordsOnly(Iter<'r, Record>)","parent":{"krate":0,"index":3416},"children":[],"decl_id":null,"docs":" The records associated with the record set\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3416},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432189,"byte_end":432201,"line_start":526,"line_end":526,"column_start":10,"column_end":22},"name":"RrsetRecords","qualname":"::rr::rr_set::RrsetRecords","value":"RrsetRecords::{Empty, RecordsOnly}","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3420}],"decl_id":null,"docs":" An iterator over the RecordSet data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432585,"byte_end":432593,"line_start":538,"line_end":538,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RrsetRecords>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This is a best effort emptyness check\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1171},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/mod.rs","parent":null,"children":[{"krate":0,"index":1172}],"decl_id":null,"docs":" Contains serialization libraries for `binary` and text, `txt`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1172},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary","qualname":"::serialize::binary","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1212},{"krate":0,"index":1321},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1426}],"decl_id":null,"docs":" Binary serialization types\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":450588,"byte_end":450598,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"BinDecoder","qualname":"::serialize::binary::decoder::BinDecoder","value":"BinDecoder {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" This is non-destructive to the inner buffer, b/c for pointer types we need to perform a reverse\n  seek to lookup names","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":450815,"byte_end":450818,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<BinDecoder>::new","value":"fn (buffer: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BinDecoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":450942,"byte_end":450945,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinDecoder>::pop","value":"fn (&mut self) -> ProtoResult<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Pop one byte from the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":451603,"byte_end":451606,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"len","qualname":"<BinDecoder>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":451742,"byte_end":451750,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinDecoder>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":451882,"byte_end":451886,"line_start":75,"line_end":75,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinDecoder>::peek","value":"fn (&self) -> Option<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Peed one byte forward, without moving the current index forward\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":452131,"byte_end":452136,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"index","qualname":"<BinDecoder>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current index in the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":452323,"byte_end":452328,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"clone","qualname":"<BinDecoder>::clone","value":"fn (&self, index_at: u16) -> BinDecoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" This is a pretty efficient clone, as the buffer is never cloned, and only the index is set\n  to the value passed in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":452888,"byte_end":452907,"line_start":109,"line_end":109,"column_start":12,"column_end":31},"name":"read_character_data","qualname":"<BinDecoder>::read_character_data","value":"fn (&mut self) -> ProtoResult<Restrict<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a String from the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":453094,"byte_end":453117,"line_start":114,"line_end":114,"column_start":12,"column_end":35},"name":"read_character_data_max","qualname":"<BinDecoder>::read_character_data_max","value":"fn (&mut self, max_len: Option<usize>) -> ProtoResult<Restrict<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads to a maximum length of data, returns an error if this is exceeded\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":454002,"byte_end":454010,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"read_vec","qualname":"<BinDecoder>::read_vec","value":"fn (&mut self, len: usize) -> ProtoResult<Restrict<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a Vec out of the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":454401,"byte_end":454411,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"read_slice","qualname":"<BinDecoder>::read_slice","value":"fn (&mut self, len: usize) -> ProtoResult<Restrict<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice out of the buffer, without allocating","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":454915,"byte_end":454925,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<BinDecoder>::slice_from","value":"fn (&self, index: usize) -> ProtoResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice from a previous index to the current\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":455207,"byte_end":455214,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"read_u8","qualname":"<BinDecoder>::read_u8","value":"fn (&mut self) -> ProtoResult<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a byte from the buffer, equivalent to `Self::pop()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":455576,"byte_end":455584,"line_start":195,"line_end":195,"column_start":12,"column_end":20},"name":"read_u16","qualname":"<BinDecoder>::read_u16","value":"fn (&mut self) -> ProtoResult<Restrict<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next 2 bytes into u16","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1208},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":456000,"byte_end":456008,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"read_i32","qualname":"<BinDecoder>::read_i32","value":"fn (&mut self) -> ProtoResult<Restrict<i32>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into i32.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":456424,"byte_end":456432,"line_start":219,"line_end":219,"column_start":12,"column_end":20},"name":"read_u32","qualname":"<BinDecoder>::read_u32","value":"fn (&mut self) -> ProtoResult<Restrict<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into u32.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1240},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":460776,"byte_end":460786,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"BinEncoder","qualname":"::serialize::binary::encoder::BinEncoder","value":"BinEncoder {  }","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246}],"decl_id":null,"docs":" Encode DNS messages and resource record types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":461084,"byte_end":461087,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<BinEncoder>::new","value":"fn (buf: &'a mut Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder with the Vec to fill\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":461384,"byte_end":461393,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"with_mode","qualname":"<BinEncoder>::with_mode","value":"fn (buf: &'a mut Vec<u8>, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the mode for encoding","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":461924,"byte_end":461935,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"with_offset","qualname":"<BinEncoder>::with_offset","value":"fn (buf: &'a mut Vec<u8>, offset: u32, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begins the encoder at the given offset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":462716,"byte_end":462728,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"<BinEncoder>::set_max_size","value":"fn (&mut self, max: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum size of the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":462860,"byte_end":462870,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<BinEncoder>::into_bytes","value":"fn (self) -> &'a Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":462986,"byte_end":462989,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"len","qualname":"<BinEncoder>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463098,"byte_end":463106,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinEncoder>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463233,"byte_end":463239,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"offset","qualname":"<BinEncoder>::offset","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current offset into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463346,"byte_end":463356,"line_start":171,"line_end":171,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<BinEncoder>::set_offset","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" sets the current offset to the new offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463475,"byte_end":463479,"line_start":176,"line_end":176,"column_start":12,"column_end":16},"name":"mode","qualname":"<BinEncoder>::mode","value":"fn (&self) -> EncodeMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the current Encoding mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463624,"byte_end":463643,"line_start":181,"line_end":181,"column_start":12,"column_end":31},"name":"set_canonical_names","qualname":"<BinEncoder>::set_canonical_names","value":"fn (&mut self, canonical_names: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If set to true, then names will be written into the buffer in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463812,"byte_end":463830,"line_start":186,"line_end":186,"column_start":12,"column_end":30},"name":"is_canonical_names","qualname":"<BinEncoder>::is_canonical_names","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if then encoder is writing in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":463984,"byte_end":464004,"line_start":191,"line_end":191,"column_start":12,"column_end":32},"name":"with_canonical_names","qualname":"<BinEncoder>::with_canonical_names","value":"fn <F> (&mut self, f: F) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit all names in canonical form, useful for https://tools.ietf.org/html/rfc3597\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":464409,"byte_end":464416,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BinEncoder>::reserve","value":"fn (&mut self, _additional: usize) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Reserve specified additional length in the internal buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":464538,"byte_end":464542,"line_start":211,"line_end":211,"column_start":12,"column_end":16},"name":"trim","qualname":"<BinEncoder>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" trims to the current offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":465288,"byte_end":465296,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"slice_of","qualname":"<BinEncoder>::slice_of","value":"fn (&self, start: usize, end: usize) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" borrow a slice from the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":465713,"byte_end":465732,"line_start":241,"line_end":241,"column_start":12,"column_end":31},"name":"store_label_pointer","qualname":"<BinEncoder>::store_label_pointer","value":"fn (&mut self, start: usize, end: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a label pointer to an already written label","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":466132,"byte_end":466149,"line_start":251,"line_end":251,"column_start":12,"column_end":29},"name":"get_label_pointer","qualname":"<BinEncoder>::get_label_pointer","value":"fn (&self, start: usize, end: usize) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Looks up the index of an already written label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":466642,"byte_end":466646,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"emit","qualname":"<BinEncoder>::emit","value":"fn (&mut self, b: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":467491,"byte_end":467510,"line_start":293,"line_end":293,"column_start":12,"column_end":31},"name":"emit_character_data","qualname":"<BinEncoder>::emit_character_data","value":"fn <S> (&mut self, char_data: S) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" matches description from above.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":468004,"byte_end":468011,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"emit_u8","qualname":"<BinEncoder>::emit_u8","value":"fn (&mut self, data: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":468153,"byte_end":468161,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"emit_u16","qualname":"<BinEncoder>::emit_u16","value":"fn (&mut self, data: u16) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a u16 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":468422,"byte_end":468430,"line_start":323,"line_end":323,"column_start":12,"column_end":20},"name":"emit_i32","qualname":"<BinEncoder>::emit_i32","value":"fn (&mut self, data: i32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an i32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":468691,"byte_end":468699,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"emit_u32","qualname":"<BinEncoder>::emit_u32","value":"fn (&mut self, data: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an u32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":469764,"byte_end":469772,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"emit_vec","qualname":"<BinEncoder>::emit_vec","value":"fn (&mut self, data: &[u8]) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the byte slice to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":469928,"byte_end":469936,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"emit_all","qualname":"<BinEncoder>::emit_all","value":"fn <'e, I, E> (&mut self, mut iter: I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":470213,"byte_end":470226,"line_start":380,"line_end":380,"column_start":12,"column_end":25},"name":"emit_all_refs","qualname":"<BinEncoder>::emit_all_refs","value":"fn <'r, 'e, I, E> (&mut self, iter: I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":470545,"byte_end":470554,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"emit_iter","qualname":"<BinEncoder>::emit_iter","value":"fn <'e, I, E> (&mut self, iter: &mut I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" emits all items in the iterator, return the number emited\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":471226,"byte_end":471231,"line_start":412,"line_end":412,"column_start":12,"column_end":17},"name":"place","qualname":"<BinEncoder>::place","value":"fn <T> (&mut self) -> ProtoResult<Place<T>>","parent":null,"children":[],"decl_id":null,"docs":" capture a location to write back to\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":471724,"byte_end":471739,"line_start":430,"line_end":430,"column_start":12,"column_end":27},"name":"len_since_place","qualname":"<BinEncoder>::len_since_place","value":"fn <T> (&self, place: &Place<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" calculates the length of data written since the place was creating\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":471923,"byte_end":471930,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"emit_at","qualname":"<BinEncoder>::emit_at","value":"fn <T> (&mut self, place: Place<T>, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" write back to a previously captured location\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1307},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473049,"byte_end":473060,"line_start":467,"line_end":467,"column_start":11,"column_end":22},"name":"EncodedSize","qualname":"::serialize::binary::encoder::EncodedSize","value":"EncodedSize: BinEncodable","parent":null,"children":[{"krate":0,"index":1308}],"decl_id":null,"docs":" A trait to return the size of a type as it will be encoded in DNS","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473124,"byte_end":473131,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"size_of","qualname":"::serialize::binary::encoder::EncodedSize::size_of","value":"fn () -> usize","parent":{"krate":0,"index":1307},"children":[],"decl_id":null,"docs":" Return the size in bytes of the\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473393,"byte_end":473398,"line_start":486,"line_end":486,"column_start":12,"column_end":17},"name":"Place","qualname":"::serialize::binary::encoder::Place","value":"Place {  }","parent":null,"children":[{"krate":0,"index":3428},{"krate":0,"index":3429}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"data must be written back to the place\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473327,"byte_end":473381,"line_start":485,"line_end":485,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473516,"byte_end":473523,"line_start":492,"line_end":492,"column_start":12,"column_end":19},"name":"replace","qualname":"<Place<T>>::replace","value":"fn (self, encoder: &mut BinEncoder, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473640,"byte_end":473647,"line_start":496,"line_end":496,"column_start":12,"column_end":19},"name":"size_of","qualname":"<Place<T>>::size_of","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3434},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":474245,"byte_end":474252,"line_start":517,"line_end":517,"column_start":5,"column_end":12},"name":"Signing","qualname":"::serialize::binary::encoder::EncodeMode::Signing","value":"EncodeMode::Signing","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" In signing mode records are written in canonical form\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":474299,"byte_end":474305,"line_start":519,"line_end":519,"column_start":5,"column_end":11},"name":"Normal","qualname":"::serialize::binary::encoder::EncodeMode::Normal","value":"EncodeMode::Normal","parent":{"krate":0,"index":3433},"children":[],"decl_id":null,"docs":" Write records in standard format\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3433},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":474166,"byte_end":474176,"line_start":515,"line_end":515,"column_start":10,"column_end":20},"name":"EncodeMode","qualname":"::serialize::binary::encoder::EncodeMode","value":"EncodeMode::{Signing, Normal}","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3436}],"decl_id":null,"docs":" In the Verify mode there maybe some things which are encoded differently, e.g. SIG0 records\n  should not be included in the additional count and not in the encoded data when in Verify\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":474157,"byte_end":474308,"line_start":515,"line_end":520,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":474157,"byte_end":474308,"line_start":515,"line_end":520,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":3445},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478055,"byte_end":478063,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Restrict","qualname":"::serialize::binary::restrict::Restrict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Untrusted types will be wrapped in this type.","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478044,"byte_end":478070,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478156,"byte_end":478159,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Restrict<T>>::new","value":"fn (restricted: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new restricted type\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478135,"byte_end":478144,"line_start":9,"line_end":9,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478687,"byte_end":478693,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"verify","qualname":"<Restrict<T>>::verify","value":"fn <'a, F> (&'a self, f: F) -> Verified<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" It is the responsibility of th function to verfy the contained type is valid.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478666,"byte_end":478675,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":479399,"byte_end":479412,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"verify_unwrap","qualname":"<Restrict<T>>::verify_unwrap","value":"fn <F> (self, f: F) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" It is the responsibility of th function to verfy the contained type is valid.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":479378,"byte_end":479387,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":479708,"byte_end":479718,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"unverified","qualname":"<Restrict<T>>::unverified","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value without verifying the data, akin to Result::unwrap and Option::unwrap, but will not panic\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":479687,"byte_end":479696,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480120,"byte_end":480123,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"map","qualname":"<Restrict<T>>::map","value":"fn <R, F> (self, f: F) -> Restrict<R>","parent":null,"children":[],"decl_id":null,"docs":" Map the internal type of the restriction","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480099,"byte_end":480108,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1334},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480261,"byte_end":480269,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"Verified","qualname":"::serialize::binary::restrict::Verified","value":"","parent":null,"children":[],"decl_id":null,"docs":" Verified data that can be operated on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480425,"byte_end":480429,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"then","qualname":"<Verified>::then","value":"fn <R, F> (&self, f: F) -> Result<R, &T>","parent":null,"children":[],"decl_id":null,"docs":" Perform some operation on the data, and return a result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480404,"byte_end":480413,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480666,"byte_end":480674,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Verified>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this valid\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480645,"byte_end":480654,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1355},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481009,"byte_end":481023,"line_start":108,"line_end":108,"column_start":11,"column_end":25},"name":"RestrictedMath","qualname":"::serialize::binary::restrict::RestrictedMath","value":"RestrictedMath","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360}],"decl_id":null,"docs":" Common checked math operations for the Restrict type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1356},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481076,"byte_end":481079,"line_start":110,"line_end":110,"column_start":10,"column_end":13},"name":"Arg","qualname":"::serialize::binary::restrict::RestrictedMath::Arg","value":"type Arg: 'static + Sized + Copy;","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Argument for the math operations\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1357},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481162,"byte_end":481167,"line_start":112,"line_end":112,"column_start":10,"column_end":15},"name":"Value","qualname":"::serialize::binary::restrict::RestrictedMath::Value","value":"type Value: 'static + Sized + Copy;","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Return value, generally the same as Arg\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481252,"byte_end":481263,"line_start":115,"line_end":115,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::serialize::binary::restrict::RestrictedMath::checked_add","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Checked addition, see `usize::checked_add`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481393,"byte_end":481404,"line_start":117,"line_end":117,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::serialize::binary::restrict::RestrictedMath::checked_sub","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Checked subtraction, see `usize::checked_sub`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481537,"byte_end":481548,"line_start":119,"line_end":119,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::serialize::binary::restrict::RestrictedMath::checked_mul","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1355},"children":[],"decl_id":null,"docs":" Checked multiplication, see `usize::checked_mul`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1404},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447548,"byte_end":447560,"line_start":34,"line_end":34,"column_start":11,"column_end":23},"name":"BinEncodable","qualname":"::serialize::binary::BinEncodable","value":"BinEncodable","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1406}],"decl_id":null,"docs":" A type which can be encoded into a DNS binary format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447607,"byte_end":447611,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"emit","qualname":"::serialize::binary::BinEncodable::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Write the type to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":447715,"byte_end":447723,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::serialize::binary::BinEncodable::to_bytes","value":"fn (&self) -> ProtoResult<Vec<u8>>","parent":{"krate":0,"index":1404},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1407},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":448030,"byte_end":448042,"line_start":51,"line_end":51,"column_start":11,"column_end":23},"name":"BinDecodable","qualname":"::serialize::binary::BinDecodable","value":"BinDecodable<'r>: Sized","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" A trait for types which are serializable to and from DNS binary formats\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":448101,"byte_end":448105,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"read","qualname":"::serialize::binary::BinDecodable::read","value":"fn (decoder: &mut BinDecoder<'r>) -> ProtoResult<Self>","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Read the type from the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":448208,"byte_end":448218,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::serialize::binary::BinDecodable::from_bytes","value":"fn (bytes: &'r [u8]) -> ProtoResult<Self>","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1428},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::tcp","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":1429},{"krate":0,"index":1480},{"krate":0,"index":1555},{"krate":0,"index":1558}],"decl_id":null,"docs":" TCP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":486769,"byte_end":486784,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"TcpClientStream","qualname":"::tcp::tcp_client_stream::TcpClientStream","value":"TcpClientStream {  }","parent":null,"children":[{"krate":0,"index":1454}],"decl_id":null,"docs":" Tcp client stream","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":486709,"byte_end":486757,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":487145,"byte_end":487148,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpClientStream<TokioTcpStream>>::new","value":"fn (name_server: SocketAddr) -> (TcpClientConnect, Box<DnsStreamHandle + Send>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[{"value":"allow(clippy::new_ret_no_self)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":487100,"byte_end":487133,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":487537,"byte_end":487549,"line_start":48,"line_end":48,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpClientStream<TokioTcpStream>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> (TcpClientConnect, Box<DnsStreamHandle + Send>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488165,"byte_end":488176,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpClientStream<S>>::from_stream","value":"fn (tcp_stream: TcpStream<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the TcpStream in TcpClientStream\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":489536,"byte_end":489552,"line_start":108,"line_end":108,"column_start":12,"column_end":28},"name":"TcpClientConnect","qualname":"::tcp::tcp_client_stream::TcpClientConnect","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves to an TcpClientStream\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496415,"byte_end":496424,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::tcp::tcp_stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530}],"decl_id":null,"docs":" A Stream used for sending data to and from a remote DNS endpoint (client or server).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496355,"byte_end":496403,"line_start":66,"line_end":66,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496703,"byte_end":496712,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream<S>>::peer_addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the peer connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":497065,"byte_end":497068,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpStream<TokioTcpStream>>::new","value":"fn <E> (name_server: SocketAddr) -> (Box<Future<Item = TcpStream<TokioTcpStream>, Error = io::Error> + Send>,\n BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":497600,"byte_end":497612,"line_start":108,"line_end":108,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpStream<TokioTcpStream>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> (Box<Future<Item = TcpStream<TokioTcpStream>, Error = io::Error> + Send>,\n BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":499470,"byte_end":499481,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpStream<S>>::from_stream","value":"fn (stream: S, peer_addr: SocketAddr) -> (Self, BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a TcpStream with an existing tokio_tcp::TcpStream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":499902,"byte_end":499927,"line_start":167,"line_end":167,"column_start":12,"column_end":37},"name":"from_stream_with_receiver","qualname":"<TcpStream<S>>::from_stream_with_receiver","value":"fn (stream: S, peer_addr: SocketAddr, receiver: UnboundedReceiver<SerialMessage>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrapps a stream where a sender and receiver have already been established\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1559},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1672},{"krate":0,"index":1721},{"krate":0,"index":1725}],"decl_id":null,"docs":" UDP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1590},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":516524,"byte_end":516539,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"UdpClientStream","qualname":"::udp::udp_client_stream::UdpClientStream","value":"UdpClientStream {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595}],"decl_id":null,"docs":" A UDP client stream of DNS binary packets","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":516464,"byte_end":516512,"line_start":28,"line_end":28,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":517209,"byte_end":517212,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpClientStream<NoopMessageFinalizer>>::new","value":"fn (name_server: SocketAddr) -> UdpClientConnect<NoopMessageFinalizer>","parent":null,"children":[],"decl_id":null,"docs":" it is expected that the resolver wrapper will be responsible for creating and managing\n  new UdpClients such that each new client would have a random port (reduce chance of cache\n  poisoning)","sig":null,"attributes":[{"value":"allow(clippy::new_ret_no_self)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":517164,"byte_end":517197,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1598},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":517592,"byte_end":517604,"line_start":59,"line_end":59,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<UdpClientStream<NoopMessageFinalizer>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> UdpClientConnect<NoopMessageFinalizer>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":518079,"byte_end":518102,"line_start":74,"line_end":74,"column_start":12,"column_end":35},"name":"with_timeout_and_signer","qualname":"<UdpClientStream<MF>>::with_timeout_and_signer","value":"fn (name_server: SocketAddr, timeout: Duration, signer: Option<Arc<MF>>) -> UdpClientConnect<MF>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":521727,"byte_end":521738,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"UdpResponse","qualname":"::udp::udp_client_stream::UdpResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves to\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":522494,"byte_end":522510,"line_start":219,"line_end":219,"column_start":12,"column_end":28},"name":"UdpClientConnect","qualname":"::udp::udp_client_stream::UdpClientConnect","value":"UdpClientConnect {  }","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635}],"decl_id":null,"docs":" A future that resolves to an UdpClientStream\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1699},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":534844,"byte_end":534853,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"UdpStream","qualname":"::udp::udp_stream::UdpStream","value":"UdpStream {  }","parent":null,"children":[{"krate":0,"index":1700},{"krate":0,"index":1701}],"decl_id":null,"docs":" A UDP stream of DNS binary packets\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":534784,"byte_end":534832,"line_start":22,"line_end":22,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":535701,"byte_end":535704,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpStream>::new","value":"fn (name_server: SocketAddr) -> (Box<Future<Item = UdpStream, Error = io::Error> + Send>, BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" This method is intended for client connections, see `with_bound` for a method better for\n  straight listening. It is expected that the resolver wrapper will be responsible for\n  creating and managing new UdpStreams such that each new client would have a random port\n  (reduce chance of cache poisoning). This will return a randomly assigned local port.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":537183,"byte_end":537193,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"with_bound","qualname":"<UdpStream>::with_bound","value":"fn (socket: tokio_udp::UdpSocket) -> (Self, BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Initialize the Stream with an already bound socket. Generally this should be only used for\n  server listening sockets. See `new` for a client oriented socket. Specifically, this there\n  is already a bound socket in this context, whereas `new` makes sure to randomize ports\n  for additional cache poison prevention.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1726},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xfer","qualname":"::xfer","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1813},{"krate":0,"index":1855},{"krate":0,"index":1988},{"krate":0,"index":2004},{"krate":0,"index":2031},{"krate":0,"index":2059},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2080},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2093},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":2095},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":2110},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2129},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2138},{"krate":0,"index":2142},{"krate":0,"index":2146},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2164}],"decl_id":null,"docs":" DNS high level transit implimentations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1759},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":556812,"byte_end":556823,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"DnsExchange","qualname":"::xfer::dns_exchange::DnsExchange","value":"DnsExchange {  }","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"decl_id":null,"docs":" This is a generic Exchange implemented over multiplexed DNS connection providers.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":556752,"byte_end":556800,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":557467,"byte_end":557478,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<DnsExchange<S, R>>::from_stream","value":"fn (stream: S) -> (Self, DnsRequestStreamHandle<R>)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a TcpStream with an existing tokio_tcp::TcpStream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":557887,"byte_end":557912,"line_start":52,"line_end":52,"column_start":12,"column_end":37},"name":"from_stream_with_receiver","qualname":"<DnsExchange<S, R>>::from_stream_with_receiver","value":"fn (stream: S, receiver: UnboundedReceiver<OneshotDnsRequest<R>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrapps a stream where a sender and receiver have already been established\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":558276,"byte_end":558283,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"connect","qualname":"<DnsExchange<S, R>>::connect","value":"fn <F> (connect_future: F) -> (DnsExchangeConnect<F, S, R>, DnsRequestStreamHandle<R>)","parent":null,"children":[],"decl_id":null,"docs":" Returns a future, which itself wraps a future which is awaiting connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1778},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":561861,"byte_end":561879,"line_start":152,"line_end":152,"column_start":12,"column_end":30},"name":"DnsExchangeConnect","qualname":"::xfer::dns_exchange::DnsExchangeConnect","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for a future DnsExchange connection\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1813},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_handle","qualname":"::xfer::dns_handle","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1826},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1849}],"decl_id":null,"docs":" `DnsHandle` types perform conversions of the raw DNS messages before sending the messages on the specified streams.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1833},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567038,"byte_end":567050,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"StreamHandle","qualname":"::xfer::dns_handle::StreamHandle","value":"StreamHandle {  }","parent":null,"children":[{"krate":0,"index":1834}],"decl_id":null,"docs":" The StreamHandle is the general interface for communicating with the DnsMultiplexer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567187,"byte_end":567190,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamHandle>::new","value":"fn (sender: UnboundedSender<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new StreamHandle for wrapping the sender\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1837},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567340,"byte_end":567355,"line_start":35,"line_end":35,"column_start":11,"column_end":26},"name":"DnsStreamHandle","qualname":"::xfer::dns_handle::DnsStreamHandle","value":"DnsStreamHandle: 'static + Send","parent":null,"children":[{"krate":0,"index":1838}],"decl_id":null,"docs":" Implementations of Sinks for sending DNS messages\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567447,"byte_end":567451,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"send","qualname":"::xfer::dns_handle::DnsStreamHandle::send","value":"fn (&mut self, buffer: SerialMessage) -> Result<(), ProtoError>","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" Sends a message to the Handle for delivery to the server.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3454},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568007,"byte_end":568021,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"BasicDnsHandle","qualname":"::xfer::dns_handle::BasicDnsHandle","value":"BasicDnsHandle {  }","parent":null,"children":[{"krate":0,"index":3455}],"decl_id":null,"docs":" Root DnsHandle implementaton returned by DnsMultiplexer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568228,"byte_end":568231,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicDnsHandle>::new","value":"fn (message_sender:\n    UnboundedSender<(DnsRequest,\n                     oneshot::Sender<Result<DnsResponse, ProtoError>>)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new BasicDnsHandle wrapping the `message_sender`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1849},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":569686,"byte_end":569695,"line_start":103,"line_end":103,"column_start":11,"column_end":20},"name":"DnsHandle","qualname":"::xfer::dns_handle::DnsHandle","value":"DnsHandle: 'static + Clone + Send","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1854}],"decl_id":null,"docs":" A trait for implementing high level functions of DNS.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1850},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":569833,"byte_end":569841,"line_start":105,"line_end":105,"column_start":10,"column_end":18},"name":"Response","qualname":"::xfer::dns_handle::DnsHandle::Response","value":"type Response: Future<Item = DnsResponse, Error = ProtoError> + 'static + Send;","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" The associated response from the response future, this should resolve to the Response message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":570134,"byte_end":570153,"line_start":110,"line_end":110,"column_start":8,"column_end":27},"name":"is_verifying_dnssec","qualname":"::xfer::dns_handle::DnsHandle::is_verifying_dnssec","value":"fn (&self) -> bool","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" Ony returns true if and only if this DNS handle is validating DNSSec.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":570516,"byte_end":570520,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"send","qualname":"::xfer::dns_handle::DnsHandle::send","value":"fn <R> (&mut self, request: R) -> Self::Response","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" Send a message via the channel in the client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":570780,"byte_end":570786,"line_start":130,"line_end":130,"column_start":8,"column_end":14},"name":"lookup","qualname":"::xfer::dns_handle::DnsHandle::lookup","value":"fn (&mut self, query: Query, options: DnsRequestOptions) -> Self::Response","parent":{"krate":0,"index":1849},"children":[],"decl_id":null,"docs":" A *classic* DNS query","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1855},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_multiplexer","qualname":"::xfer::dns_multiplexer","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1875},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1886},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1903},{"krate":0,"index":1912},{"krate":0,"index":1922},{"krate":0,"index":1932},{"krate":0,"index":1940},{"krate":0,"index":1947},{"krate":0,"index":1951},{"krate":0,"index":1960},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1984}],"decl_id":null,"docs":" `DnsMultiplexer` and associated types implement the state machines for sending DNS messages while using the underlying streams.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":575648,"byte_end":575662,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"DnsMultiplexer","qualname":"::xfer::dns_multiplexer::DnsMultiplexer","value":"DnsMultiplexer {  }","parent":null,"children":[{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921}],"decl_id":null,"docs":" A DNS Client implemented over futures-rs.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":575588,"byte_end":575636,"line_start":113,"line_end":113,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1925},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":576618,"byte_end":576621,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsMultiplexer<S, MF, Box<DnsStreamHandle>>>::new","value":"fn <F> (stream: F, stream_handle: Box<DnsStreamHandle>, signer: Option<Arc<MF>>) -> DnsMultiplexerConnect<F, S, MF>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsMultiplexer Stream. This uses a default timeout of 5 seconds for all requests.","sig":null,"attributes":[{"value":"allow(clippy::new_ret_no_self)","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":576573,"byte_end":576606,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":577550,"byte_end":577562,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<DnsMultiplexer<S, MF, Box<DnsStreamHandle>>>::with_timeout","value":"fn <F> (stream: F, stream_handle: Box<DnsStreamHandle>, timeout_duration: Duration, signer: Option<Arc<MF>>) -> DnsMultiplexerConnect<F, S, MF>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsMultiplexer Stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1932},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":580957,"byte_end":580978,"line_start":259,"line_end":259,"column_start":12,"column_end":33},"name":"DnsMultiplexerConnect","qualname":"::xfer::dns_multiplexer::DnsMultiplexerConnect","value":"DnsMultiplexerConnect {  }","parent":null,"children":[{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"decl_id":null,"docs":" A wrapper for a future DnsExchange connection\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":580897,"byte_end":580945,"line_start":258,"line_end":258,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1966},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589038,"byte_end":589066,"line_start":476,"line_end":476,"column_start":12,"column_end":40},"name":"DnsMultiplexerSerialResponse","qualname":"::xfer::dns_multiplexer::DnsMultiplexerSerialResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves into a DnsResponse\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":588978,"byte_end":589026,"line_start":475,"line_end":475,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589208,"byte_end":589218,"line_start":480,"line_end":480,"column_start":12,"column_end":22},"name":"completion","qualname":"<DnsMultiplexerSerialResponse>::completion","value":"fn (complete: oneshot::Receiver<ProtoResult<DnsResponse>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new future with the oneshot completion\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1988},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_request","qualname":"::xfer::dns_request","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1992},{"krate":0,"index":3459},{"krate":0,"index":3463},{"krate":0,"index":3461},{"krate":0,"index":3465},{"krate":0,"index":3468},{"krate":0,"index":1993},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2002}],"decl_id":null,"docs":" `DnsRequest` wraps a `Message` and associates a set of `DnsRequestOptions` for specifying different transfer options.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":591401,"byte_end":591418,"line_start":16,"line_end":16,"column_start":12,"column_end":29},"name":"DnsRequestOptions","qualname":"::xfer::dns_request::DnsRequestOptions","value":"DnsRequestOptions { expects_multiple_responses }","parent":null,"children":[{"krate":0,"index":3460}],"decl_id":null,"docs":" A set of options for expressing options to how requests should be treated\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3460},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":591649,"byte_end":591675,"line_start":20,"line_end":20,"column_start":9,"column_end":35},"name":"expects_multiple_responses","qualname":"::xfer::dns_request::DnsRequestOptions::expects_multiple_responses","value":"bool","parent":{"krate":0,"index":3459},"children":[],"decl_id":null,"docs":" When true, the underlying DNS protocols will not return on the first response recieved.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3465},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592081,"byte_end":592091,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"DnsRequest","qualname":"::xfer::dns_request::DnsRequest","value":"DnsRequest {  }","parent":null,"children":[{"krate":0,"index":3466},{"krate":0,"index":3467}],"decl_id":null,"docs":" A DNS reqeust object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592220,"byte_end":592223,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsRequest>::new","value":"fn (message: Message, options: DnsRequestOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new DnsRequest object\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592406,"byte_end":592413,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"options","qualname":"<DnsRequest>::options","value":"fn (&self) -> &DnsRequestOptions","parent":null,"children":[],"decl_id":null,"docs":" Get the set of request options associated with this request\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592517,"byte_end":592523,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<DnsRequest>::unwrap","value":"fn (self) -> (Message, DnsRequestOptions)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the raw message\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2004},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_response","qualname":"::xfer::dns_response","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":3470},{"krate":0,"index":3476},{"krate":0,"index":3474},{"krate":0,"index":2013},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2027}],"decl_id":null,"docs":" `DnsResponse` wraps a `Message` and any associated connection details\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3470},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":593888,"byte_end":593899,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"DnsResponse","qualname":"::xfer::dns_response::DnsResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DNS response object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594098,"byte_end":594106,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"messages","qualname":"<DnsResponse>::messages","value":"fn (&self) -> Iter<Message>","parent":null,"children":[],"decl_id":null,"docs":" Get all the messages in the Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594229,"byte_end":594241,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"messages_mut","qualname":"<DnsResponse>::messages_mut","value":"fn (&mut self) -> IterMut<Message>","parent":null,"children":[],"decl_id":null,"docs":" Get all the messages in the Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594389,"byte_end":594392,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<DnsResponse>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" returns the number of messages in the response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594505,"byte_end":594513,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DnsResponse>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns the number of messages in the response\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2031},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"retry_dns_handle","qualname":"::xfer::retry_dns_handle","value":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":3478},{"krate":0,"index":3482},{"krate":0,"index":2040},{"krate":0,"index":2043},{"krate":0,"index":2048},{"krate":0,"index":2054}],"decl_id":null,"docs":" `RetryDnsHandle` allows for DnsQueries to be reattempted on failure\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3478},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596132,"byte_end":596146,"line_start":21,"line_end":21,"column_start":12,"column_end":26},"name":"RetryDnsHandle","qualname":"::xfer::retry_dns_handle::RetryDnsHandle","value":"RetryDnsHandle {  }","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":3481}],"decl_id":null,"docs":" Can be used to reattempt a queries if they fail","sig":null,"attributes":[{"value":"must_use = \"queries can only be sent through a ClientHandle\"","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596057,"byte_end":596120,"line_start":20,"line_end":20,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596471,"byte_end":596474,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<RetryDnsHandle<H>>::new","value":"fn (handle: H, attempts: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Client handler for reattempting requests on failures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2063},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":600546,"byte_end":600559,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"SerialMessage","qualname":"::xfer::serial_message::SerialMessage","value":"SerialMessage {  }","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2065}],"decl_id":null,"docs":" A DNS message in serialized form, with either the target address or source address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":600808,"byte_end":600811,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<SerialMessage>::new","value":"fn (message: Vec<u8>, addr: SocketAddr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new SerialMessage and the source or destination address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":600953,"byte_end":600958,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"bytes","qualname":"<SerialMessage>::bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":601083,"byte_end":601087,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"addr","qualname":"<SerialMessage>::addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the source or destination address (context dependent)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":601188,"byte_end":601194,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SerialMessage>::unwrap","value":"fn (self) -> (Vec<u8>, SocketAddr)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the the Bytes and address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":601331,"byte_end":601341,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"to_message","qualname":"<SerialMessage>::to_message","value":"fn (&self) -> ProtoResult<Message>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the inner data into a Message\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2093},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547115,"byte_end":547130,"line_start":46,"line_end":46,"column_start":11,"column_end":26},"name":"DnsClientStream","qualname":"::xfer::DnsClientStream","value":"DnsClientStream: Stream<Item = SerialMessage, Error = ProtoError> + Display + Send","parent":null,"children":[{"krate":0,"index":2094}],"decl_id":null,"docs":" A non-multiplexed stream of Serialized DNS messages\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547250,"byte_end":547266,"line_start":50,"line_end":50,"column_start":8,"column_end":24},"name":"name_server_addr","qualname":"::xfer::DnsClientStream::name_server_addr","value":"fn (&self) -> SocketAddr","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" The remote name server address\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3485},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547402,"byte_end":547417,"line_start":56,"line_end":56,"column_start":12,"column_end":27},"name":"BufStreamHandle","qualname":"::xfer::BufStreamHandle","value":"BufStreamHandle {  }","parent":null,"children":[{"krate":0,"index":3486}],"decl_id":null,"docs":" A sender to which serialized DNS Messages can be sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547573,"byte_end":547576,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStreamHandle>::new","value":"fn (sender: UnboundedSender<SerialMessage>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new BufStreamHandle with the associated ProtoError\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547733,"byte_end":547747,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<BufStreamHandle>::unbounded_send","value":"fn (&self, msg: SerialMessage) -> Result<(), SendError<SerialMessage>>","parent":null,"children":[],"decl_id":null,"docs":" see [`futures::sync::mpsc::UnboundedSender`]\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2098},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547943,"byte_end":547962,"line_start":74,"line_end":74,"column_start":10,"column_end":29},"name":"MessageStreamHandle","qualname":"::xfer::MessageStreamHandle","value":"UnboundedSender<Message>","parent":null,"children":[],"decl_id":null,"docs":" A sender to which a Message can be sent\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2099},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548050,"byte_end":548068,"line_start":77,"line_end":77,"column_start":12,"column_end":30},"name":"BufDnsStreamHandle","qualname":"::xfer::BufDnsStreamHandle","value":"BufDnsStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"decl_id":null,"docs":" A buffering stream bound to a `SocketAddr`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548419,"byte_end":548422,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<BufDnsStreamHandle>::new","value":"fn (name_server: SocketAddr, sender: BufStreamHandle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Buffered Stream Handle, used for sending data to the DNS peer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2107},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549110,"byte_end":549132,"line_start":110,"line_end":110,"column_start":12,"column_end":34},"name":"DnsRequestStreamHandle","qualname":"::xfer::DnsRequestStreamHandle","value":"DnsRequestStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2109}],"decl_id":null,"docs":" A sender to which serialized DNS Messages can be sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549447,"byte_end":549450,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsRequestStreamHandle<F>>::new","value":"fn (sender: UnboundedSender<OneshotDnsRequest<F>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new BufStreamHandle with the associated ProtoError\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549621,"byte_end":549635,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<DnsRequestStreamHandle<F>>::unbounded_send","value":"fn (&self, msg: OneshotDnsRequest<F>) -> Result<(), SendError<OneshotDnsRequest<F>>>","parent":null,"children":[],"decl_id":null,"docs":" see [`futures::sync::mpsc::UnboundedSender`]\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2117},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550378,"byte_end":550394,"line_start":151,"line_end":151,"column_start":11,"column_end":27},"name":"DnsRequestSender","qualname":"::xfer::DnsRequestSender","value":"DnsRequestSender: Stream<Item = (), Error = ProtoError> + 'static + Display + Send","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122}],"decl_id":null,"docs":" Types that implement this are capable of sending a serialized DNS message on a stream","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2118},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550536,"byte_end":550553,"line_start":155,"line_end":155,"column_start":10,"column_end":27},"name":"DnsResponseFuture","qualname":"::xfer::DnsRequestSender::DnsResponseFuture","value":"type DnsResponseFuture: Future<Item = DnsResponse, Error = ProtoError> + 'static + Send;","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" A future that resolves to a response serial message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550785,"byte_end":550797,"line_start":162,"line_end":162,"column_start":8,"column_end":20},"name":"send_message","qualname":"::xfer::DnsRequestSender::send_message","value":"fn (&mut self, message: DnsRequest) -> Self::DnsResponseFuture","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Send a message, and return a future of the response","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550903,"byte_end":550917,"line_start":165,"line_end":165,"column_start":8,"column_end":22},"name":"error_response","qualname":"::xfer::DnsRequestSender::error_response","value":"fn (error: ProtoError) -> Self::DnsResponseFuture","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Constructs an error response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551350,"byte_end":551358,"line_start":170,"line_end":170,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::xfer::DnsRequestSender::shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Allows the upstream user to inform the underling stream that it should shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551448,"byte_end":551459,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"is_shutdown","qualname":"::xfer::DnsRequestSender::is_shutdown","value":"fn (&self) -> bool","parent":{"krate":0,"index":2117},"children":[],"decl_id":null,"docs":" Returns true if the stream has been shutdown with `shutdown`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2123},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551556,"byte_end":551581,"line_start":177,"line_end":177,"column_start":12,"column_end":37},"name":"BufDnsRequestStreamHandle","qualname":"::xfer::BufDnsRequestStreamHandle","value":"BufDnsRequestStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2125}],"decl_id":null,"docs":" Used for assiacting a name_server to a DnsRequestStreamHandle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2128},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551865,"byte_end":551868,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<BufDnsRequestStreamHandle<F>>::new","value":"fn (sender: DnsRequestStreamHandle<F>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new BufDnsRequestStreamHandle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2138},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":553374,"byte_end":553391,"line_start":241,"line_end":241,"column_start":12,"column_end":29},"name":"OneshotDnsRequest","qualname":"::xfer::OneshotDnsRequest","value":"OneshotDnsRequest {  }","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2141}],"decl_id":null,"docs":" A OneshotDnsRequest createa a channel for a response to message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554678,"byte_end":554686,"line_start":292,"line_end":292,"column_start":5,"column_end":13},"name":"Receiver","qualname":"::xfer::OneshotDnsResponseReceiver::Receiver","value":"OneshotDnsResponseReceiver::Receiver(oneshot::Receiver<F>)","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" The receiver\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2158},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554747,"byte_end":554755,"line_start":294,"line_end":294,"column_start":5,"column_end":13},"name":"Received","qualname":"::xfer::OneshotDnsResponseReceiver::Received","value":"OneshotDnsResponseReceiver::Received(F)","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" The future once received\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2161},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554804,"byte_end":554807,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"Err","qualname":"::xfer::OneshotDnsResponseReceiver::Err","value":"OneshotDnsResponseReceiver::Err(Option<ProtoError>)","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":" Error during the send operation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2153},"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554553,"byte_end":554579,"line_start":287,"line_end":287,"column_start":10,"column_end":36},"name":"OneshotDnsResponseReceiver","qualname":"::xfer::OneshotDnsResponseReceiver","value":"OneshotDnsResponseReceiver::{Receiver, Received, Err}","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2158},{"krate":0,"index":2161}],"decl_id":null,"docs":" A Future that wraps a oneshot::Receiver and resolves to the final value\n","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7728,"byte_end":7738,"line_start":201,"line_end":201,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7876,"byte_end":7886,"line_start":208,"line_end":208,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8040,"byte_end":8050,"line_start":216,"line_end":216,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8236,"byte_end":8246,"line_start":226,"line_end":226,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8389,"byte_end":8399,"line_start":232,"line_end":232,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8570,"byte_end":8580,"line_start":240,"line_end":240,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8709,"byte_end":8719,"line_start":246,"line_end":246,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8844,"byte_end":8854,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8972,"byte_end":8982,"line_start":258,"line_end":258,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9247,"byte_end":9257,"line_start":267,"line_end":267,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9404,"byte_end":9414,"line_start":273,"line_end":273,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9543,"byte_end":9553,"line_start":279,"line_end":279,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9690,"byte_end":9700,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9830,"byte_end":9840,"line_start":291,"line_end":291,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9998,"byte_end":10008,"line_start":297,"line_end":297,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10585,"byte_end":10595,"line_start":318,"line_end":318,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10747,"byte_end":10757,"line_start":324,"line_end":324,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11086,"byte_end":11099,"line_start":339,"line_end":339,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11253,"byte_end":11266,"line_start":345,"line_end":345,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11584,"byte_end":11595,"line_start":361,"line_end":361,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11749,"byte_end":11760,"line_start":367,"line_end":367,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11891,"byte_end":11896,"line_start":374,"line_end":374,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":12166,"byte_end":12172,"line_start":383,"line_end":383,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":12258,"byte_end":12272,"line_start":389,"line_end":389,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14631,"byte_end":14632,"line_start":441,"line_end":441,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17309,"byte_end":17313,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17530,"byte_end":17534,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":19222,"byte_end":19226,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":20377,"byte_end":20383,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":21420,"byte_end":21424,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25818,"byte_end":25824,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26366,"byte_end":26372,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":36536,"byte_end":36542,"line_start":377,"line_end":377,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":38042,"byte_end":38048,"line_start":424,"line_end":424,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46842,"byte_end":46849,"line_start":120,"line_end":120,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":64521,"byte_end":64528,"line_start":651,"line_end":651,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65755,"byte_end":65775,"line_start":682,"line_end":682,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65894,"byte_end":65914,"line_start":689,"line_end":689,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66774,"byte_end":66775,"line_start":712,"line_end":712,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":68961,"byte_end":68968,"line_start":776,"line_end":776,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":69378,"byte_end":69385,"line_start":791,"line_end":791,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":76489,"byte_end":76495,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79028,"byte_end":79033,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79307,"byte_end":79312,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81451,"byte_end":81456,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81695,"byte_end":81700,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":82038,"byte_end":82043,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87828,"byte_end":87840,"line_start":131,"line_end":131,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":91096,"byte_end":91108,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":94232,"byte_end":94244,"line_start":236,"line_end":236,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98889,"byte_end":98897,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":99575,"byte_end":99583,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":100417,"byte_end":100425,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":100574,"byte_end":100582,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":101933,"byte_end":101941,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":102062,"byte_end":102070,"line_start":153,"line_end":153,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":102194,"byte_end":102202,"line_start":159,"line_end":159,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":104352,"byte_end":104357,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":109922,"byte_end":109927,"line_start":203,"line_end":203,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":110009,"byte_end":110014,"line_start":209,"line_end":209,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":110544,"byte_end":110549,"line_start":227,"line_end":227,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111651,"byte_end":111656,"line_start":260,"line_end":260,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111847,"byte_end":111852,"line_start":267,"line_end":267,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111973,"byte_end":111978,"line_start":273,"line_end":273,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112096,"byte_end":112101,"line_start":279,"line_end":279,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112223,"byte_end":112228,"line_start":285,"line_end":285,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112702,"byte_end":112715,"line_start":305,"line_end":305,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112878,"byte_end":112893,"line_start":314,"line_end":314,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113294,"byte_end":113299,"line_start":332,"line_end":332,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113528,"byte_end":113534,"line_start":344,"line_end":344,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113784,"byte_end":113787,"line_start":356,"line_end":356,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":119525,"byte_end":119529,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":551},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146421,"byte_end":146434,"line_start":812,"line_end":812,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146688,"byte_end":146700,"line_start":823,"line_end":823,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147020,"byte_end":147029,"line_start":836,"line_end":836,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":593},{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147192,"byte_end":147201,"line_start":844,"line_end":844,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147242,"byte_end":147251,"line_start":845,"line_end":845,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147559,"byte_end":147563,"line_start":860,"line_end":860,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147748,"byte_end":147752,"line_start":869,"line_end":869,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":148631,"byte_end":148635,"line_start":897,"line_end":897,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150335,"byte_end":150339,"line_start":940,"line_end":940,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150475,"byte_end":150479,"line_start":946,"line_end":946,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150840,"byte_end":150844,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":151075,"byte_end":151079,"line_start":971,"line_end":971,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":156835,"byte_end":156839,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":156993,"byte_end":156997,"line_start":1114,"line_end":1114,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":157137,"byte_end":157141,"line_start":1122,"line_end":1122,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":157258,"byte_end":157262,"line_start":1128,"line_end":1128,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159293,"byte_end":159297,"line_start":1177,"line_end":1177,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159892,"byte_end":159898,"line_start":1199,"line_end":1199,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":160090,"byte_end":160091,"line_start":1206,"line_end":1206,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/try_parse_ip.rs","byte_start":174952,"byte_end":174956,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193198,"byte_end":193207,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":196296,"byte_end":196305,"line_start":480,"line_end":480,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211859,"byte_end":211862,"line_start":139,"line_end":139,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":215787,"byte_end":215795,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216860,"byte_end":216868,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217789,"byte_end":217794,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":230031,"byte_end":230039,"line_start":658,"line_end":658,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":245391,"byte_end":245393,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":253802,"byte_end":253807,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":264897,"byte_end":264901,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267393,"byte_end":267403,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276091,"byte_end":276094,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281739,"byte_end":281747,"line_start":332,"line_end":332,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283900,"byte_end":283910,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":284762,"byte_end":284772,"line_start":423,"line_end":423,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":285296,"byte_end":285306,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":285818,"byte_end":285821,"line_start":450,"line_end":450,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":286253,"byte_end":286261,"line_start":462,"line_end":462,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":290540,"byte_end":290543,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":300350,"byte_end":300353,"line_start":91,"line_end":91,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":911}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":308574,"byte_end":308579,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310299,"byte_end":310308,"line_start":121,"line_end":121,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310640,"byte_end":310649,"line_start":134,"line_end":134,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311919,"byte_end":311934,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":312199,"byte_end":312214,"line_start":194,"line_end":194,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":322521,"byte_end":322530,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324255,"byte_end":324263,"line_start":191,"line_end":191,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325879,"byte_end":325887,"line_start":252,"line_end":252,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":326479,"byte_end":326483,"line_start":276,"line_end":276,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":334911,"byte_end":334914,"line_start":42,"line_end":42,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":364168,"byte_end":364173,"line_start":597,"line_end":597,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1013},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":375851,"byte_end":375856,"line_start":866,"line_end":866,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":375974,"byte_end":375979,"line_start":872,"line_end":872,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388305,"byte_end":388315,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388943,"byte_end":388953,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":390273,"byte_end":390283,"line_start":176,"line_end":176,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":391792,"byte_end":391802,"line_start":223,"line_end":223,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":391951,"byte_end":391961,"line_start":229,"line_end":229,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395041,"byte_end":395051,"line_start":327,"line_end":327,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395252,"byte_end":395262,"line_start":334,"line_end":334,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395386,"byte_end":395396,"line_start":340,"line_end":340,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399216,"byte_end":399222,"line_start":74,"line_end":74,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399540,"byte_end":399546,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404303,"byte_end":404309,"line_start":235,"line_end":235,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404417,"byte_end":404423,"line_start":241,"line_end":241,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":405075,"byte_end":405081,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":408310,"byte_end":408316,"line_start":334,"line_end":334,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":409530,"byte_end":409536,"line_start":366,"line_end":366,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":414801,"byte_end":414810,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":429478,"byte_end":429487,"line_start":431,"line_end":431,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":430084,"byte_end":430093,"line_start":453,"line_end":453,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":430179,"byte_end":430188,"line_start":459,"line_end":459,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432509,"byte_end":432521,"line_start":536,"line_end":536,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432739,"byte_end":432751,"line_start":546,"line_end":546,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":450657,"byte_end":450667,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":459049,"byte_end":459059,"line_start":35,"line_end":35,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":461006,"byte_end":461016,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1289},{"krate":0,"index":1294},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473242,"byte_end":473248,"line_start":478,"line_end":478,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473494,"byte_end":473499,"line_start":491,"line_end":491,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473806,"byte_end":473814,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478080,"byte_end":478088,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480317,"byte_end":480325,"line_start":81,"line_end":81,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481644,"byte_end":481652,"line_start":122,"line_end":122,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1366},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":482213,"byte_end":482221,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":482773,"byte_end":482781,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":483342,"byte_end":483348,"line_start":167,"line_end":167,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":449254,"byte_end":449257,"line_start":98,"line_end":98,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":486828,"byte_end":486843,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1456},{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488086,"byte_end":488101,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488312,"byte_end":488327,"line_start":73,"line_end":73,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488545,"byte_end":488560,"line_start":79,"line_end":79,"column_start":60,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488708,"byte_end":488723,"line_start":85,"line_end":85,"column_start":51,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":489658,"byte_end":489674,"line_start":112,"line_end":112,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496625,"byte_end":496634,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1533}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496773,"byte_end":496782,"line_start":82,"line_end":82,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1537}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":499144,"byte_end":499153,"line_start":148,"line_end":148,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":500390,"byte_end":500399,"line_start":185,"line_end":185,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":516713,"byte_end":516728,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":517818,"byte_end":517833,"line_start":67,"line_end":67,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":518399,"byte_end":518414,"line_start":87,"line_end":87,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":518852,"byte_end":518867,"line_start":101,"line_end":101,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":521344,"byte_end":521359,"line_start":177,"line_end":177,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":521775,"byte_end":521786,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":522246,"byte_end":522257,"line_start":209,"line_end":209,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":522702,"byte_end":522718,"line_start":228,"line_end":228,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":523526,"byte_end":523544,"line_start":254,"line_end":254,"column_start":17,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":534971,"byte_end":534980,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":537866,"byte_end":537875,"line_start":102,"line_end":102,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":539611,"byte_end":539630,"line_start":150,"line_end":150,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":540127,"byte_end":540146,"line_start":164,"line_end":164,"column_start":17,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":557064,"byte_end":557075,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":558700,"byte_end":558711,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":562126,"byte_end":562144,"line_start":158,"line_end":158,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":562665,"byte_end":562683,"line_start":175,"line_end":175,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1793},{"krate":0,"index":1794},{"krate":0,"index":1795}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":563536,"byte_end":563559,"line_start":205,"line_end":205,"column_start":26,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567099,"byte_end":567111,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567541,"byte_end":567553,"line_start":40,"line_end":40,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568133,"byte_end":568147,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1843}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568459,"byte_end":568473,"line_start":68,"line_end":68,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":573519,"byte_end":573532,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":575973,"byte_end":575987,"line_start":128,"line_end":128,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":581320,"byte_end":581341,"line_start":271,"line_end":271,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":582133,"byte_end":582147,"line_start":297,"line_end":297,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":582412,"byte_end":582426,"line_start":307,"line_end":307,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":585912,"byte_end":585926,"line_start":402,"line_end":402,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589109,"byte_end":589137,"line_start":478,"line_end":478,"column_start":6,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589380,"byte_end":589408,"line_start":485,"line_end":485,"column_start":17,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589608,"byte_end":589636,"line_start":494,"line_end":494,"column_start":50,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589906,"byte_end":589939,"line_start":505,"line_end":505,"column_start":17,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592156,"byte_end":592166,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592625,"byte_end":592635,"line_start":52,"line_end":52,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592753,"byte_end":592763,"line_start":59,"line_end":59,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592878,"byte_end":592885,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594028,"byte_end":594039,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594581,"byte_end":594592,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594708,"byte_end":594719,"line_start":56,"line_end":56,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594832,"byte_end":594839,"line_start":62,"line_end":62,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594955,"byte_end":594966,"line_start":68,"line_end":68,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":595110,"byte_end":595121,"line_start":74,"line_end":74,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596221,"byte_end":596235,"line_start":26,"line_end":26,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596588,"byte_end":596602,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":597485,"byte_end":597500,"line_start":68,"line_end":68,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":600705,"byte_end":600718,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547472,"byte_end":547487,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548137,"byte_end":548155,"line_start":82,"line_end":82,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2103}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548601,"byte_end":548619,"line_start":97,"line_end":97,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549268,"byte_end":549290,"line_start":117,"line_end":117,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549809,"byte_end":549831,"line_start":135,"line_end":135,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551705,"byte_end":551730,"line_start":184,"line_end":184,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551986,"byte_end":552011,"line_start":194,"line_end":194,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":552542,"byte_end":552567,"line_start":219,"line_end":219,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":553550,"byte_end":553567,"line_start":249,"line_end":249,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554264,"byte_end":554282,"line_start":277,"line_end":277,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554851,"byte_end":554877,"line_start":299,"line_end":299,"column_start":20,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1261,"byte_end":1266,"line_start":51,"line_end":51,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1320,"byte_end":1322,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15488,"byte_end":15494,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":145}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15504,"byte_end":15511,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":189}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15521,"byte_end":15528,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":308}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15538,"byte_end":15543,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":315}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/mod.rs","byte_start":15553,"byte_end":15566,"line_start":25,"line_end":25,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":343}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1332,"byte_end":1334,"line_start":55,"line_end":55,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":369}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97355,"byte_end":97364,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":370}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97440,"byte_end":97446,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":401}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/mod.rs","byte_start":103169,"byte_end":103174,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":689}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97456,"byte_end":97461,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":728}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197350,"byte_end":197351,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":729}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197361,"byte_end":197365,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":735}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197375,"byte_end":197378,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":741}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197388,"byte_end":197390,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":800}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197400,"byte_end":197404,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":810}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197414,"byte_end":197419,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":816}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197429,"byte_end":197433,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":835}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197443,"byte_end":197453,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":845}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197463,"byte_end":197466,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":853}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197476,"byte_end":197479,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":886}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197489,"byte_end":197492,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":902}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197502,"byte_end":197507,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197517,"byte_end":197521,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":934}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mod.rs","byte_start":197531,"byte_end":197534,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":959}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97471,"byte_end":97482,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":982}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97492,"byte_end":97503,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1027}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/mod.rs","byte_start":97513,"byte_end":97521,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1062}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1344,"byte_end":1353,"line_start":56,"line_end":56,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1171}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/mod.rs","byte_start":446554,"byte_end":446560,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1172}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1363,"byte_end":1366,"line_start":57,"line_end":57,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1428}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1376,"byte_end":1379,"line_start":58,"line_end":58,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1559}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/lib.rs","byte_start":1389,"byte_end":1393,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1726}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546099,"byte_end":546109,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1813}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546119,"byte_end":546134,"line_start":18,"line_end":18,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":1855}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546144,"byte_end":546155,"line_start":19,"line_end":19,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1988}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546165,"byte_end":546177,"line_start":20,"line_end":20,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2004}},{"kind":"Mod","span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":546187,"byte_end":546203,"line_start":21,"line_end":21,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":2031}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7728,"byte_end":7738,"line_start":201,"line_end":201,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":7876,"byte_end":7886,"line_start":208,"line_end":208,"column_start":16,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8040,"byte_end":8050,"line_start":216,"line_end":216,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2278},"to":{"krate":17,"index":101}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8236,"byte_end":8246,"line_start":226,"line_end":226,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8389,"byte_end":8399,"line_start":232,"line_end":232,"column_start":31,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8570,"byte_end":8580,"line_start":240,"line_end":240,"column_start":40,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8709,"byte_end":8719,"line_start":246,"line_end":246,"column_start":29,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8844,"byte_end":8854,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":8972,"byte_end":8982,"line_start":258,"line_end":258,"column_start":26,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9247,"byte_end":9257,"line_start":267,"line_end":267,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9404,"byte_end":9414,"line_start":273,"line_end":273,"column_start":28,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9543,"byte_end":9553,"line_start":279,"line_end":279,"column_start":27,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9690,"byte_end":9700,"line_start":285,"line_end":285,"column_start":30,"column_end":40},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9830,"byte_end":9840,"line_start":291,"line_end":291,"column_start":27,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":9998,"byte_end":10008,"line_start":297,"line_end":297,"column_start":56,"column_end":66},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10585,"byte_end":10595,"line_start":318,"line_end":318,"column_start":34,"column_end":44},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":10747,"byte_end":10757,"line_start":324,"line_end":324,"column_start":38,"column_end":48},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2278},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11086,"byte_end":11099,"line_start":339,"line_end":339,"column_start":32,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2282},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11253,"byte_end":11266,"line_start":345,"line_end":345,"column_start":32,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2282},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11584,"byte_end":11595,"line_start":361,"line_end":361,"column_start":32,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2286},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11749,"byte_end":11760,"line_start":367,"line_end":367,"column_start":32,"column_end":43},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2286},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":11891,"byte_end":11896,"line_start":374,"line_end":374,"column_start":31,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":2392},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":12166,"byte_end":12172,"line_start":383,"line_end":383,"column_start":27,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":12258,"byte_end":12272,"line_start":389,"line_end":389,"column_start":16,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2180},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14568,"byte_end":14572,"line_start":439,"line_end":439,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2096},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14587,"byte_end":14591,"line_start":439,"line_end":439,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":17,"index":101},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14594,"byte_end":14599,"line_start":439,"line_end":439,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2056},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/error.rs","byte_start":14631,"byte_end":14632,"line_start":441,"line_end":441,"column_start":28,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":104},"to":{"krate":0,"index":102}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17309,"byte_end":17313,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":17530,"byte_end":17534,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":19222,"byte_end":19226,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2290},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":20377,"byte_end":20383,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/edns.rs","byte_start":21420,"byte_end":21424,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2290},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":25818,"byte_end":25824,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2303},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":26366,"byte_end":26372,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":36536,"byte_end":36542,"line_start":377,"line_end":377,"column_start":23,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2303},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/header.rs","byte_start":38042,"byte_end":38048,"line_start":424,"line_end":424,"column_start":31,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2303},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":46842,"byte_end":46849,"line_start":120,"line_end":120,"column_start":6,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":64521,"byte_end":64528,"line_start":651,"line_end":651,"column_start":16,"column_end":23},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2397},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":64893,"byte_end":64897,"line_start":662,"line_end":662,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":64900,"byte_end":64904,"line_start":662,"line_end":662,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1446},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65755,"byte_end":65775,"line_start":682,"line_end":682,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":65894,"byte_end":65914,"line_start":689,"line_end":689,"column_start":27,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":282},"to":{"krate":0,"index":280}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":66774,"byte_end":66775,"line_start":712,"line_end":712,"column_start":76,"column_end":77},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":295},"to":{"krate":0,"index":291}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":68961,"byte_end":68968,"line_start":776,"line_end":776,"column_start":23,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2397},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/message.rs","byte_start":69378,"byte_end":69385,"line_start":791,"line_end":791,"column_start":31,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2397},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/op_code.rs","byte_start":76489,"byte_end":76495,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79028,"byte_end":79033,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":79307,"byte_end":79312,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81451,"byte_end":81456,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":81695,"byte_end":81700,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/query.rs","byte_start":82038,"byte_end":82043,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":87828,"byte_end":87840,"line_start":131,"line_end":131,"column_start":6,"column_end":18},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":91096,"byte_end":91108,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/op/response_code.rs","byte_start":94232,"byte_end":94244,"line_start":236,"line_end":236,"column_start":20,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2448},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":98889,"byte_end":98897,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":6022}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":99575,"byte_end":99583,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":100417,"byte_end":100425,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":100574,"byte_end":100582,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":101933,"byte_end":101941,"line_start":147,"line_end":147,"column_start":31,"column_end":39},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":102062,"byte_end":102070,"line_start":153,"line_end":153,"column_start":14,"column_end":22},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/dns_class.rs","byte_start":102194,"byte_end":102202,"line_start":159,"line_end":159,"column_start":18,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":104352,"byte_end":104357,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":109922,"byte_end":109927,"line_start":203,"line_end":203,"column_start":22,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":110009,"byte_end":110014,"line_start":209,"line_end":209,"column_start":23,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":2160}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":110544,"byte_end":110549,"line_start":227,"line_end":227,"column_start":18,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111651,"byte_end":111656,"line_start":260,"line_end":260,"column_start":16,"column_end":21},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111847,"byte_end":111852,"line_start":267,"line_end":267,"column_start":27,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":111973,"byte_end":111978,"line_start":273,"line_end":273,"column_start":28,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112096,"byte_end":112101,"line_start":279,"line_end":279,"column_start":14,"column_end":19},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112223,"byte_end":112228,"line_start":285,"line_end":285,"column_start":15,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2527},"to":{"krate":2,"index":6481}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112702,"byte_end":112715,"line_start":305,"line_end":305,"column_start":19,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":466},"to":{"krate":0,"index":464}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":112878,"byte_end":112893,"line_start":314,"line_end":314,"column_start":19,"column_end":34},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":470},"to":{"krate":0,"index":464}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113056,"byte_end":113061,"line_start":321,"line_end":321,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113294,"byte_end":113299,"line_start":332,"line_end":332,"column_start":20,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2527},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113528,"byte_end":113534,"line_start":344,"line_end":344,"column_start":20,"column_end":26},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/label.rs","byte_start":113784,"byte_end":113787,"line_start":356,"line_end":356,"column_start":20,"column_end":23},"kind":{"Impl":{"id":75}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":474}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":119525,"byte_end":119529,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146421,"byte_end":146434,"line_start":812,"line_end":812,"column_start":19,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":575},"to":{"krate":0,"index":571}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":146688,"byte_end":146700,"line_start":823,"line_end":823,"column_start":19,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":581},"to":{"krate":0,"index":571}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147020,"byte_end":147029,"line_start":836,"line_end":836,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147192,"byte_end":147201,"line_start":844,"line_end":844,"column_start":32,"column_end":41},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147242,"byte_end":147251,"line_start":845,"line_end":845,"column_start":34,"column_end":43},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":587},"to":{"krate":2,"index":3360}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147559,"byte_end":147563,"line_start":860,"line_end":860,"column_start":23,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":147748,"byte_end":147752,"line_start":869,"line_end":869,"column_start":25,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":148631,"byte_end":148635,"line_start":897,"line_end":897,"column_start":25,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150335,"byte_end":150339,"line_start":940,"line_end":940,"column_start":26,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150475,"byte_end":150479,"line_start":946,"line_end":946,"column_start":15,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":6481}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":150840,"byte_end":150844,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":151075,"byte_end":151079,"line_start":971,"line_end":971,"column_start":31,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":156835,"byte_end":156839,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":156993,"byte_end":156997,"line_start":1114,"line_end":1114,"column_start":23,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":1677}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":157137,"byte_end":157141,"line_start":1122,"line_end":1122,"column_start":27,"column_end":31},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":157258,"byte_end":157262,"line_start":1128,"line_end":1128,"column_start":14,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159293,"byte_end":159297,"line_start":1177,"line_end":1177,"column_start":18,"column_end":22},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2534},"to":{"krate":2,"index":6022}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159590,"byte_end":159595,"line_start":1187,"line_end":1187,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":159892,"byte_end":159898,"line_start":1199,"line_end":1199,"column_start":19,"column_end":25},"kind":{"Impl":{"id":94}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/name.rs","byte_start":160090,"byte_end":160091,"line_start":1206,"line_end":1206,"column_start":22,"column_end":23},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":671},"to":{"krate":0,"index":663}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/try_parse_ip.rs","byte_start":174952,"byte_end":174956,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2534},"to":{"krate":0,"index":679}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":193198,"byte_end":193207,"line_start":397,"line_end":397,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/domain/usage.rs","byte_start":196296,"byte_end":196305,"line_start":480,"line_end":480,"column_start":16,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":692},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":211859,"byte_end":211862,"line_start":139,"line_end":139,"column_start":6,"column_end":9},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":215787,"byte_end":215795,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":216860,"byte_end":216868,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2810},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":217789,"byte_end":217794,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/caa.rs","byte_start":230031,"byte_end":230039,"line_start":658,"line_end":658,"column_start":6,"column_end":14},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/mx.rs","byte_start":245391,"byte_end":245393,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/naptr.rs","byte_start":253802,"byte_end":253807,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/null.rs","byte_start":264897,"byte_end":264901,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/openpgpkey.rs","byte_start":267393,"byte_end":267403,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2920},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":276091,"byte_end":276094,"line_start":168,"line_end":168,"column_start":6,"column_end":9},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":281739,"byte_end":281747,"line_start":332,"line_end":332,"column_start":20,"column_end":28},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2963},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":283900,"byte_end":283910,"line_start":399,"line_end":399,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3006},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":284762,"byte_end":284772,"line_start":423,"line_end":423,"column_start":23,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3006},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":285296,"byte_end":285306,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3006},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":285818,"byte_end":285821,"line_start":450,"line_end":450,"column_start":35,"column_end":38},"kind":{"Impl":{"id":115}},"from":{"krate":5,"index":3569},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/opt.rs","byte_start":286253,"byte_end":286261,"line_start":462,"line_end":462,"column_start":35,"column_end":43},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2963},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/soa.rs","byte_start":290540,"byte_end":290543,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/srv.rs","byte_start":300350,"byte_end":300353,"line_start":91,"line_end":91,"column_start":6,"column_end":9},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":308574,"byte_end":308579,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3070},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310299,"byte_end":310308,"line_start":121,"line_end":121,"column_start":19,"column_end":28},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":310640,"byte_end":310649,"line_start":134,"line_end":134,"column_start":19,"column_end":28},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":311919,"byte_end":311934,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3113},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/sshfp.rs","byte_start":312199,"byte_end":312214,"line_start":194,"line_end":194,"column_start":19,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3113},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":322521,"byte_end":322530,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3153},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":324255,"byte_end":324263,"line_start":191,"line_end":191,"column_start":19,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3180},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":325879,"byte_end":325887,"line_start":252,"line_end":252,"column_start":19,"column_end":27},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3203},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/tlsa.rs","byte_start":326479,"byte_end":326483,"line_start":276,"line_end":276,"column_start":6,"column_end":10},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rdata/txt.rs","byte_start":334911,"byte_end":334914,"line_start":42,"line_end":42,"column_start":6,"column_end":9},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":364168,"byte_end":364173,"line_start":597,"line_end":597,"column_start":6,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":375851,"byte_end":375856,"line_start":866,"line_end":866,"column_start":28,"column_end":33},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3242},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_data.rs","byte_start":375974,"byte_end":375979,"line_start":872,"line_end":872,"column_start":14,"column_end":19},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3242},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388305,"byte_end":388315,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":388943,"byte_end":388953,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":6022}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":390273,"byte_end":390283,"line_start":176,"line_end":176,"column_start":20,"column_end":30},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":391792,"byte_end":391802,"line_start":223,"line_end":223,"column_start":23,"column_end":33},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3328},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":391951,"byte_end":391961,"line_start":229,"line_end":229,"column_start":31,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3328},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395041,"byte_end":395051,"line_start":327,"line_end":327,"column_start":33,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395252,"byte_end":395262,"line_start":334,"line_end":334,"column_start":14,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/record_type.rs","byte_start":395386,"byte_end":395396,"line_start":340,"line_end":340,"column_start":18,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3328},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399216,"byte_end":399222,"line_start":74,"line_end":74,"column_start":18,"column_end":24},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":399540,"byte_end":399546,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404303,"byte_end":404309,"line_start":235,"line_end":235,"column_start":24,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3387},"to":{"krate":0,"index":1145}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":404417,"byte_end":404423,"line_start":241,"line_end":241,"column_start":23,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3387},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":405075,"byte_end":405081,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3387},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":408310,"byte_end":408316,"line_start":334,"line_end":334,"column_start":20,"column_end":26},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/resource.rs","byte_start":409530,"byte_end":409536,"line_start":366,"line_end":366,"column_start":29,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3387},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":414801,"byte_end":414810,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":429478,"byte_end":429487,"line_start":431,"line_end":431,"column_start":23,"column_end":32},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":429939,"byte_end":429944,"line_start":447,"line_end":447,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":1145}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":430084,"byte_end":430093,"line_start":453,"line_end":453,"column_start":24,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3401},"to":{"krate":0,"index":1145}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":430179,"byte_end":430188,"line_start":459,"line_end":459,"column_start":23,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3401},"to":{"krate":2,"index":3392}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432509,"byte_end":432521,"line_start":536,"line_end":536,"column_start":10,"column_end":22},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/rr/rr_set.rs","byte_start":432739,"byte_end":432751,"line_start":546,"line_end":546,"column_start":23,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3416},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/decoder.rs","byte_start":450657,"byte_end":450667,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":459049,"byte_end":459059,"line_start":35,"line_end":35,"column_start":14,"column_end":24},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":461006,"byte_end":461016,"line_start":100,"line_end":100,"column_start":10,"column_end":20},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473062,"byte_end":473074,"line_start":467,"line_end":467,"column_start":24,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1404},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473242,"byte_end":473248,"line_start":478,"line_end":478,"column_start":22,"column_end":28},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2303},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473494,"byte_end":473499,"line_start":491,"line_end":491,"column_start":22,"column_end":27},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/encoder.rs","byte_start":473806,"byte_end":473814,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1317},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":478080,"byte_end":478088,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":480317,"byte_end":480325,"line_start":81,"line_end":81,"column_start":13,"column_end":21},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":481644,"byte_end":481652,"line_start":122,"line_end":122,"column_start":25,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3445},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":482213,"byte_end":482221,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3445},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":482773,"byte_end":482781,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3445},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/restrict.rs","byte_start":483342,"byte_end":483348,"line_start":167,"line_end":167,"column_start":31,"column_end":37},"kind":{"Impl":{"id":170}},"from":{"krate":2,"index":32938},"to":{"krate":0,"index":1355}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":448048,"byte_end":448053,"line_start":51,"line_end":51,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1442},"to":{"krate":0,"index":1407}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/serialize/binary/mod.rs","byte_start":449254,"byte_end":449257,"line_start":98,"line_end":98,"column_start":23,"column_end":26},"kind":{"Impl":{"id":177}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":1404}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":486828,"byte_end":486843,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488086,"byte_end":488101,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488312,"byte_end":488327,"line_start":73,"line_end":73,"column_start":52,"column_end":67},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488545,"byte_end":488560,"line_start":79,"line_end":79,"column_start":60,"column_end":75},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1452},"to":{"krate":0,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":488708,"byte_end":488723,"line_start":85,"line_end":85,"column_start":51,"column_end":66},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1452},"to":{"krate":24,"index":1439}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_client_stream.rs","byte_start":489658,"byte_end":489674,"line_start":112,"line_end":112,"column_start":17,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1473},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496625,"byte_end":496634,"line_start":75,"line_end":75,"column_start":9,"column_end":18},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":496773,"byte_end":496782,"line_start":82,"line_end":82,"column_start":6,"column_end":15},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":499144,"byte_end":499153,"line_start":148,"line_end":148,"column_start":33,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/tcp/tcp_stream.rs","byte_start":500390,"byte_end":500399,"line_start":185,"line_end":185,"column_start":44,"column_end":53},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1524},"to":{"krate":24,"index":1439}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":516713,"byte_end":516728,"line_start":39,"line_end":39,"column_start":6,"column_end":21},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":517818,"byte_end":517833,"line_start":67,"line_end":67,"column_start":28,"column_end":43},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":518399,"byte_end":518414,"line_start":87,"line_end":87,"column_start":40,"column_end":55},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1590},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":518852,"byte_end":518867,"line_start":101,"line_end":101,"column_start":49,"column_end":64},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1590},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":521344,"byte_end":521359,"line_start":177,"line_end":177,"column_start":39,"column_end":54},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1590},"to":{"krate":24,"index":1439}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":521775,"byte_end":521786,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":522246,"byte_end":522257,"line_start":209,"line_end":209,"column_start":17,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1622},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":522702,"byte_end":522718,"line_start":228,"line_end":228,"column_start":39,"column_end":55},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1631},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_client_stream.rs","byte_start":523526,"byte_end":523544,"line_start":254,"line_end":254,"column_start":17,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1641},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":534971,"byte_end":534980,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":537866,"byte_end":537875,"line_start":102,"line_end":102,"column_start":17,"column_end":26},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1699},"to":{"krate":24,"index":1439}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":539611,"byte_end":539630,"line_start":150,"line_end":150,"column_start":6,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/udp/udp_stream.rs","byte_start":540127,"byte_end":540146,"line_start":164,"line_end":164,"column_start":17,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1713},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":557064,"byte_end":557075,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":558700,"byte_end":558711,"line_start":77,"line_end":77,"column_start":23,"column_end":34},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1759},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":562126,"byte_end":562144,"line_start":158,"line_end":158,"column_start":15,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":562665,"byte_end":562683,"line_start":175,"line_end":175,"column_start":26,"column_end":44},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1778},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_exchange.rs","byte_start":563536,"byte_end":563559,"line_start":205,"line_end":205,"column_start":26,"column_end":49},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1796},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567099,"byte_end":567111,"line_start":27,"line_end":27,"column_start":6,"column_end":18},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567367,"byte_end":567371,"line_start":35,"line_end":35,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":1837}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":567541,"byte_end":567553,"line_start":40,"line_end":40,"column_start":26,"column_end":38},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1833},"to":{"krate":0,"index":1837}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568133,"byte_end":568147,"line_start":56,"line_end":56,"column_start":6,"column_end":20},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":568459,"byte_end":568473,"line_start":68,"line_end":68,"column_start":20,"column_end":34},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3454},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":569707,"byte_end":569712,"line_start":103,"line_end":103,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2056},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_handle.rs","byte_start":569715,"byte_end":569719,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":573519,"byte_end":573532,"line_start":48,"line_end":48,"column_start":6,"column_end":19},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1896},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":575973,"byte_end":575987,"line_start":128,"line_end":128,"column_start":13,"column_end":27},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":581320,"byte_end":581341,"line_start":271,"line_end":271,"column_start":27,"column_end":48},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1932},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":582133,"byte_end":582147,"line_start":297,"line_end":297,"column_start":25,"column_end":39},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1912},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":582412,"byte_end":582426,"line_start":307,"line_end":307,"column_start":34,"column_end":48},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":585912,"byte_end":585926,"line_start":402,"line_end":402,"column_start":24,"column_end":38},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1912},"to":{"krate":24,"index":1439}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589109,"byte_end":589137,"line_start":478,"line_end":478,"column_start":6,"column_end":34},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589380,"byte_end":589408,"line_start":485,"line_end":485,"column_start":17,"column_end":45},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1966},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589608,"byte_end":589636,"line_start":494,"line_end":494,"column_start":50,"column_end":78},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1966},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_multiplexer.rs","byte_start":589906,"byte_end":589939,"line_start":505,"line_end":505,"column_start":17,"column_end":50},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1977},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592156,"byte_end":592166,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592625,"byte_end":592635,"line_start":52,"line_end":52,"column_start":16,"column_end":26},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3465},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592753,"byte_end":592763,"line_start":59,"line_end":59,"column_start":19,"column_end":29},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3465},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_request.rs","byte_start":592878,"byte_end":592885,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2397},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594028,"byte_end":594039,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594581,"byte_end":594592,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594708,"byte_end":594719,"line_start":56,"line_end":56,"column_start":19,"column_end":30},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594832,"byte_end":594839,"line_start":62,"line_end":62,"column_start":28,"column_end":35},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2397},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":594955,"byte_end":594966,"line_start":68,"line_end":68,"column_start":24,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/dns_response.rs","byte_start":595110,"byte_end":595121,"line_start":74,"line_end":74,"column_start":39,"column_end":50},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3470},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596221,"byte_end":596235,"line_start":26,"line_end":26,"column_start":20,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":596588,"byte_end":596602,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3478},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/retry_dns_handle.rs","byte_start":597485,"byte_end":597500,"line_start":68,"line_end":68,"column_start":31,"column_end":46},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2048},"to":{"krate":24,"index":477}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/serial_message.rs","byte_start":600705,"byte_end":600718,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547136,"byte_end":547142,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":24,"index":1439},"to":{"krate":0,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547187,"byte_end":547194,"line_start":47,"line_end":47,"column_start":56,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":6826},"to":{"krate":0,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547197,"byte_end":547201,"line_start":47,"line_end":47,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":2093}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":547472,"byte_end":547487,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548137,"byte_end":548155,"line_start":82,"line_end":82,"column_start":6,"column_end":24},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":548601,"byte_end":548619,"line_start":97,"line_end":97,"column_start":26,"column_end":44},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2099},"to":{"krate":0,"index":1837}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549268,"byte_end":549290,"line_start":117,"line_end":117,"column_start":9,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":549809,"byte_end":549831,"line_start":135,"line_end":135,"column_start":19,"column_end":41},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2107},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550400,"byte_end":550406,"line_start":152,"line_end":152,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":24,"index":1439},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550450,"byte_end":550457,"line_start":152,"line_end":152,"column_start":55,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":6826},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":550460,"byte_end":550464,"line_start":152,"line_end":152,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1437},"to":{"krate":0,"index":2117}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551705,"byte_end":551730,"line_start":184,"line_end":184,"column_start":9,"column_end":34},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":551986,"byte_end":552011,"line_start":194,"line_end":194,"column_start":19,"column_end":44},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2123},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":552542,"byte_end":552567,"line_start":219,"line_end":219,"column_start":23,"column_end":48},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2123},"to":{"krate":0,"index":1849}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":553550,"byte_end":553567,"line_start":249,"line_end":249,"column_start":9,"column_end":26},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554264,"byte_end":554282,"line_start":277,"line_end":277,"column_start":9,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/index197511/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.7.4/src/xfer/mod.rs","byte_start":554851,"byte_end":554877,"line_start":299,"line_end":299,"column_start":20,"column_end":46},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2153},"to":{"krate":24,"index":477}}]}